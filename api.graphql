### This file was generated by Nexus Schema
### Do not make changes to this file directly


input ActivityTypeCreateNestedOneWithoutUserActivityInput {
  connect: ActivityTypeWhereUniqueInput
  connectOrCreate: ActivityTypeCreateOrConnectWithoutUserActivityInput
  create: ActivityTypeCreateWithoutUserActivityInput
}

input ActivityTypeCreateOrConnectWithoutUserActivityInput {
  create: ActivityTypeCreateWithoutUserActivityInput!
  where: ActivityTypeWhereUniqueInput!
}

input ActivityTypeCreateWithoutUserActivityInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input ActivityTypeUpdateOneRequiredWithoutUserActivityInput {
  connect: ActivityTypeWhereUniqueInput
  connectOrCreate: ActivityTypeCreateOrConnectWithoutUserActivityInput
  create: ActivityTypeCreateWithoutUserActivityInput
  update: ActivityTypeUpdateWithoutUserActivityInput
  upsert: ActivityTypeUpsertWithoutUserActivityInput
}

input ActivityTypeUpdateWithoutUserActivityInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ActivityTypeUpsertWithoutUserActivityInput {
  create: ActivityTypeCreateWithoutUserActivityInput!
  update: ActivityTypeUpdateWithoutUserActivityInput!
}

input ActivityTypeWhereInput {
  AND: [ActivityTypeWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [ActivityTypeWhereInput!]
  OR: [ActivityTypeWhereInput!]
  updatedAt: DateTimeFilter
  UserActivity: UserActivityListRelationFilter
}

input ActivityTypeWhereUniqueInput {
  id: String
}

enum AnswerType {
  MultipleChoice
  SPR
  Voice
}

input BadgeCreateNestedOneWithoutUserBadgeInput {
  connect: BadgeWhereUniqueInput
  connectOrCreate: BadgeCreateOrConnectWithoutUserBadgeInput
  create: BadgeCreateWithoutUserBadgeInput
}

input BadgeCreateOrConnectWithoutUserBadgeInput {
  create: BadgeCreateWithoutUserBadgeInput!
  where: BadgeWhereUniqueInput!
}

input BadgeCreateWithoutUserBadgeInput {
  BadgeType: BadgeTypeCreateNestedOneWithoutBadgeInput!
  createdAt: DateTime
  id: String
  logo: String!
  name: String!
  updatedAt: DateTime
}

input BadgeListRelationFilter {
  every: BadgeWhereInput
  none: BadgeWhereInput
  some: BadgeWhereInput
}

input BadgeStatusCreateNestedOneWithoutUserBadgeInput {
  connect: BadgeStatusWhereUniqueInput
  connectOrCreate: BadgeStatusCreateOrConnectWithoutUserBadgeInput
  create: BadgeStatusCreateWithoutUserBadgeInput
}

input BadgeStatusCreateOrConnectWithoutUserBadgeInput {
  create: BadgeStatusCreateWithoutUserBadgeInput!
  where: BadgeStatusWhereUniqueInput!
}

input BadgeStatusCreateWithoutUserBadgeInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input BadgeStatusUpdateOneRequiredWithoutUserBadgeInput {
  connect: BadgeStatusWhereUniqueInput
  connectOrCreate: BadgeStatusCreateOrConnectWithoutUserBadgeInput
  create: BadgeStatusCreateWithoutUserBadgeInput
  update: BadgeStatusUpdateWithoutUserBadgeInput
  upsert: BadgeStatusUpsertWithoutUserBadgeInput
}

input BadgeStatusUpdateWithoutUserBadgeInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BadgeStatusUpsertWithoutUserBadgeInput {
  create: BadgeStatusCreateWithoutUserBadgeInput!
  update: BadgeStatusUpdateWithoutUserBadgeInput!
}

input BadgeStatusWhereInput {
  AND: [BadgeStatusWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [BadgeStatusWhereInput!]
  OR: [BadgeStatusWhereInput!]
  updatedAt: DateTimeFilter
  UserBadge: UserBadgeListRelationFilter
}

input BadgeStatusWhereUniqueInput {
  id: String
}

input BadgeTypeCreateNestedOneWithoutBadgeInput {
  connect: BadgeTypeWhereUniqueInput
  connectOrCreate: BadgeTypeCreateOrConnectWithoutBadgeInput
  create: BadgeTypeCreateWithoutBadgeInput
}

input BadgeTypeCreateOrConnectWithoutBadgeInput {
  create: BadgeTypeCreateWithoutBadgeInput!
  where: BadgeTypeWhereUniqueInput!
}

input BadgeTypeCreateWithoutBadgeInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input BadgeTypeUpdateOneRequiredWithoutBadgeInput {
  connect: BadgeTypeWhereUniqueInput
  connectOrCreate: BadgeTypeCreateOrConnectWithoutBadgeInput
  create: BadgeTypeCreateWithoutBadgeInput
  update: BadgeTypeUpdateWithoutBadgeInput
  upsert: BadgeTypeUpsertWithoutBadgeInput
}

input BadgeTypeUpdateWithoutBadgeInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BadgeTypeUpsertWithoutBadgeInput {
  create: BadgeTypeCreateWithoutBadgeInput!
  update: BadgeTypeUpdateWithoutBadgeInput!
}

input BadgeTypeWhereInput {
  AND: [BadgeTypeWhereInput!]
  Badge: BadgeListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [BadgeTypeWhereInput!]
  OR: [BadgeTypeWhereInput!]
  updatedAt: DateTimeFilter
}

input BadgeTypeWhereUniqueInput {
  id: String
}

input BadgeUpdateOneRequiredWithoutUserBadgeInput {
  connect: BadgeWhereUniqueInput
  connectOrCreate: BadgeCreateOrConnectWithoutUserBadgeInput
  create: BadgeCreateWithoutUserBadgeInput
  update: BadgeUpdateWithoutUserBadgeInput
  upsert: BadgeUpsertWithoutUserBadgeInput
}

input BadgeUpdateWithoutUserBadgeInput {
  BadgeType: BadgeTypeUpdateOneRequiredWithoutBadgeInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input BadgeUpsertWithoutUserBadgeInput {
  create: BadgeCreateWithoutUserBadgeInput!
  update: BadgeUpdateWithoutUserBadgeInput!
}

input BadgeWhereInput {
  AND: [BadgeWhereInput!]
  BadgeType: BadgeTypeWhereInput
  badgeTypeId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  logo: StringFilter
  name: StringFilter
  NOT: [BadgeWhereInput!]
  OR: [BadgeWhereInput!]
  updatedAt: DateTimeFilter
  UserBadge: UserBadgeListRelationFilter
}

input BadgeWhereUniqueInput {
  id: String
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

type Career {
  createdAt: DateTime!
  id: String!
  name: String!
  updatedAt: DateTime!
}

input CareerCreateInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
  UserCareer: UserCareerCreateNestedManyWithoutCareerInput
}

input CareerCreateNestedOneWithoutUserCareerInput {
  connect: CareerWhereUniqueInput
  connectOrCreate: CareerCreateOrConnectWithoutUserCareerInput
  create: CareerCreateWithoutUserCareerInput
}

input CareerCreateOrConnectWithoutUserCareerInput {
  create: CareerCreateWithoutUserCareerInput!
  where: CareerWhereUniqueInput!
}

input CareerCreateWithoutUserCareerInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input CareerUpdateOneRequiredWithoutUserCareerInput {
  connect: CareerWhereUniqueInput
  connectOrCreate: CareerCreateOrConnectWithoutUserCareerInput
  create: CareerCreateWithoutUserCareerInput
  update: CareerUpdateWithoutUserCareerInput
  upsert: CareerUpsertWithoutUserCareerInput
}

input CareerUpdateWithoutUserCareerInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CareerUpsertWithoutUserCareerInput {
  create: CareerCreateWithoutUserCareerInput!
  update: CareerUpdateWithoutUserCareerInput!
}

input CareerWhereInput {
  AND: [CareerWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [CareerWhereInput!]
  OR: [CareerWhereInput!]
  updatedAt: DateTimeFilter
  UserCareer: UserCareerListRelationFilter
}

input CareerWhereUniqueInput {
  id: String
}

type Content {
  Answers(after: ContentAnswerWhereUniqueInput, before: ContentAnswerWhereUniqueInput, first: Int, last: Int): [ContentAnswer!]!
  answerType: AnswerType!
  contentSize: Float
  contentText: String
  contentType: ContentType!
  createdAt: DateTime!
  id: String!
  mediaType: MediaType!
  orderNum: Int
  Post: Post!
  sourcePath: String
  updatedAt: DateTime!
  voiceOverPath: String
}

type ContentAnswer {
  answer: String
  createdAt: DateTime!
  id: String!
  mediaType: MediaType!
  Point: Float!
  sourcePath: String
  updatedAt: DateTime!
}

input ContentAnswerCreateInput {
  answer: String
  Content: ContentCreateNestedOneWithoutAnswersInput
  createdAt: DateTime
  id: String
  mediaType: MediaType!
  Point: Float
  sourcePath: String
  updatedAt: DateTime
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutAnswerInput
}

input ContentAnswerCreateNestedManyWithoutContentInput {
  connect: [ContentAnswerWhereUniqueInput!]
  connectOrCreate: [ContentAnswerCreateOrConnectWithoutContentInput!]
  create: [ContentAnswerCreateWithoutContentInput!]
}

input ContentAnswerCreateNestedOneWithoutUserAnswersOnContentsInput {
  connect: ContentAnswerWhereUniqueInput
  connectOrCreate: ContentAnswerCreateOrConnectWithoutUserAnswersOnContentsInput
  create: ContentAnswerCreateWithoutUserAnswersOnContentsInput
}

input ContentAnswerCreateOrConnectWithoutContentInput {
  create: ContentAnswerCreateWithoutContentInput!
  where: ContentAnswerWhereUniqueInput!
}

input ContentAnswerCreateOrConnectWithoutUserAnswersOnContentsInput {
  create: ContentAnswerCreateWithoutUserAnswersOnContentsInput!
  where: ContentAnswerWhereUniqueInput!
}

input ContentAnswerCreateWithoutContentInput {
  answer: String
  createdAt: DateTime
  id: String
  mediaType: MediaType!
  Point: Float
  sourcePath: String
  updatedAt: DateTime
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutAnswerInput
}

input ContentAnswerCreateWithoutUserAnswersOnContentsInput {
  answer: String
  Content: ContentCreateNestedOneWithoutAnswersInput
  createdAt: DateTime
  id: String
  mediaType: MediaType!
  Point: Float
  sourcePath: String
  updatedAt: DateTime
}

input ContentAnswerListRelationFilter {
  every: ContentAnswerWhereInput
  none: ContentAnswerWhereInput
  some: ContentAnswerWhereInput
}

input ContentAnswerScalarWhereInput {
  AND: [ContentAnswerScalarWhereInput!]
  answer: StringNullableFilter
  contentId: StringNullableFilter
  createdAt: DateTimeFilter
  id: StringFilter
  mediaType: EnumMediaTypeFilter
  NOT: [ContentAnswerScalarWhereInput!]
  OR: [ContentAnswerScalarWhereInput!]
  Point: FloatFilter
  sourcePath: StringNullableFilter
  updatedAt: DateTimeFilter
}

input ContentAnswerUpdateManyMutationInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  Point: FloatFieldUpdateOperationsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContentAnswerUpdateManyWithoutContentInput {
  connect: [ContentAnswerWhereUniqueInput!]
  connectOrCreate: [ContentAnswerCreateOrConnectWithoutContentInput!]
  create: [ContentAnswerCreateWithoutContentInput!]
  delete: [ContentAnswerWhereUniqueInput!]
  deleteMany: [ContentAnswerScalarWhereInput!]
  disconnect: [ContentAnswerWhereUniqueInput!]
  set: [ContentAnswerWhereUniqueInput!]
  update: [ContentAnswerUpdateWithWhereUniqueWithoutContentInput!]
  updateMany: [ContentAnswerUpdateManyWithWhereWithoutContentInput!]
  upsert: [ContentAnswerUpsertWithWhereUniqueWithoutContentInput!]
}

input ContentAnswerUpdateManyWithWhereWithoutContentInput {
  data: ContentAnswerUpdateManyMutationInput!
  where: ContentAnswerScalarWhereInput!
}

input ContentAnswerUpdateOneWithoutUserAnswersOnContentsInput {
  connect: ContentAnswerWhereUniqueInput
  connectOrCreate: ContentAnswerCreateOrConnectWithoutUserAnswersOnContentsInput
  create: ContentAnswerCreateWithoutUserAnswersOnContentsInput
  delete: Boolean
  disconnect: Boolean
  update: ContentAnswerUpdateWithoutUserAnswersOnContentsInput
  upsert: ContentAnswerUpsertWithoutUserAnswersOnContentsInput
}

input ContentAnswerUpdateWithoutContentInput {
  answer: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  Point: FloatFieldUpdateOperationsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutAnswerInput
}

input ContentAnswerUpdateWithoutUserAnswersOnContentsInput {
  answer: NullableStringFieldUpdateOperationsInput
  Content: ContentUpdateOneWithoutAnswersInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  Point: FloatFieldUpdateOperationsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContentAnswerUpdateWithWhereUniqueWithoutContentInput {
  data: ContentAnswerUpdateWithoutContentInput!
  where: ContentAnswerWhereUniqueInput!
}

input ContentAnswerUpsertWithoutUserAnswersOnContentsInput {
  create: ContentAnswerCreateWithoutUserAnswersOnContentsInput!
  update: ContentAnswerUpdateWithoutUserAnswersOnContentsInput!
}

input ContentAnswerUpsertWithWhereUniqueWithoutContentInput {
  create: ContentAnswerCreateWithoutContentInput!
  update: ContentAnswerUpdateWithoutContentInput!
  where: ContentAnswerWhereUniqueInput!
}

input ContentAnswerWhereInput {
  AND: [ContentAnswerWhereInput!]
  answer: StringNullableFilter
  Content: ContentWhereInput
  contentId: StringNullableFilter
  createdAt: DateTimeFilter
  id: StringFilter
  mediaType: EnumMediaTypeFilter
  NOT: [ContentAnswerWhereInput!]
  OR: [ContentAnswerWhereInput!]
  Point: FloatFilter
  sourcePath: StringNullableFilter
  updatedAt: DateTimeFilter
  UserAnswersOnContents: UserAnswersOnContentsListRelationFilter
}

input ContentAnswerWhereUniqueInput {
  id: String
}

input ContentCreateInput {
  Answers: ContentAnswerCreateNestedManyWithoutContentInput
  answerType: AnswerType!
  contentSize: Float
  contentText: String
  contentType: ContentType!
  createdAt: DateTime
  id: String
  LearningObjects: LearningObjectCreateNestedManyWithoutContentsInput
  mediaType: MediaType!
  orderNum: Int
  Post: PostCreateNestedOneWithoutContentsInput!
  sourcePath: String
  updatedAt: DateTime
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutContentInput
  voiceOverPath: String
}

input ContentCreateNestedManyWithoutLearningObjectsInput {
  connect: [ContentWhereUniqueInput!]
  connectOrCreate: [ContentCreateOrConnectWithoutLearningObjectsInput!]
  create: [ContentCreateWithoutLearningObjectsInput!]
}

input ContentCreateNestedManyWithoutPostInput {
  connect: [ContentWhereUniqueInput!]
  connectOrCreate: [ContentCreateOrConnectWithoutPostInput!]
  create: [ContentCreateWithoutPostInput!]
}

input ContentCreateNestedOneWithoutAnswersInput {
  connect: ContentWhereUniqueInput
  connectOrCreate: ContentCreateOrConnectWithoutAnswersInput
  create: ContentCreateWithoutAnswersInput
}

input ContentCreateNestedOneWithoutUserAnswersOnContentsInput {
  connect: ContentWhereUniqueInput
  connectOrCreate: ContentCreateOrConnectWithoutUserAnswersOnContentsInput
  create: ContentCreateWithoutUserAnswersOnContentsInput
}

input ContentCreateOrConnectWithoutAnswersInput {
  create: ContentCreateWithoutAnswersInput!
  where: ContentWhereUniqueInput!
}

input ContentCreateOrConnectWithoutLearningObjectsInput {
  create: ContentCreateWithoutLearningObjectsInput!
  where: ContentWhereUniqueInput!
}

input ContentCreateOrConnectWithoutPostInput {
  create: ContentCreateWithoutPostInput!
  where: ContentWhereUniqueInput!
}

input ContentCreateOrConnectWithoutUserAnswersOnContentsInput {
  create: ContentCreateWithoutUserAnswersOnContentsInput!
  where: ContentWhereUniqueInput!
}

input ContentCreateWithoutAnswersInput {
  answerType: AnswerType!
  contentSize: Float
  contentText: String
  contentType: ContentType!
  createdAt: DateTime
  id: String
  LearningObjects: LearningObjectCreateNestedManyWithoutContentsInput
  mediaType: MediaType!
  orderNum: Int
  Post: PostCreateNestedOneWithoutContentsInput!
  sourcePath: String
  updatedAt: DateTime
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutContentInput
  voiceOverPath: String
}

input ContentCreateWithoutLearningObjectsInput {
  Answers: ContentAnswerCreateNestedManyWithoutContentInput
  answerType: AnswerType!
  contentSize: Float
  contentText: String
  contentType: ContentType!
  createdAt: DateTime
  id: String
  mediaType: MediaType!
  orderNum: Int
  Post: PostCreateNestedOneWithoutContentsInput!
  sourcePath: String
  updatedAt: DateTime
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutContentInput
  voiceOverPath: String
}

input ContentCreateWithoutPostInput {
  Answers: ContentAnswerCreateNestedManyWithoutContentInput
  answerType: AnswerType!
  contentSize: Float
  contentText: String
  contentType: ContentType!
  createdAt: DateTime
  id: String
  LearningObjects: LearningObjectCreateNestedManyWithoutContentsInput
  mediaType: MediaType!
  orderNum: Int
  sourcePath: String
  updatedAt: DateTime
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutContentInput
  voiceOverPath: String
}

input ContentCreateWithoutUserAnswersOnContentsInput {
  Answers: ContentAnswerCreateNestedManyWithoutContentInput
  answerType: AnswerType!
  contentSize: Float
  contentText: String
  contentType: ContentType!
  createdAt: DateTime
  id: String
  LearningObjects: LearningObjectCreateNestedManyWithoutContentsInput
  mediaType: MediaType!
  orderNum: Int
  Post: PostCreateNestedOneWithoutContentsInput!
  sourcePath: String
  updatedAt: DateTime
  voiceOverPath: String
}

input ContentListRelationFilter {
  every: ContentWhereInput
  none: ContentWhereInput
  some: ContentWhereInput
}

input ContentOrderByInput {
  answerType: SortOrder
  contentSize: SortOrder
  contentText: SortOrder
  contentType: SortOrder
  createdAt: SortOrder
  id: SortOrder
  mediaType: SortOrder
  orderNum: SortOrder
  Post: PostOrderByInput
  postId: SortOrder
  sourcePath: SortOrder
  updatedAt: SortOrder
  voiceOverPath: SortOrder
}

input ContentScalarWhereInput {
  AND: [ContentScalarWhereInput!]
  answerType: EnumAnswerTypeFilter
  contentSize: FloatNullableFilter
  contentText: StringNullableFilter
  contentType: EnumContentTypeFilter
  createdAt: DateTimeFilter
  id: StringFilter
  mediaType: EnumMediaTypeFilter
  NOT: [ContentScalarWhereInput!]
  OR: [ContentScalarWhereInput!]
  orderNum: IntNullableFilter
  postId: StringFilter
  sourcePath: StringNullableFilter
  updatedAt: DateTimeFilter
  voiceOverPath: StringNullableFilter
}

enum ContentType {
  Assessment
  Learning
  Practice
}

input ContentUpdateManyMutationInput {
  answerType: EnumAnswerTypeFieldUpdateOperationsInput
  contentSize: NullableFloatFieldUpdateOperationsInput
  contentText: NullableStringFieldUpdateOperationsInput
  contentType: EnumContentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  orderNum: NullableIntFieldUpdateOperationsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voiceOverPath: NullableStringFieldUpdateOperationsInput
}

input ContentUpdateManyWithoutLearningObjectsInput {
  connect: [ContentWhereUniqueInput!]
  connectOrCreate: [ContentCreateOrConnectWithoutLearningObjectsInput!]
  create: [ContentCreateWithoutLearningObjectsInput!]
  delete: [ContentWhereUniqueInput!]
  deleteMany: [ContentScalarWhereInput!]
  disconnect: [ContentWhereUniqueInput!]
  set: [ContentWhereUniqueInput!]
  update: [ContentUpdateWithWhereUniqueWithoutLearningObjectsInput!]
  updateMany: [ContentUpdateManyWithWhereWithoutLearningObjectsInput!]
  upsert: [ContentUpsertWithWhereUniqueWithoutLearningObjectsInput!]
}

input ContentUpdateManyWithoutPostInput {
  connect: [ContentWhereUniqueInput!]
  connectOrCreate: [ContentCreateOrConnectWithoutPostInput!]
  create: [ContentCreateWithoutPostInput!]
  delete: [ContentWhereUniqueInput!]
  deleteMany: [ContentScalarWhereInput!]
  disconnect: [ContentWhereUniqueInput!]
  set: [ContentWhereUniqueInput!]
  update: [ContentUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [ContentUpdateManyWithWhereWithoutPostInput!]
  upsert: [ContentUpsertWithWhereUniqueWithoutPostInput!]
}

input ContentUpdateManyWithWhereWithoutLearningObjectsInput {
  data: ContentUpdateManyMutationInput!
  where: ContentScalarWhereInput!
}

input ContentUpdateManyWithWhereWithoutPostInput {
  data: ContentUpdateManyMutationInput!
  where: ContentScalarWhereInput!
}

input ContentUpdateOneRequiredWithoutUserAnswersOnContentsInput {
  connect: ContentWhereUniqueInput
  connectOrCreate: ContentCreateOrConnectWithoutUserAnswersOnContentsInput
  create: ContentCreateWithoutUserAnswersOnContentsInput
  update: ContentUpdateWithoutUserAnswersOnContentsInput
  upsert: ContentUpsertWithoutUserAnswersOnContentsInput
}

input ContentUpdateOneWithoutAnswersInput {
  connect: ContentWhereUniqueInput
  connectOrCreate: ContentCreateOrConnectWithoutAnswersInput
  create: ContentCreateWithoutAnswersInput
  delete: Boolean
  disconnect: Boolean
  update: ContentUpdateWithoutAnswersInput
  upsert: ContentUpsertWithoutAnswersInput
}

input ContentUpdateWithoutAnswersInput {
  answerType: EnumAnswerTypeFieldUpdateOperationsInput
  contentSize: NullableFloatFieldUpdateOperationsInput
  contentText: NullableStringFieldUpdateOperationsInput
  contentType: EnumContentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  LearningObjects: LearningObjectUpdateManyWithoutContentsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  orderNum: NullableIntFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutContentsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutContentInput
  voiceOverPath: NullableStringFieldUpdateOperationsInput
}

input ContentUpdateWithoutLearningObjectsInput {
  Answers: ContentAnswerUpdateManyWithoutContentInput
  answerType: EnumAnswerTypeFieldUpdateOperationsInput
  contentSize: NullableFloatFieldUpdateOperationsInput
  contentText: NullableStringFieldUpdateOperationsInput
  contentType: EnumContentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  orderNum: NullableIntFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutContentsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutContentInput
  voiceOverPath: NullableStringFieldUpdateOperationsInput
}

input ContentUpdateWithoutPostInput {
  Answers: ContentAnswerUpdateManyWithoutContentInput
  answerType: EnumAnswerTypeFieldUpdateOperationsInput
  contentSize: NullableFloatFieldUpdateOperationsInput
  contentText: NullableStringFieldUpdateOperationsInput
  contentType: EnumContentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  LearningObjects: LearningObjectUpdateManyWithoutContentsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  orderNum: NullableIntFieldUpdateOperationsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutContentInput
  voiceOverPath: NullableStringFieldUpdateOperationsInput
}

input ContentUpdateWithoutUserAnswersOnContentsInput {
  Answers: ContentAnswerUpdateManyWithoutContentInput
  answerType: EnumAnswerTypeFieldUpdateOperationsInput
  contentSize: NullableFloatFieldUpdateOperationsInput
  contentText: NullableStringFieldUpdateOperationsInput
  contentType: EnumContentTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  LearningObjects: LearningObjectUpdateManyWithoutContentsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  orderNum: NullableIntFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutContentsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  voiceOverPath: NullableStringFieldUpdateOperationsInput
}

input ContentUpdateWithWhereUniqueWithoutLearningObjectsInput {
  data: ContentUpdateWithoutLearningObjectsInput!
  where: ContentWhereUniqueInput!
}

input ContentUpdateWithWhereUniqueWithoutPostInput {
  data: ContentUpdateWithoutPostInput!
  where: ContentWhereUniqueInput!
}

input ContentUpsertWithoutAnswersInput {
  create: ContentCreateWithoutAnswersInput!
  update: ContentUpdateWithoutAnswersInput!
}

input ContentUpsertWithoutUserAnswersOnContentsInput {
  create: ContentCreateWithoutUserAnswersOnContentsInput!
  update: ContentUpdateWithoutUserAnswersOnContentsInput!
}

input ContentUpsertWithWhereUniqueWithoutLearningObjectsInput {
  create: ContentCreateWithoutLearningObjectsInput!
  update: ContentUpdateWithoutLearningObjectsInput!
  where: ContentWhereUniqueInput!
}

input ContentUpsertWithWhereUniqueWithoutPostInput {
  create: ContentCreateWithoutPostInput!
  update: ContentUpdateWithoutPostInput!
  where: ContentWhereUniqueInput!
}

input ContentWhereInput {
  AND: [ContentWhereInput!]
  Answers: ContentAnswerListRelationFilter
  answerType: EnumAnswerTypeFilter
  contentSize: FloatNullableFilter
  contentText: StringNullableFilter
  contentType: EnumContentTypeFilter
  createdAt: DateTimeFilter
  id: StringFilter
  LearningObjects: LearningObjectListRelationFilter
  mediaType: EnumMediaTypeFilter
  NOT: [ContentWhereInput!]
  OR: [ContentWhereInput!]
  orderNum: IntNullableFilter
  Post: PostWhereInput
  postId: StringFilter
  sourcePath: StringNullableFilter
  updatedAt: DateTimeFilter
  UserAnswersOnContents: UserAnswersOnContentsListRelationFilter
  voiceOverPath: StringNullableFilter
}

input ContentWhereUniqueInput {
  id: String
}

type Curriculum {
  ChildCurriculums(after: CurriculumWhereUniqueInput, before: CurriculumWhereUniqueInput, first: Int, last: Int): [Curriculum!]!
  createdAt: DateTime!
  CurriculumSchools(after: CurriculumSchoolWhereUniqueInput, before: CurriculumSchoolWhereUniqueInput, first: Int, last: Int): [CurriculumSchool!]!
  CurriculumScores(after: CurriculumScoresWhereUniqueInput, before: CurriculumScoresWhereUniqueInput, first: Int, last: Int): [CurriculumScores!]!
  id: String!
  levelId: String
  name: String!
  ParentCurriculum: Curriculum
  parentId: String
  point: Float!
  subjectId: String
  updatedAt: DateTime!
}

input CurriculumCreateNestedManyWithoutParentCurriculumInput {
  connect: [CurriculumWhereUniqueInput!]
  connectOrCreate: [CurriculumCreateOrConnectWithoutParentCurriculumInput!]
  create: [CurriculumCreateWithoutParentCurriculumInput!]
}

input CurriculumCreateNestedOneWithoutChildCurriculumsInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutChildCurriculumsInput
  create: CurriculumCreateWithoutChildCurriculumsInput
}

input CurriculumCreateNestedOneWithoutCurriculumSchoolsInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutCurriculumSchoolsInput
  create: CurriculumCreateWithoutCurriculumSchoolsInput
}

input CurriculumCreateNestedOneWithoutPostCurriculumInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutPostCurriculumInput
  create: CurriculumCreateWithoutPostCurriculumInput
}

input CurriculumCreateNestedOneWithoutUserCurriculumRateInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutUserCurriculumRateInput
  create: CurriculumCreateWithoutUserCurriculumRateInput
}

input CurriculumCreateNestedOneWithoutUserCurriculumRetentionInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutUserCurriculumRetentionInput
  create: CurriculumCreateWithoutUserCurriculumRetentionInput
}

input CurriculumCreateNestedOneWithoutUserCurriculumsInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutUserCurriculumsInput
  create: CurriculumCreateWithoutUserCurriculumsInput
}

input CurriculumCreateNestedOneWithoutUserLearningCurriculumInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutUserLearningCurriculumInput
  create: CurriculumCreateWithoutUserLearningCurriculumInput
}

input CurriculumCreateOrConnectWithoutChildCurriculumsInput {
  create: CurriculumCreateWithoutChildCurriculumsInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumCreateOrConnectWithoutCurriculumSchoolsInput {
  create: CurriculumCreateWithoutCurriculumSchoolsInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumCreateOrConnectWithoutParentCurriculumInput {
  create: CurriculumCreateWithoutParentCurriculumInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumCreateOrConnectWithoutPostCurriculumInput {
  create: CurriculumCreateWithoutPostCurriculumInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumCreateOrConnectWithoutUserCurriculumRateInput {
  create: CurriculumCreateWithoutUserCurriculumRateInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumCreateOrConnectWithoutUserCurriculumRetentionInput {
  create: CurriculumCreateWithoutUserCurriculumRetentionInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumCreateOrConnectWithoutUserCurriculumsInput {
  create: CurriculumCreateWithoutUserCurriculumsInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumCreateOrConnectWithoutUserLearningCurriculumInput {
  create: CurriculumCreateWithoutUserLearningCurriculumInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumCreateWithoutChildCurriculumsInput {
  createdAt: DateTime
  CurriculumSchools: CurriculumSchoolCreateNestedManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresCreateNestedManyWithoutCurriculumInput
  id: String
  Level: CurriculumLevelCreateNestedOneWithoutCurriculumInput
  name: String!
  ParentCurriculum: CurriculumCreateNestedOneWithoutChildCurriculumsInput
  point: Float
  PostCurriculum: PostCurriculumCreateNestedManyWithoutCurriculumInput
  Subject: SubjectCreateNestedOneWithoutCurriculumInput
  updatedAt: DateTime
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumCreateNestedManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutCurriculumInput
}

input CurriculumCreateWithoutCurriculumSchoolsInput {
  ChildCurriculums: CurriculumCreateNestedManyWithoutParentCurriculumInput
  createdAt: DateTime
  CurriculumScores: CurriculumScoresCreateNestedManyWithoutCurriculumInput
  id: String
  Level: CurriculumLevelCreateNestedOneWithoutCurriculumInput
  name: String!
  ParentCurriculum: CurriculumCreateNestedOneWithoutChildCurriculumsInput
  point: Float
  PostCurriculum: PostCurriculumCreateNestedManyWithoutCurriculumInput
  Subject: SubjectCreateNestedOneWithoutCurriculumInput
  updatedAt: DateTime
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumCreateNestedManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutCurriculumInput
}

input CurriculumCreateWithoutParentCurriculumInput {
  ChildCurriculums: CurriculumCreateNestedManyWithoutParentCurriculumInput
  createdAt: DateTime
  CurriculumSchools: CurriculumSchoolCreateNestedManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresCreateNestedManyWithoutCurriculumInput
  id: String
  Level: CurriculumLevelCreateNestedOneWithoutCurriculumInput
  name: String!
  point: Float
  PostCurriculum: PostCurriculumCreateNestedManyWithoutCurriculumInput
  Subject: SubjectCreateNestedOneWithoutCurriculumInput
  updatedAt: DateTime
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumCreateNestedManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutCurriculumInput
}

input CurriculumCreateWithoutPostCurriculumInput {
  ChildCurriculums: CurriculumCreateNestedManyWithoutParentCurriculumInput
  createdAt: DateTime
  CurriculumSchools: CurriculumSchoolCreateNestedManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresCreateNestedManyWithoutCurriculumInput
  id: String
  Level: CurriculumLevelCreateNestedOneWithoutCurriculumInput
  name: String!
  ParentCurriculum: CurriculumCreateNestedOneWithoutChildCurriculumsInput
  point: Float
  Subject: SubjectCreateNestedOneWithoutCurriculumInput
  updatedAt: DateTime
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumCreateNestedManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutCurriculumInput
}

input CurriculumCreateWithoutUserCurriculumRateInput {
  ChildCurriculums: CurriculumCreateNestedManyWithoutParentCurriculumInput
  createdAt: DateTime
  CurriculumSchools: CurriculumSchoolCreateNestedManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresCreateNestedManyWithoutCurriculumInput
  id: String
  Level: CurriculumLevelCreateNestedOneWithoutCurriculumInput
  name: String!
  ParentCurriculum: CurriculumCreateNestedOneWithoutChildCurriculumsInput
  point: Float
  PostCurriculum: PostCurriculumCreateNestedManyWithoutCurriculumInput
  Subject: SubjectCreateNestedOneWithoutCurriculumInput
  updatedAt: DateTime
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumCreateNestedManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutCurriculumInput
}

input CurriculumCreateWithoutUserCurriculumRetentionInput {
  ChildCurriculums: CurriculumCreateNestedManyWithoutParentCurriculumInput
  createdAt: DateTime
  CurriculumSchools: CurriculumSchoolCreateNestedManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresCreateNestedManyWithoutCurriculumInput
  id: String
  Level: CurriculumLevelCreateNestedOneWithoutCurriculumInput
  name: String!
  ParentCurriculum: CurriculumCreateNestedOneWithoutChildCurriculumsInput
  point: Float
  PostCurriculum: PostCurriculumCreateNestedManyWithoutCurriculumInput
  Subject: SubjectCreateNestedOneWithoutCurriculumInput
  updatedAt: DateTime
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumCreateNestedManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutCurriculumInput
}

input CurriculumCreateWithoutUserCurriculumsInput {
  ChildCurriculums: CurriculumCreateNestedManyWithoutParentCurriculumInput
  createdAt: DateTime
  CurriculumSchools: CurriculumSchoolCreateNestedManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresCreateNestedManyWithoutCurriculumInput
  id: String
  Level: CurriculumLevelCreateNestedOneWithoutCurriculumInput
  name: String!
  ParentCurriculum: CurriculumCreateNestedOneWithoutChildCurriculumsInput
  point: Float
  PostCurriculum: PostCurriculumCreateNestedManyWithoutCurriculumInput
  Subject: SubjectCreateNestedOneWithoutCurriculumInput
  updatedAt: DateTime
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutCurriculumInput
}

input CurriculumCreateWithoutUserLearningCurriculumInput {
  ChildCurriculums: CurriculumCreateNestedManyWithoutParentCurriculumInput
  createdAt: DateTime
  CurriculumSchools: CurriculumSchoolCreateNestedManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresCreateNestedManyWithoutCurriculumInput
  id: String
  Level: CurriculumLevelCreateNestedOneWithoutCurriculumInput
  name: String!
  ParentCurriculum: CurriculumCreateNestedOneWithoutChildCurriculumsInput
  point: Float
  PostCurriculum: PostCurriculumCreateNestedManyWithoutCurriculumInput
  Subject: SubjectCreateNestedOneWithoutCurriculumInput
  updatedAt: DateTime
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumCreateNestedManyWithoutCurriculumInput
}

type CurriculumLevel {
  Curriculum(after: CurriculumWhereUniqueInput, before: CurriculumWhereUniqueInput, first: Int, last: Int): [Curriculum!]!
  id: String!
  level: Int!
  name: String!
}

input CurriculumLevelCreateNestedOneWithoutCurriculumInput {
  connect: CurriculumLevelWhereUniqueInput
  connectOrCreate: CurriculumLevelCreateOrConnectWithoutCurriculumInput
  create: CurriculumLevelCreateWithoutCurriculumInput
}

input CurriculumLevelCreateOrConnectWithoutCurriculumInput {
  create: CurriculumLevelCreateWithoutCurriculumInput!
  where: CurriculumLevelWhereUniqueInput!
}

input CurriculumLevelCreateWithoutCurriculumInput {
  createdAt: DateTime
  id: String
  level: Int!
  name: String!
  updatedAt: DateTime
}

input CurriculumLevelOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  level: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input CurriculumLevelUpdateOneWithoutCurriculumInput {
  connect: CurriculumLevelWhereUniqueInput
  connectOrCreate: CurriculumLevelCreateOrConnectWithoutCurriculumInput
  create: CurriculumLevelCreateWithoutCurriculumInput
  delete: Boolean
  disconnect: Boolean
  update: CurriculumLevelUpdateWithoutCurriculumInput
  upsert: CurriculumLevelUpsertWithoutCurriculumInput
}

input CurriculumLevelUpdateWithoutCurriculumInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  level: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CurriculumLevelUpsertWithoutCurriculumInput {
  create: CurriculumLevelCreateWithoutCurriculumInput!
  update: CurriculumLevelUpdateWithoutCurriculumInput!
}

input CurriculumLevelWhereInput {
  AND: [CurriculumLevelWhereInput!]
  createdAt: DateTimeFilter
  Curriculum: CurriculumListRelationFilter
  id: StringFilter
  level: IntFilter
  name: StringFilter
  NOT: [CurriculumLevelWhereInput!]
  OR: [CurriculumLevelWhereInput!]
  updatedAt: DateTimeFilter
}

input CurriculumLevelWhereUniqueInput {
  id: String
}

input CurriculumListRelationFilter {
  every: CurriculumWhereInput
  none: CurriculumWhereInput
  some: CurriculumWhereInput
}

input CurriculumOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  Level: CurriculumLevelOrderByInput
  levelId: SortOrder
  name: SortOrder
  ParentCurriculum: CurriculumOrderByInput
  parentId: SortOrder
  point: SortOrder
  Subject: SubjectOrderByInput
  subjectId: SortOrder
  updatedAt: SortOrder
}

input CurriculumScalarWhereInput {
  AND: [CurriculumScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  levelId: StringNullableFilter
  name: StringFilter
  NOT: [CurriculumScalarWhereInput!]
  OR: [CurriculumScalarWhereInput!]
  parentId: StringNullableFilter
  point: FloatFilter
  subjectId: StringNullableFilter
  updatedAt: DateTimeFilter
}

type CurriculumSchool {
  Curriculum: Curriculum
  curriculumId: String
  id: String!
  name: String!
}

input CurriculumSchoolCreateNestedManyWithoutCurriculumInput {
  connect: [CurriculumSchoolWhereUniqueInput!]
  connectOrCreate: [CurriculumSchoolCreateOrConnectWithoutCurriculumInput!]
  create: [CurriculumSchoolCreateWithoutCurriculumInput!]
}

input CurriculumSchoolCreateNestedOneWithoutUserCurriculumSchoolInput {
  connect: CurriculumSchoolWhereUniqueInput
  connectOrCreate: CurriculumSchoolCreateOrConnectWithoutUserCurriculumSchoolInput
  create: CurriculumSchoolCreateWithoutUserCurriculumSchoolInput
}

input CurriculumSchoolCreateOrConnectWithoutCurriculumInput {
  create: CurriculumSchoolCreateWithoutCurriculumInput!
  where: CurriculumSchoolWhereUniqueInput!
}

input CurriculumSchoolCreateOrConnectWithoutUserCurriculumSchoolInput {
  create: CurriculumSchoolCreateWithoutUserCurriculumSchoolInput!
  where: CurriculumSchoolWhereUniqueInput!
}

input CurriculumSchoolCreateWithoutCurriculumInput {
  id: String
  name: String!
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutCurriculumSchoolInput
}

input CurriculumSchoolCreateWithoutUserCurriculumSchoolInput {
  Curriculum: CurriculumCreateNestedOneWithoutCurriculumSchoolsInput
  id: String
  name: String!
}

input CurriculumSchoolListRelationFilter {
  every: CurriculumSchoolWhereInput
  none: CurriculumSchoolWhereInput
  some: CurriculumSchoolWhereInput
}

input CurriculumSchoolOrderByInput {
  Curriculum: CurriculumOrderByInput
  curriculumId: SortOrder
  id: SortOrder
  name: SortOrder
}

input CurriculumSchoolScalarWhereInput {
  AND: [CurriculumSchoolScalarWhereInput!]
  curriculumId: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [CurriculumSchoolScalarWhereInput!]
  OR: [CurriculumSchoolScalarWhereInput!]
}

input CurriculumSchoolUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CurriculumSchoolUpdateManyWithoutCurriculumInput {
  connect: [CurriculumSchoolWhereUniqueInput!]
  connectOrCreate: [CurriculumSchoolCreateOrConnectWithoutCurriculumInput!]
  create: [CurriculumSchoolCreateWithoutCurriculumInput!]
  delete: [CurriculumSchoolWhereUniqueInput!]
  deleteMany: [CurriculumSchoolScalarWhereInput!]
  disconnect: [CurriculumSchoolWhereUniqueInput!]
  set: [CurriculumSchoolWhereUniqueInput!]
  update: [CurriculumSchoolUpdateWithWhereUniqueWithoutCurriculumInput!]
  updateMany: [CurriculumSchoolUpdateManyWithWhereWithoutCurriculumInput!]
  upsert: [CurriculumSchoolUpsertWithWhereUniqueWithoutCurriculumInput!]
}

input CurriculumSchoolUpdateManyWithWhereWithoutCurriculumInput {
  data: CurriculumSchoolUpdateManyMutationInput!
  where: CurriculumSchoolScalarWhereInput!
}

input CurriculumSchoolUpdateOneRequiredWithoutUserCurriculumSchoolInput {
  connect: CurriculumSchoolWhereUniqueInput
  connectOrCreate: CurriculumSchoolCreateOrConnectWithoutUserCurriculumSchoolInput
  create: CurriculumSchoolCreateWithoutUserCurriculumSchoolInput
  update: CurriculumSchoolUpdateWithoutUserCurriculumSchoolInput
  upsert: CurriculumSchoolUpsertWithoutUserCurriculumSchoolInput
}

input CurriculumSchoolUpdateWithoutCurriculumInput {
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutCurriculumSchoolInput
}

input CurriculumSchoolUpdateWithoutUserCurriculumSchoolInput {
  Curriculum: CurriculumUpdateOneWithoutCurriculumSchoolsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input CurriculumSchoolUpdateWithWhereUniqueWithoutCurriculumInput {
  data: CurriculumSchoolUpdateWithoutCurriculumInput!
  where: CurriculumSchoolWhereUniqueInput!
}

input CurriculumSchoolUpsertWithoutUserCurriculumSchoolInput {
  create: CurriculumSchoolCreateWithoutUserCurriculumSchoolInput!
  update: CurriculumSchoolUpdateWithoutUserCurriculumSchoolInput!
}

input CurriculumSchoolUpsertWithWhereUniqueWithoutCurriculumInput {
  create: CurriculumSchoolCreateWithoutCurriculumInput!
  update: CurriculumSchoolUpdateWithoutCurriculumInput!
  where: CurriculumSchoolWhereUniqueInput!
}

input CurriculumSchoolWhereInput {
  AND: [CurriculumSchoolWhereInput!]
  Curriculum: CurriculumWhereInput
  curriculumId: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [CurriculumSchoolWhereInput!]
  OR: [CurriculumSchoolWhereInput!]
  UserCurriculumSchool: UserCurriculumSchoolListRelationFilter
}

input CurriculumSchoolWhereUniqueInput {
  id: String
}

type CurriculumScores {
  curriculumId: String!
  id: String!
  point: Int!
}

input CurriculumScoresCreateNestedManyWithoutCurriculumInput {
  connect: [CurriculumScoresWhereUniqueInput!]
  connectOrCreate: [CurriculumScoresCreateOrConnectWithoutCurriculumInput!]
  create: [CurriculumScoresCreateWithoutCurriculumInput!]
}

input CurriculumScoresCreateOrConnectWithoutCurriculumInput {
  create: CurriculumScoresCreateWithoutCurriculumInput!
  where: CurriculumScoresWhereUniqueInput!
}

input CurriculumScoresCreateWithoutCurriculumInput {
  id: String
  point: Int!
}

input CurriculumScoresListRelationFilter {
  every: CurriculumScoresWhereInput
  none: CurriculumScoresWhereInput
  some: CurriculumScoresWhereInput
}

input CurriculumScoresScalarWhereInput {
  AND: [CurriculumScoresScalarWhereInput!]
  curriculumId: StringFilter
  id: StringFilter
  NOT: [CurriculumScoresScalarWhereInput!]
  OR: [CurriculumScoresScalarWhereInput!]
  point: IntFilter
}

input CurriculumScoresUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  point: IntFieldUpdateOperationsInput
}

input CurriculumScoresUpdateManyWithoutCurriculumInput {
  connect: [CurriculumScoresWhereUniqueInput!]
  connectOrCreate: [CurriculumScoresCreateOrConnectWithoutCurriculumInput!]
  create: [CurriculumScoresCreateWithoutCurriculumInput!]
  delete: [CurriculumScoresWhereUniqueInput!]
  deleteMany: [CurriculumScoresScalarWhereInput!]
  disconnect: [CurriculumScoresWhereUniqueInput!]
  set: [CurriculumScoresWhereUniqueInput!]
  update: [CurriculumScoresUpdateWithWhereUniqueWithoutCurriculumInput!]
  updateMany: [CurriculumScoresUpdateManyWithWhereWithoutCurriculumInput!]
  upsert: [CurriculumScoresUpsertWithWhereUniqueWithoutCurriculumInput!]
}

input CurriculumScoresUpdateManyWithWhereWithoutCurriculumInput {
  data: CurriculumScoresUpdateManyMutationInput!
  where: CurriculumScoresScalarWhereInput!
}

input CurriculumScoresUpdateWithoutCurriculumInput {
  id: StringFieldUpdateOperationsInput
  point: IntFieldUpdateOperationsInput
}

input CurriculumScoresUpdateWithWhereUniqueWithoutCurriculumInput {
  data: CurriculumScoresUpdateWithoutCurriculumInput!
  where: CurriculumScoresWhereUniqueInput!
}

input CurriculumScoresUpsertWithWhereUniqueWithoutCurriculumInput {
  create: CurriculumScoresCreateWithoutCurriculumInput!
  update: CurriculumScoresUpdateWithoutCurriculumInput!
  where: CurriculumScoresWhereUniqueInput!
}

input CurriculumScoresWhereInput {
  AND: [CurriculumScoresWhereInput!]
  Curriculum: CurriculumWhereInput
  curriculumId: StringFilter
  id: StringFilter
  NOT: [CurriculumScoresWhereInput!]
  OR: [CurriculumScoresWhereInput!]
  point: IntFilter
}

input CurriculumScoresWhereUniqueInput {
  id: String
}

input CurriculumUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  point: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input CurriculumUpdateManyWithoutParentCurriculumInput {
  connect: [CurriculumWhereUniqueInput!]
  connectOrCreate: [CurriculumCreateOrConnectWithoutParentCurriculumInput!]
  create: [CurriculumCreateWithoutParentCurriculumInput!]
  delete: [CurriculumWhereUniqueInput!]
  deleteMany: [CurriculumScalarWhereInput!]
  disconnect: [CurriculumWhereUniqueInput!]
  set: [CurriculumWhereUniqueInput!]
  update: [CurriculumUpdateWithWhereUniqueWithoutParentCurriculumInput!]
  updateMany: [CurriculumUpdateManyWithWhereWithoutParentCurriculumInput!]
  upsert: [CurriculumUpsertWithWhereUniqueWithoutParentCurriculumInput!]
}

input CurriculumUpdateManyWithWhereWithoutParentCurriculumInput {
  data: CurriculumUpdateManyMutationInput!
  where: CurriculumScalarWhereInput!
}

input CurriculumUpdateOneRequiredWithoutPostCurriculumInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutPostCurriculumInput
  create: CurriculumCreateWithoutPostCurriculumInput
  update: CurriculumUpdateWithoutPostCurriculumInput
  upsert: CurriculumUpsertWithoutPostCurriculumInput
}

input CurriculumUpdateOneRequiredWithoutUserCurriculumRateInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutUserCurriculumRateInput
  create: CurriculumCreateWithoutUserCurriculumRateInput
  update: CurriculumUpdateWithoutUserCurriculumRateInput
  upsert: CurriculumUpsertWithoutUserCurriculumRateInput
}

input CurriculumUpdateOneRequiredWithoutUserCurriculumRetentionInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutUserCurriculumRetentionInput
  create: CurriculumCreateWithoutUserCurriculumRetentionInput
  update: CurriculumUpdateWithoutUserCurriculumRetentionInput
  upsert: CurriculumUpsertWithoutUserCurriculumRetentionInput
}

input CurriculumUpdateOneRequiredWithoutUserLearningCurriculumInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutUserLearningCurriculumInput
  create: CurriculumCreateWithoutUserLearningCurriculumInput
  update: CurriculumUpdateWithoutUserLearningCurriculumInput
  upsert: CurriculumUpsertWithoutUserLearningCurriculumInput
}

input CurriculumUpdateOneWithoutChildCurriculumsInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutChildCurriculumsInput
  create: CurriculumCreateWithoutChildCurriculumsInput
  delete: Boolean
  disconnect: Boolean
  update: CurriculumUpdateWithoutChildCurriculumsInput
  upsert: CurriculumUpsertWithoutChildCurriculumsInput
}

input CurriculumUpdateOneWithoutCurriculumSchoolsInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutCurriculumSchoolsInput
  create: CurriculumCreateWithoutCurriculumSchoolsInput
  delete: Boolean
  disconnect: Boolean
  update: CurriculumUpdateWithoutCurriculumSchoolsInput
  upsert: CurriculumUpsertWithoutCurriculumSchoolsInput
}

input CurriculumUpdateOneWithoutUserCurriculumsInput {
  connect: CurriculumWhereUniqueInput
  connectOrCreate: CurriculumCreateOrConnectWithoutUserCurriculumsInput
  create: CurriculumCreateWithoutUserCurriculumsInput
  delete: Boolean
  disconnect: Boolean
  update: CurriculumUpdateWithoutUserCurriculumsInput
  upsert: CurriculumUpsertWithoutUserCurriculumsInput
}

input CurriculumUpdateWithoutChildCurriculumsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumSchools: CurriculumSchoolUpdateManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresUpdateManyWithoutCurriculumInput
  id: StringFieldUpdateOperationsInput
  Level: CurriculumLevelUpdateOneWithoutCurriculumInput
  name: StringFieldUpdateOperationsInput
  ParentCurriculum: CurriculumUpdateOneWithoutChildCurriculumsInput
  point: FloatFieldUpdateOperationsInput
  PostCurriculum: PostCurriculumUpdateManyWithoutCurriculumInput
  Subject: SubjectUpdateOneWithoutCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumUpdateManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutCurriculumInput
}

input CurriculumUpdateWithoutCurriculumSchoolsInput {
  ChildCurriculums: CurriculumUpdateManyWithoutParentCurriculumInput
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumScores: CurriculumScoresUpdateManyWithoutCurriculumInput
  id: StringFieldUpdateOperationsInput
  Level: CurriculumLevelUpdateOneWithoutCurriculumInput
  name: StringFieldUpdateOperationsInput
  ParentCurriculum: CurriculumUpdateOneWithoutChildCurriculumsInput
  point: FloatFieldUpdateOperationsInput
  PostCurriculum: PostCurriculumUpdateManyWithoutCurriculumInput
  Subject: SubjectUpdateOneWithoutCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumUpdateManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutCurriculumInput
}

input CurriculumUpdateWithoutParentCurriculumInput {
  ChildCurriculums: CurriculumUpdateManyWithoutParentCurriculumInput
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumSchools: CurriculumSchoolUpdateManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresUpdateManyWithoutCurriculumInput
  id: StringFieldUpdateOperationsInput
  Level: CurriculumLevelUpdateOneWithoutCurriculumInput
  name: StringFieldUpdateOperationsInput
  point: FloatFieldUpdateOperationsInput
  PostCurriculum: PostCurriculumUpdateManyWithoutCurriculumInput
  Subject: SubjectUpdateOneWithoutCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumUpdateManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutCurriculumInput
}

input CurriculumUpdateWithoutPostCurriculumInput {
  ChildCurriculums: CurriculumUpdateManyWithoutParentCurriculumInput
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumSchools: CurriculumSchoolUpdateManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresUpdateManyWithoutCurriculumInput
  id: StringFieldUpdateOperationsInput
  Level: CurriculumLevelUpdateOneWithoutCurriculumInput
  name: StringFieldUpdateOperationsInput
  ParentCurriculum: CurriculumUpdateOneWithoutChildCurriculumsInput
  point: FloatFieldUpdateOperationsInput
  Subject: SubjectUpdateOneWithoutCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumUpdateManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutCurriculumInput
}

input CurriculumUpdateWithoutUserCurriculumRateInput {
  ChildCurriculums: CurriculumUpdateManyWithoutParentCurriculumInput
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumSchools: CurriculumSchoolUpdateManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresUpdateManyWithoutCurriculumInput
  id: StringFieldUpdateOperationsInput
  Level: CurriculumLevelUpdateOneWithoutCurriculumInput
  name: StringFieldUpdateOperationsInput
  ParentCurriculum: CurriculumUpdateOneWithoutChildCurriculumsInput
  point: FloatFieldUpdateOperationsInput
  PostCurriculum: PostCurriculumUpdateManyWithoutCurriculumInput
  Subject: SubjectUpdateOneWithoutCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumUpdateManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutCurriculumInput
}

input CurriculumUpdateWithoutUserCurriculumRetentionInput {
  ChildCurriculums: CurriculumUpdateManyWithoutParentCurriculumInput
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumSchools: CurriculumSchoolUpdateManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresUpdateManyWithoutCurriculumInput
  id: StringFieldUpdateOperationsInput
  Level: CurriculumLevelUpdateOneWithoutCurriculumInput
  name: StringFieldUpdateOperationsInput
  ParentCurriculum: CurriculumUpdateOneWithoutChildCurriculumsInput
  point: FloatFieldUpdateOperationsInput
  PostCurriculum: PostCurriculumUpdateManyWithoutCurriculumInput
  Subject: SubjectUpdateOneWithoutCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumUpdateManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutCurriculumInput
}

input CurriculumUpdateWithoutUserCurriculumsInput {
  ChildCurriculums: CurriculumUpdateManyWithoutParentCurriculumInput
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumSchools: CurriculumSchoolUpdateManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresUpdateManyWithoutCurriculumInput
  id: StringFieldUpdateOperationsInput
  Level: CurriculumLevelUpdateOneWithoutCurriculumInput
  name: StringFieldUpdateOperationsInput
  ParentCurriculum: CurriculumUpdateOneWithoutChildCurriculumsInput
  point: FloatFieldUpdateOperationsInput
  PostCurriculum: PostCurriculumUpdateManyWithoutCurriculumInput
  Subject: SubjectUpdateOneWithoutCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutCurriculumInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutCurriculumInput
}

input CurriculumUpdateWithoutUserLearningCurriculumInput {
  ChildCurriculums: CurriculumUpdateManyWithoutParentCurriculumInput
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumSchools: CurriculumSchoolUpdateManyWithoutCurriculumInput
  CurriculumScores: CurriculumScoresUpdateManyWithoutCurriculumInput
  id: StringFieldUpdateOperationsInput
  Level: CurriculumLevelUpdateOneWithoutCurriculumInput
  name: StringFieldUpdateOperationsInput
  ParentCurriculum: CurriculumUpdateOneWithoutChildCurriculumsInput
  point: FloatFieldUpdateOperationsInput
  PostCurriculum: PostCurriculumUpdateManyWithoutCurriculumInput
  Subject: SubjectUpdateOneWithoutCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutCurriculumInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutCurriculumInput
  UserCurriculums: UserCurriculumUpdateManyWithoutCurriculumInput
}

input CurriculumUpdateWithWhereUniqueWithoutParentCurriculumInput {
  data: CurriculumUpdateWithoutParentCurriculumInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumUpsertWithoutChildCurriculumsInput {
  create: CurriculumCreateWithoutChildCurriculumsInput!
  update: CurriculumUpdateWithoutChildCurriculumsInput!
}

input CurriculumUpsertWithoutCurriculumSchoolsInput {
  create: CurriculumCreateWithoutCurriculumSchoolsInput!
  update: CurriculumUpdateWithoutCurriculumSchoolsInput!
}

input CurriculumUpsertWithoutPostCurriculumInput {
  create: CurriculumCreateWithoutPostCurriculumInput!
  update: CurriculumUpdateWithoutPostCurriculumInput!
}

input CurriculumUpsertWithoutUserCurriculumRateInput {
  create: CurriculumCreateWithoutUserCurriculumRateInput!
  update: CurriculumUpdateWithoutUserCurriculumRateInput!
}

input CurriculumUpsertWithoutUserCurriculumRetentionInput {
  create: CurriculumCreateWithoutUserCurriculumRetentionInput!
  update: CurriculumUpdateWithoutUserCurriculumRetentionInput!
}

input CurriculumUpsertWithoutUserCurriculumsInput {
  create: CurriculumCreateWithoutUserCurriculumsInput!
  update: CurriculumUpdateWithoutUserCurriculumsInput!
}

input CurriculumUpsertWithoutUserLearningCurriculumInput {
  create: CurriculumCreateWithoutUserLearningCurriculumInput!
  update: CurriculumUpdateWithoutUserLearningCurriculumInput!
}

input CurriculumUpsertWithWhereUniqueWithoutParentCurriculumInput {
  create: CurriculumCreateWithoutParentCurriculumInput!
  update: CurriculumUpdateWithoutParentCurriculumInput!
  where: CurriculumWhereUniqueInput!
}

input CurriculumWhereInput {
  AND: [CurriculumWhereInput!]
  ChildCurriculums: CurriculumListRelationFilter
  createdAt: DateTimeFilter
  CurriculumSchools: CurriculumSchoolListRelationFilter
  CurriculumScores: CurriculumScoresListRelationFilter
  id: StringFilter
  Level: CurriculumLevelWhereInput
  levelId: StringNullableFilter
  name: StringFilter
  NOT: [CurriculumWhereInput!]
  OR: [CurriculumWhereInput!]
  ParentCurriculum: CurriculumWhereInput
  parentId: StringNullableFilter
  point: FloatFilter
  PostCurriculum: PostCurriculumListRelationFilter
  Subject: SubjectWhereInput
  subjectId: StringNullableFilter
  updatedAt: DateTimeFilter
  UserCurriculumRate: UserCurriculumRateListRelationFilter
  UserCurriculumRetention: UserCurriculumRetentionListRelationFilter
  UserCurriculums: UserCurriculumListRelationFilter
  UserLearningCurriculum: UserLearningCurriculumListRelationFilter
}

input CurriculumWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input DateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input EnumAnswerTypeFieldUpdateOperationsInput {
  set: AnswerType
}

input EnumAnswerTypeFilter {
  equals: AnswerType
  in: [AnswerType!]
  not: NestedEnumAnswerTypeFilter
  notIn: [AnswerType!]
}

input EnumContentTypeFieldUpdateOperationsInput {
  set: ContentType
}

input EnumContentTypeFilter {
  equals: ContentType
  in: [ContentType!]
  not: NestedEnumContentTypeFilter
  notIn: [ContentType!]
}

input EnumMediaTypeFieldUpdateOperationsInput {
  set: MediaType
}

input EnumMediaTypeFilter {
  equals: MediaType
  in: [MediaType!]
  not: NestedEnumMediaTypeFilter
  notIn: [MediaType!]
}

input EnumPostTypeFieldUpdateOperationsInput {
  set: PostType
}

input EnumPostTypeFilter {
  equals: PostType
  in: [PostType!]
  not: NestedEnumPostTypeFilter
  notIn: [PostType!]
}

input EnumStoryTypeFieldUpdateOperationsInput {
  set: StoryType
}

input EnumStoryTypeFilter {
  equals: StoryType
  in: [StoryType!]
  not: NestedEnumStoryTypeFilter
  notIn: [StoryType!]
}

type Feedback {
  createdAt: DateTime!
  feedback: String!
  id: String!
  isFixed: Boolean!
  screenshot: String
  solution: String
  updatedAt: DateTime!
  User: User!
}

input FeedbackCreateInput {
  createdAt: DateTime
  feedback: String!
  id: String
  isFixed: Boolean
  screenshot: String
  solution: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutFeedbackInput!
}

input FeedbackCreateNestedManyWithoutUserInput {
  connect: [FeedbackWhereUniqueInput!]
  connectOrCreate: [FeedbackCreateOrConnectWithoutUserInput!]
  create: [FeedbackCreateWithoutUserInput!]
}

input FeedbackCreateOrConnectWithoutUserInput {
  create: FeedbackCreateWithoutUserInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackCreateWithoutUserInput {
  createdAt: DateTime
  feedback: String!
  id: String
  isFixed: Boolean
  screenshot: String
  solution: String
  updatedAt: DateTime
}

input FeedbackListRelationFilter {
  every: FeedbackWhereInput
  none: FeedbackWhereInput
  some: FeedbackWhereInput
}

input FeedbackScalarWhereInput {
  AND: [FeedbackScalarWhereInput!]
  createdAt: DateTimeFilter
  feedback: StringFilter
  id: StringFilter
  isFixed: BoolFilter
  NOT: [FeedbackScalarWhereInput!]
  OR: [FeedbackScalarWhereInput!]
  screenshot: StringNullableFilter
  solution: StringNullableFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input FeedbackUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  feedback: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isFixed: BoolFieldUpdateOperationsInput
  screenshot: NullableStringFieldUpdateOperationsInput
  solution: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FeedbackUpdateManyWithoutUserInput {
  connect: [FeedbackWhereUniqueInput!]
  connectOrCreate: [FeedbackCreateOrConnectWithoutUserInput!]
  create: [FeedbackCreateWithoutUserInput!]
  delete: [FeedbackWhereUniqueInput!]
  deleteMany: [FeedbackScalarWhereInput!]
  disconnect: [FeedbackWhereUniqueInput!]
  set: [FeedbackWhereUniqueInput!]
  update: [FeedbackUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [FeedbackUpdateManyWithWhereWithoutUserInput!]
  upsert: [FeedbackUpsertWithWhereUniqueWithoutUserInput!]
}

input FeedbackUpdateManyWithWhereWithoutUserInput {
  data: FeedbackUpdateManyMutationInput!
  where: FeedbackScalarWhereInput!
}

input FeedbackUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  feedback: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isFixed: BoolFieldUpdateOperationsInput
  screenshot: NullableStringFieldUpdateOperationsInput
  solution: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FeedbackUpdateWithWhereUniqueWithoutUserInput {
  data: FeedbackUpdateWithoutUserInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackUpsertWithWhereUniqueWithoutUserInput {
  create: FeedbackCreateWithoutUserInput!
  update: FeedbackUpdateWithoutUserInput!
  where: FeedbackWhereUniqueInput!
}

input FeedbackWhereInput {
  AND: [FeedbackWhereInput!]
  createdAt: DateTimeFilter
  feedback: StringFilter
  id: StringFilter
  isFixed: BoolFilter
  NOT: [FeedbackWhereInput!]
  OR: [FeedbackWhereInput!]
  screenshot: StringNullableFilter
  solution: StringNullableFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input FeedbackWhereUniqueInput {
  id: String
}

input FloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input FloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input InputUserCurriculum {
  applyingDate: String
  curriculumId: String
  id: String
  point: Float
  userCurriculumRates: [InputUserCurriculumRate]
  userId: String!
}

input InputUserCurriculumRate {
  curriculumId: String!
  id: String
  rate: Float
  userCurriculumId: String!
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

scalar Json

input JsonNullableFilter {
  equals: Json
  not: Json
}

input LearningObjectCreateNestedManyWithoutContentsInput {
  connect: [LearningObjectWhereUniqueInput!]
  connectOrCreate: [LearningObjectCreateOrConnectWithoutcontentsInput!]
  create: [LearningObjectCreateWithoutContentsInput!]
}

input LearningObjectCreateNestedManyWithoutPassagesInput {
  connect: [LearningObjectWhereUniqueInput!]
  connectOrCreate: [LearningObjectCreateOrConnectWithoutpassagesInput!]
  create: [LearningObjectCreateWithoutPassagesInput!]
}

input LearningObjectCreateNestedManyWithoutPostsInput {
  connect: [LearningObjectWhereUniqueInput!]
  connectOrCreate: [LearningObjectCreateOrConnectWithoutpostsInput!]
  create: [LearningObjectCreateWithoutPostsInput!]
}

input LearningObjectCreateNestedOneWithoutUserLearningProgressInput {
  connect: LearningObjectWhereUniqueInput
  connectOrCreate: LearningObjectCreateOrConnectWithoutUserLearningProgressInput
  create: LearningObjectCreateWithoutUserLearningProgressInput
}

input LearningObjectCreateOrConnectWithoutcontentsInput {
  create: LearningObjectCreateWithoutContentsInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectCreateOrConnectWithoutpassagesInput {
  create: LearningObjectCreateWithoutPassagesInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectCreateOrConnectWithoutpostsInput {
  create: LearningObjectCreateWithoutPostsInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectCreateOrConnectWithoutUserLearningProgressInput {
  create: LearningObjectCreateWithoutUserLearningProgressInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectCreateWithoutContentsInput {
  createdAt: DateTime
  id: String
  name: String!
  passages: PassageCreateNestedManyWithoutLearningObjectsInput
  posts: PostCreateNestedManyWithoutLearningObjectsInput
  updatedAt: DateTime
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutLearningObjectInput
}

input LearningObjectCreateWithoutPassagesInput {
  contents: ContentCreateNestedManyWithoutLearningObjectsInput
  createdAt: DateTime
  id: String
  name: String!
  posts: PostCreateNestedManyWithoutLearningObjectsInput
  updatedAt: DateTime
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutLearningObjectInput
}

input LearningObjectCreateWithoutPostsInput {
  contents: ContentCreateNestedManyWithoutLearningObjectsInput
  createdAt: DateTime
  id: String
  name: String!
  passages: PassageCreateNestedManyWithoutLearningObjectsInput
  updatedAt: DateTime
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutLearningObjectInput
}

input LearningObjectCreateWithoutUserLearningProgressInput {
  contents: ContentCreateNestedManyWithoutLearningObjectsInput
  createdAt: DateTime
  id: String
  name: String!
  passages: PassageCreateNestedManyWithoutLearningObjectsInput
  posts: PostCreateNestedManyWithoutLearningObjectsInput
  updatedAt: DateTime
}

input LearningObjectListRelationFilter {
  every: LearningObjectWhereInput
  none: LearningObjectWhereInput
  some: LearningObjectWhereInput
}

input LearningObjectScalarWhereInput {
  AND: [LearningObjectScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [LearningObjectScalarWhereInput!]
  OR: [LearningObjectScalarWhereInput!]
  updatedAt: DateTimeFilter
}

input LearningObjectUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LearningObjectUpdateManyWithoutContentsInput {
  connect: [LearningObjectWhereUniqueInput!]
  connectOrCreate: [LearningObjectCreateOrConnectWithoutcontentsInput!]
  create: [LearningObjectCreateWithoutContentsInput!]
  delete: [LearningObjectWhereUniqueInput!]
  deleteMany: [LearningObjectScalarWhereInput!]
  disconnect: [LearningObjectWhereUniqueInput!]
  set: [LearningObjectWhereUniqueInput!]
  update: [LearningObjectUpdateWithWhereUniqueWithoutContentsInput!]
  updateMany: [LearningObjectUpdateManyWithWhereWithoutContentsInput!]
  upsert: [LearningObjectUpsertWithWhereUniqueWithoutContentsInput!]
}

input LearningObjectUpdateManyWithoutPassagesInput {
  connect: [LearningObjectWhereUniqueInput!]
  connectOrCreate: [LearningObjectCreateOrConnectWithoutpassagesInput!]
  create: [LearningObjectCreateWithoutPassagesInput!]
  delete: [LearningObjectWhereUniqueInput!]
  deleteMany: [LearningObjectScalarWhereInput!]
  disconnect: [LearningObjectWhereUniqueInput!]
  set: [LearningObjectWhereUniqueInput!]
  update: [LearningObjectUpdateWithWhereUniqueWithoutPassagesInput!]
  updateMany: [LearningObjectUpdateManyWithWhereWithoutPassagesInput!]
  upsert: [LearningObjectUpsertWithWhereUniqueWithoutPassagesInput!]
}

input LearningObjectUpdateManyWithoutPostsInput {
  connect: [LearningObjectWhereUniqueInput!]
  connectOrCreate: [LearningObjectCreateOrConnectWithoutpostsInput!]
  create: [LearningObjectCreateWithoutPostsInput!]
  delete: [LearningObjectWhereUniqueInput!]
  deleteMany: [LearningObjectScalarWhereInput!]
  disconnect: [LearningObjectWhereUniqueInput!]
  set: [LearningObjectWhereUniqueInput!]
  update: [LearningObjectUpdateWithWhereUniqueWithoutPostsInput!]
  updateMany: [LearningObjectUpdateManyWithWhereWithoutPostsInput!]
  upsert: [LearningObjectUpsertWithWhereUniqueWithoutPostsInput!]
}

input LearningObjectUpdateManyWithWhereWithoutContentsInput {
  data: LearningObjectUpdateManyMutationInput!
  where: LearningObjectScalarWhereInput!
}

input LearningObjectUpdateManyWithWhereWithoutPassagesInput {
  data: LearningObjectUpdateManyMutationInput!
  where: LearningObjectScalarWhereInput!
}

input LearningObjectUpdateManyWithWhereWithoutPostsInput {
  data: LearningObjectUpdateManyMutationInput!
  where: LearningObjectScalarWhereInput!
}

input LearningObjectUpdateOneRequiredWithoutUserLearningProgressInput {
  connect: LearningObjectWhereUniqueInput
  connectOrCreate: LearningObjectCreateOrConnectWithoutUserLearningProgressInput
  create: LearningObjectCreateWithoutUserLearningProgressInput
  update: LearningObjectUpdateWithoutUserLearningProgressInput
  upsert: LearningObjectUpsertWithoutUserLearningProgressInput
}

input LearningObjectUpdateWithoutContentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  passages: PassageUpdateManyWithoutLearningObjectsInput
  posts: PostUpdateManyWithoutLearningObjectsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutLearningObjectInput
}

input LearningObjectUpdateWithoutPassagesInput {
  contents: ContentUpdateManyWithoutLearningObjectsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  posts: PostUpdateManyWithoutLearningObjectsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutLearningObjectInput
}

input LearningObjectUpdateWithoutPostsInput {
  contents: ContentUpdateManyWithoutLearningObjectsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  passages: PassageUpdateManyWithoutLearningObjectsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutLearningObjectInput
}

input LearningObjectUpdateWithoutUserLearningProgressInput {
  contents: ContentUpdateManyWithoutLearningObjectsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  passages: PassageUpdateManyWithoutLearningObjectsInput
  posts: PostUpdateManyWithoutLearningObjectsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input LearningObjectUpdateWithWhereUniqueWithoutContentsInput {
  data: LearningObjectUpdateWithoutContentsInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectUpdateWithWhereUniqueWithoutPassagesInput {
  data: LearningObjectUpdateWithoutPassagesInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectUpdateWithWhereUniqueWithoutPostsInput {
  data: LearningObjectUpdateWithoutPostsInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectUpsertWithoutUserLearningProgressInput {
  create: LearningObjectCreateWithoutUserLearningProgressInput!
  update: LearningObjectUpdateWithoutUserLearningProgressInput!
}

input LearningObjectUpsertWithWhereUniqueWithoutContentsInput {
  create: LearningObjectCreateWithoutContentsInput!
  update: LearningObjectUpdateWithoutContentsInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectUpsertWithWhereUniqueWithoutPassagesInput {
  create: LearningObjectCreateWithoutPassagesInput!
  update: LearningObjectUpdateWithoutPassagesInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectUpsertWithWhereUniqueWithoutPostsInput {
  create: LearningObjectCreateWithoutPostsInput!
  update: LearningObjectUpdateWithoutPostsInput!
  where: LearningObjectWhereUniqueInput!
}

input LearningObjectWhereInput {
  AND: [LearningObjectWhereInput!]
  contents: ContentListRelationFilter
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [LearningObjectWhereInput!]
  OR: [LearningObjectWhereInput!]
  passages: PassageListRelationFilter
  posts: PostListRelationFilter
  updatedAt: DateTimeFilter
  UserLearningProgress: UserLearningProgressListRelationFilter
}

input LearningObjectWhereUniqueInput {
  id: String
}

enum MediaType {
  Image
  Latex
  Text
  Video
  Voice
}

type MomentumItem {
  createdAt: DateTime!
  id: String!
  name: String!
  updatedAt: DateTime!
  UserMomentum(after: UserMomentumWhereUniqueInput, before: UserMomentumWhereUniqueInput, first: Int, last: Int): [UserMomentum!]!
}

input MomentumItemCreateNestedOneWithoutUserMomentumInput {
  connect: MomentumItemWhereUniqueInput
  connectOrCreate: MomentumItemCreateOrConnectWithoutUserMomentumInput
  create: MomentumItemCreateWithoutUserMomentumInput
}

input MomentumItemCreateOrConnectWithoutUserMomentumInput {
  create: MomentumItemCreateWithoutUserMomentumInput!
  where: MomentumItemWhereUniqueInput!
}

input MomentumItemCreateWithoutUserMomentumInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input MomentumItemUpdateOneRequiredWithoutUserMomentumInput {
  connect: MomentumItemWhereUniqueInput
  connectOrCreate: MomentumItemCreateOrConnectWithoutUserMomentumInput
  create: MomentumItemCreateWithoutUserMomentumInput
  update: MomentumItemUpdateWithoutUserMomentumInput
  upsert: MomentumItemUpsertWithoutUserMomentumInput
}

input MomentumItemUpdateWithoutUserMomentumInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input MomentumItemUpsertWithoutUserMomentumInput {
  create: MomentumItemCreateWithoutUserMomentumInput!
  update: MomentumItemUpdateWithoutUserMomentumInput!
}

input MomentumItemWhereInput {
  AND: [MomentumItemWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  name: StringFilter
  NOT: [MomentumItemWhereInput!]
  OR: [MomentumItemWhereInput!]
  updatedAt: DateTimeFilter
  UserMomentum: UserMomentumListRelationFilter
}

input MomentumItemWhereUniqueInput {
  id: String
}

type Mutation {
  createOneCareer(data: CareerCreateInput!): Career!
  createOneContent(data: ContentCreateInput!): Content!
  createOneContentAnswer(data: ContentAnswerCreateInput!): ContentAnswer!
  createOneFeedback(data: FeedbackCreateInput!): Feedback!
  createOneOnboardType(data: OnboardTypeCreateInput!): OnboardType!
  createOnePost(data: PostCreateInput!): Post!
  createOnePostComments(data: PostCommentsCreateInput!): PostComments!
  createOnePostReactions(data: PostReactionsCreateInput!): PostReactions!
  createOnePostView(data: PostViewCreateInput!): PostView!
  createOneSocialNetwork(data: SocialNetworkCreateInput!): SocialNetwork!
  createOneUser(data: UserCreateInput!): User!
  createOneUserAnswersOnContents(data: UserAnswersOnContentsCreateInput!): UserAnswersOnContents!
  createOneUserCareer(data: UserCareerCreateInput!): UserCareer!
  createOneUserConfig(data: UserConfigCreateInput!): UserConfig!
  createOneUserCurriculum(data: UserCurriculumCreateInput!): UserCurriculum!
  createOneUserCurriculumSchool(data: UserCurriculumSchoolCreateInput!): UserCurriculumSchool!
  createOneUserMomentum(data: UserMomentumCreateInput!): UserMomentum!
  createOneUserSavedPosts(data: UserSavedPostsCreateInput!): UserSavedPosts!
  deleteOnePost(where: PostWhereUniqueInput!): Post
  deleteOnePostReactions(where: PostReactionsWhereUniqueInput!): PostReactions
  deleteOneUser(where: UserWhereUniqueInput!): User
  deleteOneUserCurriculum(where: UserCurriculumWhereUniqueInput!): UserCurriculum
  deleteOneUserSavedPosts(where: UserSavedPostsWhereUniqueInput!): UserSavedPosts
  saveUserCurriculum(inputUserCurriculums: [InputUserCurriculum]): String
  signUpMe(idToken: String!): User
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateOneUserConfig(data: UserConfigUpdateInput!, where: UserConfigWhereUniqueInput!): UserConfig
  updateOneUserCurriculum(data: UserCurriculumUpdateInput!, where: UserCurriculumWhereUniqueInput!): UserCurriculum
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolNullableFilter {
  equals: Boolean
  not: NestedBoolNullableFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeNullableFilter
  notIn: [DateTime!]
}

input NestedEnumAnswerTypeFilter {
  equals: AnswerType
  in: [AnswerType!]
  not: NestedEnumAnswerTypeFilter
  notIn: [AnswerType!]
}

input NestedEnumContentTypeFilter {
  equals: ContentType
  in: [ContentType!]
  not: NestedEnumContentTypeFilter
  notIn: [ContentType!]
}

input NestedEnumMediaTypeFilter {
  equals: MediaType
  in: [MediaType!]
  not: NestedEnumMediaTypeFilter
  notIn: [MediaType!]
}

input NestedEnumPostTypeFilter {
  equals: PostType
  in: [PostType!]
  not: NestedEnumPostTypeFilter
  notIn: [PostType!]
}

input NestedEnumStoryTypeFilter {
  equals: StoryType
  in: [StoryType!]
  not: NestedEnumStoryTypeFilter
  notIn: [StoryType!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableBoolFieldUpdateOperationsInput {
  set: Boolean
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableFloatFieldUpdateOperationsInput {
  decrement: Float
  divide: Float
  increment: Float
  multiply: Float
  set: Float
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type OnboardType {
  createdAt: DateTime!
  id: String!
  name: String!
  postType: PostType!
  updatedAt: DateTime!
  UserOnboard(after: UserOnboardWhereUniqueInput, before: UserOnboardWhereUniqueInput, first: Int, last: Int): [UserOnboard!]!
}

input OnboardTypeCreateInput {
  createdAt: DateTime
  id: String
  index: Int!
  name: String!
  postType: PostType!
  updatedAt: DateTime
  UserOnboard: UserOnboardCreateNestedManyWithoutOnboardTypeInput
}

input OnboardTypeCreateNestedOneWithoutUserOnboardInput {
  connect: OnboardTypeWhereUniqueInput
  connectOrCreate: OnboardTypeCreateOrConnectWithoutUserOnboardInput
  create: OnboardTypeCreateWithoutUserOnboardInput
}

input OnboardTypeCreateOrConnectWithoutUserOnboardInput {
  create: OnboardTypeCreateWithoutUserOnboardInput!
  where: OnboardTypeWhereUniqueInput!
}

input OnboardTypeCreateWithoutUserOnboardInput {
  createdAt: DateTime
  id: String
  index: Int!
  name: String!
  postType: PostType!
  updatedAt: DateTime
}

input OnboardTypeOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  index: SortOrder
  name: SortOrder
  postType: SortOrder
  updatedAt: SortOrder
}

input OnboardTypeUpdateOneRequiredWithoutUserOnboardInput {
  connect: OnboardTypeWhereUniqueInput
  connectOrCreate: OnboardTypeCreateOrConnectWithoutUserOnboardInput
  create: OnboardTypeCreateWithoutUserOnboardInput
  update: OnboardTypeUpdateWithoutUserOnboardInput
  upsert: OnboardTypeUpsertWithoutUserOnboardInput
}

input OnboardTypeUpdateWithoutUserOnboardInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  index: IntFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input OnboardTypeUpsertWithoutUserOnboardInput {
  create: OnboardTypeCreateWithoutUserOnboardInput!
  update: OnboardTypeUpdateWithoutUserOnboardInput!
}

input OnboardTypeWhereInput {
  AND: [OnboardTypeWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  index: IntFilter
  name: StringFilter
  NOT: [OnboardTypeWhereInput!]
  OR: [OnboardTypeWhereInput!]
  postType: EnumPostTypeFilter
  updatedAt: DateTimeFilter
  UserOnboard: UserOnboardListRelationFilter
}

input OnboardTypeWhereUniqueInput {
  id: String
}

type Passage {
  createdAt: DateTime!
  id: String!
  mediaType: MediaType!
  Posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  sourcePath: String!
  text: String!
  title: String!
  updatedAt: DateTime!
}

input PassageCreateNestedManyWithoutLearningObjectsInput {
  connect: [PassageWhereUniqueInput!]
  connectOrCreate: [PassageCreateOrConnectWithoutlearningObjectsInput!]
  create: [PassageCreateWithoutLearningObjectsInput!]
}

input PassageCreateNestedManyWithoutUserInput {
  connect: [PassageWhereUniqueInput!]
  connectOrCreate: [PassageCreateOrConnectWithoutUserInput!]
  create: [PassageCreateWithoutUserInput!]
}

input PassageCreateNestedOneWithoutPostsInput {
  connect: PassageWhereUniqueInput
  connectOrCreate: PassageCreateOrConnectWithoutPostsInput
  create: PassageCreateWithoutPostsInput
}

input PassageCreateOrConnectWithoutlearningObjectsInput {
  create: PassageCreateWithoutLearningObjectsInput!
  where: PassageWhereUniqueInput!
}

input PassageCreateOrConnectWithoutPostsInput {
  create: PassageCreateWithoutPostsInput!
  where: PassageWhereUniqueInput!
}

input PassageCreateOrConnectWithoutUserInput {
  create: PassageCreateWithoutUserInput!
  where: PassageWhereUniqueInput!
}

input PassageCreateWithoutLearningObjectsInput {
  createdAt: DateTime
  id: String
  mediaType: MediaType!
  Posts: PostCreateNestedManyWithoutPassageInput
  sourcePath: String!
  text: String!
  title: String!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPassageInput!
}

input PassageCreateWithoutPostsInput {
  createdAt: DateTime
  id: String
  learningObjects: LearningObjectCreateNestedManyWithoutPassagesInput
  mediaType: MediaType!
  sourcePath: String!
  text: String!
  title: String!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPassageInput!
}

input PassageCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  learningObjects: LearningObjectCreateNestedManyWithoutPassagesInput
  mediaType: MediaType!
  Posts: PostCreateNestedManyWithoutPassageInput
  sourcePath: String!
  text: String!
  title: String!
  updatedAt: DateTime
}

input PassageListRelationFilter {
  every: PassageWhereInput
  none: PassageWhereInput
  some: PassageWhereInput
}

input PassageOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  mediaType: SortOrder
  sourcePath: SortOrder
  text: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  User: UserOrderByInput
  userId: SortOrder
}

input PassageScalarWhereInput {
  AND: [PassageScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  mediaType: EnumMediaTypeFilter
  NOT: [PassageScalarWhereInput!]
  OR: [PassageScalarWhereInput!]
  sourcePath: StringFilter
  text: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input PassageUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  sourcePath: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PassageUpdateManyWithoutLearningObjectsInput {
  connect: [PassageWhereUniqueInput!]
  connectOrCreate: [PassageCreateOrConnectWithoutlearningObjectsInput!]
  create: [PassageCreateWithoutLearningObjectsInput!]
  delete: [PassageWhereUniqueInput!]
  deleteMany: [PassageScalarWhereInput!]
  disconnect: [PassageWhereUniqueInput!]
  set: [PassageWhereUniqueInput!]
  update: [PassageUpdateWithWhereUniqueWithoutLearningObjectsInput!]
  updateMany: [PassageUpdateManyWithWhereWithoutLearningObjectsInput!]
  upsert: [PassageUpsertWithWhereUniqueWithoutLearningObjectsInput!]
}

input PassageUpdateManyWithoutUserInput {
  connect: [PassageWhereUniqueInput!]
  connectOrCreate: [PassageCreateOrConnectWithoutUserInput!]
  create: [PassageCreateWithoutUserInput!]
  delete: [PassageWhereUniqueInput!]
  deleteMany: [PassageScalarWhereInput!]
  disconnect: [PassageWhereUniqueInput!]
  set: [PassageWhereUniqueInput!]
  update: [PassageUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [PassageUpdateManyWithWhereWithoutUserInput!]
  upsert: [PassageUpsertWithWhereUniqueWithoutUserInput!]
}

input PassageUpdateManyWithWhereWithoutLearningObjectsInput {
  data: PassageUpdateManyMutationInput!
  where: PassageScalarWhereInput!
}

input PassageUpdateManyWithWhereWithoutUserInput {
  data: PassageUpdateManyMutationInput!
  where: PassageScalarWhereInput!
}

input PassageUpdateOneWithoutPostsInput {
  connect: PassageWhereUniqueInput
  connectOrCreate: PassageCreateOrConnectWithoutPostsInput
  create: PassageCreateWithoutPostsInput
  delete: Boolean
  disconnect: Boolean
  update: PassageUpdateWithoutPostsInput
  upsert: PassageUpsertWithoutPostsInput
}

input PassageUpdateWithoutLearningObjectsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  Posts: PostUpdateManyWithoutPassageInput
  sourcePath: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPassageInput
}

input PassageUpdateWithoutPostsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPassagesInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  sourcePath: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPassageInput
}

input PassageUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPassagesInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  Posts: PostUpdateManyWithoutPassageInput
  sourcePath: StringFieldUpdateOperationsInput
  text: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PassageUpdateWithWhereUniqueWithoutLearningObjectsInput {
  data: PassageUpdateWithoutLearningObjectsInput!
  where: PassageWhereUniqueInput!
}

input PassageUpdateWithWhereUniqueWithoutUserInput {
  data: PassageUpdateWithoutUserInput!
  where: PassageWhereUniqueInput!
}

input PassageUpsertWithoutPostsInput {
  create: PassageCreateWithoutPostsInput!
  update: PassageUpdateWithoutPostsInput!
}

input PassageUpsertWithWhereUniqueWithoutLearningObjectsInput {
  create: PassageCreateWithoutLearningObjectsInput!
  update: PassageUpdateWithoutLearningObjectsInput!
  where: PassageWhereUniqueInput!
}

input PassageUpsertWithWhereUniqueWithoutUserInput {
  create: PassageCreateWithoutUserInput!
  update: PassageUpdateWithoutUserInput!
  where: PassageWhereUniqueInput!
}

input PassageWhereInput {
  AND: [PassageWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  learningObjects: LearningObjectListRelationFilter
  mediaType: EnumMediaTypeFilter
  NOT: [PassageWhereInput!]
  OR: [PassageWhereInput!]
  Posts: PostListRelationFilter
  sourcePath: StringFilter
  text: StringFilter
  title: StringFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input PassageWhereUniqueInput {
  id: String
}

type Post {
  Contents(after: ContentWhereUniqueInput, before: ContentWhereUniqueInput, first: Int, last: Int): [Content!]!
  createdAt: DateTime!
  description: String
  id: String!
  isPublished: Boolean
  isReacted(userId: String!): String
  Passage: Passage
  PostComments(after: PostCommentsWhereUniqueInput, before: PostCommentsWhereUniqueInput, first: Int, last: Int): [PostComments!]!
  PostCurriculum(after: PostCurriculumWhereUniqueInput, before: PostCurriculumWhereUniqueInput, first: Int, last: Int): [PostCurriculum!]!
  PostReactions(after: PostReactionsWhereUniqueInput, before: PostReactionsWhereUniqueInput, first: Int, last: Int): [PostReactions!]!
  postType: PostType!
  publishedDate: DateTime
  reactionCount: Int
  title: String
  totalCount: Int
  updatedAt: DateTime!
  User: User!
  userSavedPostId(userId: String!): String
}

type PostComments {
  ChildComments(after: PostCommentsWhereUniqueInput, before: PostCommentsWhereUniqueInput, first: Int, last: Int): [PostComments!]!
  comment: String!
  createdAt: DateTime!
  id: String!
  ParentComment: PostComments
  Post: Post!
  postId: String!
  updatedAt: DateTime!
  User: User!
}

input PostCommentsCreateInput {
  ChildComments: PostCommentsCreateNestedManyWithoutParentCommentInput
  comment: String!
  createdAt: DateTime
  id: String
  ParentComment: PostCommentsCreateNestedOneWithoutChildCommentsInput
  Post: PostCreateNestedOneWithoutPostCommentsInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostCommentsInput!
}

input PostCommentsCreateNestedManyWithoutParentCommentInput {
  connect: [PostCommentsWhereUniqueInput!]
  connectOrCreate: [PostCommentsCreateOrConnectWithoutParentCommentInput!]
  create: [PostCommentsCreateWithoutParentCommentInput!]
}

input PostCommentsCreateNestedManyWithoutPostInput {
  connect: [PostCommentsWhereUniqueInput!]
  connectOrCreate: [PostCommentsCreateOrConnectWithoutPostInput!]
  create: [PostCommentsCreateWithoutPostInput!]
}

input PostCommentsCreateNestedManyWithoutUserInput {
  connect: [PostCommentsWhereUniqueInput!]
  connectOrCreate: [PostCommentsCreateOrConnectWithoutUserInput!]
  create: [PostCommentsCreateWithoutUserInput!]
}

input PostCommentsCreateNestedOneWithoutChildCommentsInput {
  connect: PostCommentsWhereUniqueInput
  connectOrCreate: PostCommentsCreateOrConnectWithoutChildCommentsInput
  create: PostCommentsCreateWithoutChildCommentsInput
}

input PostCommentsCreateOrConnectWithoutChildCommentsInput {
  create: PostCommentsCreateWithoutChildCommentsInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsCreateOrConnectWithoutParentCommentInput {
  create: PostCommentsCreateWithoutParentCommentInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsCreateOrConnectWithoutPostInput {
  create: PostCommentsCreateWithoutPostInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsCreateOrConnectWithoutUserInput {
  create: PostCommentsCreateWithoutUserInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsCreateWithoutChildCommentsInput {
  comment: String!
  createdAt: DateTime
  id: String
  ParentComment: PostCommentsCreateNestedOneWithoutChildCommentsInput
  Post: PostCreateNestedOneWithoutPostCommentsInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostCommentsInput!
}

input PostCommentsCreateWithoutParentCommentInput {
  ChildComments: PostCommentsCreateNestedManyWithoutParentCommentInput
  comment: String!
  createdAt: DateTime
  id: String
  Post: PostCreateNestedOneWithoutPostCommentsInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostCommentsInput!
}

input PostCommentsCreateWithoutPostInput {
  ChildComments: PostCommentsCreateNestedManyWithoutParentCommentInput
  comment: String!
  createdAt: DateTime
  id: String
  ParentComment: PostCommentsCreateNestedOneWithoutChildCommentsInput
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostCommentsInput!
}

input PostCommentsCreateWithoutUserInput {
  ChildComments: PostCommentsCreateNestedManyWithoutParentCommentInput
  comment: String!
  createdAt: DateTime
  id: String
  ParentComment: PostCommentsCreateNestedOneWithoutChildCommentsInput
  Post: PostCreateNestedOneWithoutPostCommentsInput!
  updatedAt: DateTime
}

input PostCommentsListRelationFilter {
  every: PostCommentsWhereInput
  none: PostCommentsWhereInput
  some: PostCommentsWhereInput
}

input PostCommentsOrderByInput {
  comment: SortOrder
  createdAt: SortOrder
  id: SortOrder
  ParentComment: PostCommentsOrderByInput
  parentId: SortOrder
  Post: PostOrderByInput
  postId: SortOrder
  updatedAt: SortOrder
  User: UserOrderByInput
  userId: SortOrder
}

input PostCommentsScalarWhereInput {
  AND: [PostCommentsScalarWhereInput!]
  comment: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [PostCommentsScalarWhereInput!]
  OR: [PostCommentsScalarWhereInput!]
  parentId: StringNullableFilter
  postId: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input PostCommentsUpdateManyMutationInput {
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostCommentsUpdateManyWithoutParentCommentInput {
  connect: [PostCommentsWhereUniqueInput!]
  connectOrCreate: [PostCommentsCreateOrConnectWithoutParentCommentInput!]
  create: [PostCommentsCreateWithoutParentCommentInput!]
  delete: [PostCommentsWhereUniqueInput!]
  deleteMany: [PostCommentsScalarWhereInput!]
  disconnect: [PostCommentsWhereUniqueInput!]
  set: [PostCommentsWhereUniqueInput!]
  update: [PostCommentsUpdateWithWhereUniqueWithoutParentCommentInput!]
  updateMany: [PostCommentsUpdateManyWithWhereWithoutParentCommentInput!]
  upsert: [PostCommentsUpsertWithWhereUniqueWithoutParentCommentInput!]
}

input PostCommentsUpdateManyWithoutPostInput {
  connect: [PostCommentsWhereUniqueInput!]
  connectOrCreate: [PostCommentsCreateOrConnectWithoutPostInput!]
  create: [PostCommentsCreateWithoutPostInput!]
  delete: [PostCommentsWhereUniqueInput!]
  deleteMany: [PostCommentsScalarWhereInput!]
  disconnect: [PostCommentsWhereUniqueInput!]
  set: [PostCommentsWhereUniqueInput!]
  update: [PostCommentsUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [PostCommentsUpdateManyWithWhereWithoutPostInput!]
  upsert: [PostCommentsUpsertWithWhereUniqueWithoutPostInput!]
}

input PostCommentsUpdateManyWithoutUserInput {
  connect: [PostCommentsWhereUniqueInput!]
  connectOrCreate: [PostCommentsCreateOrConnectWithoutUserInput!]
  create: [PostCommentsCreateWithoutUserInput!]
  delete: [PostCommentsWhereUniqueInput!]
  deleteMany: [PostCommentsScalarWhereInput!]
  disconnect: [PostCommentsWhereUniqueInput!]
  set: [PostCommentsWhereUniqueInput!]
  update: [PostCommentsUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [PostCommentsUpdateManyWithWhereWithoutUserInput!]
  upsert: [PostCommentsUpsertWithWhereUniqueWithoutUserInput!]
}

input PostCommentsUpdateManyWithWhereWithoutParentCommentInput {
  data: PostCommentsUpdateManyMutationInput!
  where: PostCommentsScalarWhereInput!
}

input PostCommentsUpdateManyWithWhereWithoutPostInput {
  data: PostCommentsUpdateManyMutationInput!
  where: PostCommentsScalarWhereInput!
}

input PostCommentsUpdateManyWithWhereWithoutUserInput {
  data: PostCommentsUpdateManyMutationInput!
  where: PostCommentsScalarWhereInput!
}

input PostCommentsUpdateOneWithoutChildCommentsInput {
  connect: PostCommentsWhereUniqueInput
  connectOrCreate: PostCommentsCreateOrConnectWithoutChildCommentsInput
  create: PostCommentsCreateWithoutChildCommentsInput
  delete: Boolean
  disconnect: Boolean
  update: PostCommentsUpdateWithoutChildCommentsInput
  upsert: PostCommentsUpsertWithoutChildCommentsInput
}

input PostCommentsUpdateWithoutChildCommentsInput {
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ParentComment: PostCommentsUpdateOneWithoutChildCommentsInput
  Post: PostUpdateOneRequiredWithoutPostCommentsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostCommentsInput
}

input PostCommentsUpdateWithoutParentCommentInput {
  ChildComments: PostCommentsUpdateManyWithoutParentCommentInput
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutPostCommentsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostCommentsInput
}

input PostCommentsUpdateWithoutPostInput {
  ChildComments: PostCommentsUpdateManyWithoutParentCommentInput
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ParentComment: PostCommentsUpdateOneWithoutChildCommentsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostCommentsInput
}

input PostCommentsUpdateWithoutUserInput {
  ChildComments: PostCommentsUpdateManyWithoutParentCommentInput
  comment: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ParentComment: PostCommentsUpdateOneWithoutChildCommentsInput
  Post: PostUpdateOneRequiredWithoutPostCommentsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostCommentsUpdateWithWhereUniqueWithoutParentCommentInput {
  data: PostCommentsUpdateWithoutParentCommentInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsUpdateWithWhereUniqueWithoutPostInput {
  data: PostCommentsUpdateWithoutPostInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsUpdateWithWhereUniqueWithoutUserInput {
  data: PostCommentsUpdateWithoutUserInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsUpsertWithoutChildCommentsInput {
  create: PostCommentsCreateWithoutChildCommentsInput!
  update: PostCommentsUpdateWithoutChildCommentsInput!
}

input PostCommentsUpsertWithWhereUniqueWithoutParentCommentInput {
  create: PostCommentsCreateWithoutParentCommentInput!
  update: PostCommentsUpdateWithoutParentCommentInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsUpsertWithWhereUniqueWithoutPostInput {
  create: PostCommentsCreateWithoutPostInput!
  update: PostCommentsUpdateWithoutPostInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsUpsertWithWhereUniqueWithoutUserInput {
  create: PostCommentsCreateWithoutUserInput!
  update: PostCommentsUpdateWithoutUserInput!
  where: PostCommentsWhereUniqueInput!
}

input PostCommentsWhereInput {
  AND: [PostCommentsWhereInput!]
  ChildComments: PostCommentsListRelationFilter
  comment: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [PostCommentsWhereInput!]
  OR: [PostCommentsWhereInput!]
  ParentComment: PostCommentsWhereInput
  parentId: StringNullableFilter
  Post: PostWhereInput
  postId: StringFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input PostCommentsWhereUniqueInput {
  id: String
}

input PostCreateInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateNestedManyWithoutLearningObjectsInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutlearningObjectsInput!]
  create: [PostCreateWithoutLearningObjectsInput!]
}

input PostCreateNestedManyWithoutPassageInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutPassageInput!]
  create: [PostCreateWithoutPassageInput!]
}

input PostCreateNestedManyWithoutUserInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutUserInput!]
  create: [PostCreateWithoutUserInput!]
}

input PostCreateNestedOneWithoutContentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutContentsInput
  create: PostCreateWithoutContentsInput
}

input PostCreateNestedOneWithoutPostCommentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostCommentsInput
  create: PostCreateWithoutPostCommentsInput
}

input PostCreateNestedOneWithoutPostCurriculumInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostCurriculumInput
  create: PostCreateWithoutPostCurriculumInput
}

input PostCreateNestedOneWithoutPostReactionsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostReactionsInput
  create: PostCreateWithoutPostReactionsInput
}

input PostCreateNestedOneWithoutPostViewInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostViewInput
  create: PostCreateWithoutPostViewInput
}

input PostCreateNestedOneWithoutUserCurriculumRetentionInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutUserCurriculumRetentionInput
  create: PostCreateWithoutUserCurriculumRetentionInput
}

input PostCreateNestedOneWithoutUserLearningProgressInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutUserLearningProgressInput
  create: PostCreateWithoutUserLearningProgressInput
}

input PostCreateNestedOneWithoutUserSavedPostsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutUserSavedPostsInput
  create: PostCreateWithoutUserSavedPostsInput
}

input PostCreateOrConnectWithoutContentsInput {
  create: PostCreateWithoutContentsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutlearningObjectsInput {
  create: PostCreateWithoutLearningObjectsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPassageInput {
  create: PostCreateWithoutPassageInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPostCommentsInput {
  create: PostCreateWithoutPostCommentsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPostCurriculumInput {
  create: PostCreateWithoutPostCurriculumInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPostReactionsInput {
  create: PostCreateWithoutPostReactionsInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutPostViewInput {
  create: PostCreateWithoutPostViewInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutUserCurriculumRetentionInput {
  create: PostCreateWithoutUserCurriculumRetentionInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutUserInput {
  create: PostCreateWithoutUserInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutUserLearningProgressInput {
  create: PostCreateWithoutUserLearningProgressInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutUserSavedPostsInput {
  create: PostCreateWithoutUserSavedPostsInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutContentsInput {
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutLearningObjectsInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutPassageInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutPostCommentsInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutPostCurriculumInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutPostReactionsInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutPostViewInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutUserCurriculumRetentionInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutUserInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutUserLearningProgressInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutPostInput
}

input PostCreateWithoutUserSavedPostsInput {
  Contents: ContentCreateNestedManyWithoutPostInput
  createdAt: DateTime
  description: String
  id: String
  isPublished: Boolean
  learningObjects: LearningObjectCreateNestedManyWithoutPostsInput
  Passage: PassageCreateNestedOneWithoutPostsInput
  PostComments: PostCommentsCreateNestedManyWithoutPostInput
  PostCurriculum: PostCurriculumCreateNestedManyWithoutPostInput
  PostReactions: PostReactionsCreateNestedManyWithoutPostInput
  postType: PostType!
  PostView: PostViewCreateNestedManyWithoutPostInput
  publishedDate: DateTime
  title: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostsInput!
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutPostInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutPostInput
}

type PostCurriculum {
  createdAt: DateTime!
  Curriculum: Curriculum!
  id: String!
  Post: Post!
  updatedAt: DateTime!
}

input PostCurriculumCreateNestedManyWithoutCurriculumInput {
  connect: [PostCurriculumWhereUniqueInput!]
  connectOrCreate: [PostCurriculumCreateOrConnectWithoutCurriculumInput!]
  create: [PostCurriculumCreateWithoutCurriculumInput!]
}

input PostCurriculumCreateNestedManyWithoutPostInput {
  connect: [PostCurriculumWhereUniqueInput!]
  connectOrCreate: [PostCurriculumCreateOrConnectWithoutPostInput!]
  create: [PostCurriculumCreateWithoutPostInput!]
}

input PostCurriculumCreateOrConnectWithoutCurriculumInput {
  create: PostCurriculumCreateWithoutCurriculumInput!
  where: PostCurriculumWhereUniqueInput!
}

input PostCurriculumCreateOrConnectWithoutPostInput {
  create: PostCurriculumCreateWithoutPostInput!
  where: PostCurriculumWhereUniqueInput!
}

input PostCurriculumCreateWithoutCurriculumInput {
  createdAt: DateTime
  id: String
  Post: PostCreateNestedOneWithoutPostCurriculumInput!
  updatedAt: DateTime
}

input PostCurriculumCreateWithoutPostInput {
  createdAt: DateTime
  Curriculum: CurriculumCreateNestedOneWithoutPostCurriculumInput!
  id: String
  updatedAt: DateTime
}

input PostCurriculumListRelationFilter {
  every: PostCurriculumWhereInput
  none: PostCurriculumWhereInput
  some: PostCurriculumWhereInput
}

input PostCurriculumScalarWhereInput {
  AND: [PostCurriculumScalarWhereInput!]
  createdAt: DateTimeFilter
  curriculumId: StringFilter
  id: StringFilter
  NOT: [PostCurriculumScalarWhereInput!]
  OR: [PostCurriculumScalarWhereInput!]
  postId: StringFilter
  updatedAt: DateTimeFilter
}

input PostCurriculumUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostCurriculumUpdateManyWithoutCurriculumInput {
  connect: [PostCurriculumWhereUniqueInput!]
  connectOrCreate: [PostCurriculumCreateOrConnectWithoutCurriculumInput!]
  create: [PostCurriculumCreateWithoutCurriculumInput!]
  delete: [PostCurriculumWhereUniqueInput!]
  deleteMany: [PostCurriculumScalarWhereInput!]
  disconnect: [PostCurriculumWhereUniqueInput!]
  set: [PostCurriculumWhereUniqueInput!]
  update: [PostCurriculumUpdateWithWhereUniqueWithoutCurriculumInput!]
  updateMany: [PostCurriculumUpdateManyWithWhereWithoutCurriculumInput!]
  upsert: [PostCurriculumUpsertWithWhereUniqueWithoutCurriculumInput!]
}

input PostCurriculumUpdateManyWithoutPostInput {
  connect: [PostCurriculumWhereUniqueInput!]
  connectOrCreate: [PostCurriculumCreateOrConnectWithoutPostInput!]
  create: [PostCurriculumCreateWithoutPostInput!]
  delete: [PostCurriculumWhereUniqueInput!]
  deleteMany: [PostCurriculumScalarWhereInput!]
  disconnect: [PostCurriculumWhereUniqueInput!]
  set: [PostCurriculumWhereUniqueInput!]
  update: [PostCurriculumUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [PostCurriculumUpdateManyWithWhereWithoutPostInput!]
  upsert: [PostCurriculumUpsertWithWhereUniqueWithoutPostInput!]
}

input PostCurriculumUpdateManyWithWhereWithoutCurriculumInput {
  data: PostCurriculumUpdateManyMutationInput!
  where: PostCurriculumScalarWhereInput!
}

input PostCurriculumUpdateManyWithWhereWithoutPostInput {
  data: PostCurriculumUpdateManyMutationInput!
  where: PostCurriculumScalarWhereInput!
}

input PostCurriculumUpdateWithoutCurriculumInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutPostCurriculumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostCurriculumUpdateWithoutPostInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  Curriculum: CurriculumUpdateOneRequiredWithoutPostCurriculumInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostCurriculumUpdateWithWhereUniqueWithoutCurriculumInput {
  data: PostCurriculumUpdateWithoutCurriculumInput!
  where: PostCurriculumWhereUniqueInput!
}

input PostCurriculumUpdateWithWhereUniqueWithoutPostInput {
  data: PostCurriculumUpdateWithoutPostInput!
  where: PostCurriculumWhereUniqueInput!
}

input PostCurriculumUpsertWithWhereUniqueWithoutCurriculumInput {
  create: PostCurriculumCreateWithoutCurriculumInput!
  update: PostCurriculumUpdateWithoutCurriculumInput!
  where: PostCurriculumWhereUniqueInput!
}

input PostCurriculumUpsertWithWhereUniqueWithoutPostInput {
  create: PostCurriculumCreateWithoutPostInput!
  update: PostCurriculumUpdateWithoutPostInput!
  where: PostCurriculumWhereUniqueInput!
}

input PostCurriculumWhereInput {
  AND: [PostCurriculumWhereInput!]
  createdAt: DateTimeFilter
  Curriculum: CurriculumWhereInput
  curriculumId: StringFilter
  id: StringFilter
  NOT: [PostCurriculumWhereInput!]
  OR: [PostCurriculumWhereInput!]
  Post: PostWhereInput
  postId: StringFilter
  updatedAt: DateTimeFilter
}

input PostCurriculumWhereUniqueInput {
  id: String
}

input PostListRelationFilter {
  every: PostWhereInput
  none: PostWhereInput
  some: PostWhereInput
}

input PostOrderByInput {
  createdAt: SortOrder
  description: SortOrder
  id: SortOrder
  isPublished: SortOrder
  Passage: PassageOrderByInput
  passageId: SortOrder
  postType: SortOrder
  publishedDate: SortOrder
  title: SortOrder
  updatedAt: SortOrder
  User: UserOrderByInput
  userId: SortOrder
}

type PostReactions {
  id: String!
  Post: Post!
  postId: String!
  ReactionType: ReactionTypes
  User: User!
  userId: String!
}

input PostReactionsCreateInput {
  createdAt: DateTime
  id: String
  Post: PostCreateNestedOneWithoutPostReactionsInput!
  ReactionTypes: ReactionTypesCreateNestedOneWithoutPostReactionsInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostReactionsInput!
}

input PostReactionsCreateNestedManyWithoutPostInput {
  connect: [PostReactionsWhereUniqueInput!]
  connectOrCreate: [PostReactionsCreateOrConnectWithoutPostInput!]
  create: [PostReactionsCreateWithoutPostInput!]
}

input PostReactionsCreateNestedManyWithoutUserInput {
  connect: [PostReactionsWhereUniqueInput!]
  connectOrCreate: [PostReactionsCreateOrConnectWithoutUserInput!]
  create: [PostReactionsCreateWithoutUserInput!]
}

input PostReactionsCreateOrConnectWithoutPostInput {
  create: PostReactionsCreateWithoutPostInput!
  where: PostReactionsWhereUniqueInput!
}

input PostReactionsCreateOrConnectWithoutUserInput {
  create: PostReactionsCreateWithoutUserInput!
  where: PostReactionsWhereUniqueInput!
}

input PostReactionsCreateWithoutPostInput {
  createdAt: DateTime
  id: String
  ReactionTypes: ReactionTypesCreateNestedOneWithoutPostReactionsInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostReactionsInput!
}

input PostReactionsCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  Post: PostCreateNestedOneWithoutPostReactionsInput!
  ReactionTypes: ReactionTypesCreateNestedOneWithoutPostReactionsInput!
  updatedAt: DateTime
}

input PostReactionsListRelationFilter {
  every: PostReactionsWhereInput
  none: PostReactionsWhereInput
  some: PostReactionsWhereInput
}

input PostReactionsScalarWhereInput {
  AND: [PostReactionsScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [PostReactionsScalarWhereInput!]
  OR: [PostReactionsScalarWhereInput!]
  postId: StringFilter
  reactionTypeId: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input PostReactionsUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostReactionsUpdateManyWithoutPostInput {
  connect: [PostReactionsWhereUniqueInput!]
  connectOrCreate: [PostReactionsCreateOrConnectWithoutPostInput!]
  create: [PostReactionsCreateWithoutPostInput!]
  delete: [PostReactionsWhereUniqueInput!]
  deleteMany: [PostReactionsScalarWhereInput!]
  disconnect: [PostReactionsWhereUniqueInput!]
  set: [PostReactionsWhereUniqueInput!]
  update: [PostReactionsUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [PostReactionsUpdateManyWithWhereWithoutPostInput!]
  upsert: [PostReactionsUpsertWithWhereUniqueWithoutPostInput!]
}

input PostReactionsUpdateManyWithoutUserInput {
  connect: [PostReactionsWhereUniqueInput!]
  connectOrCreate: [PostReactionsCreateOrConnectWithoutUserInput!]
  create: [PostReactionsCreateWithoutUserInput!]
  delete: [PostReactionsWhereUniqueInput!]
  deleteMany: [PostReactionsScalarWhereInput!]
  disconnect: [PostReactionsWhereUniqueInput!]
  set: [PostReactionsWhereUniqueInput!]
  update: [PostReactionsUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [PostReactionsUpdateManyWithWhereWithoutUserInput!]
  upsert: [PostReactionsUpsertWithWhereUniqueWithoutUserInput!]
}

input PostReactionsUpdateManyWithWhereWithoutPostInput {
  data: PostReactionsUpdateManyMutationInput!
  where: PostReactionsScalarWhereInput!
}

input PostReactionsUpdateManyWithWhereWithoutUserInput {
  data: PostReactionsUpdateManyMutationInput!
  where: PostReactionsScalarWhereInput!
}

input PostReactionsUpdateWithoutPostInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  ReactionTypes: ReactionTypesUpdateOneRequiredWithoutPostReactionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostReactionsInput
}

input PostReactionsUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutPostReactionsInput
  ReactionTypes: ReactionTypesUpdateOneRequiredWithoutPostReactionsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostReactionsUpdateWithWhereUniqueWithoutPostInput {
  data: PostReactionsUpdateWithoutPostInput!
  where: PostReactionsWhereUniqueInput!
}

input PostReactionsUpdateWithWhereUniqueWithoutUserInput {
  data: PostReactionsUpdateWithoutUserInput!
  where: PostReactionsWhereUniqueInput!
}

input PostReactionsUpsertWithWhereUniqueWithoutPostInput {
  create: PostReactionsCreateWithoutPostInput!
  update: PostReactionsUpdateWithoutPostInput!
  where: PostReactionsWhereUniqueInput!
}

input PostReactionsUpsertWithWhereUniqueWithoutUserInput {
  create: PostReactionsCreateWithoutUserInput!
  update: PostReactionsUpdateWithoutUserInput!
  where: PostReactionsWhereUniqueInput!
}

input PostReactionsWhereInput {
  AND: [PostReactionsWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [PostReactionsWhereInput!]
  OR: [PostReactionsWhereInput!]
  Post: PostWhereInput
  postId: StringFilter
  reactionTypeId: StringFilter
  ReactionTypes: ReactionTypesWhereInput
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input PostReactionsWhereUniqueInput {
  id: String
}

input PostScalarWhereInput {
  AND: [PostScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  isPublished: BoolNullableFilter
  NOT: [PostScalarWhereInput!]
  OR: [PostScalarWhereInput!]
  passageId: StringNullableFilter
  postType: EnumPostTypeFilter
  publishedDate: DateTimeNullableFilter
  title: StringNullableFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

enum PostType {
  Assessment
  Community
  FollowMembers
  InviteFriends
  Learning
  Medidation
  Practice
  Rank
  TargetExam
  TargetPoint
  TargetSchool
}

input PostUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input PostUpdateManyWithoutLearningObjectsInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutlearningObjectsInput!]
  create: [PostCreateWithoutLearningObjectsInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutLearningObjectsInput!]
  updateMany: [PostUpdateManyWithWhereWithoutLearningObjectsInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutLearningObjectsInput!]
}

input PostUpdateManyWithoutPassageInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutPassageInput!]
  create: [PostCreateWithoutPassageInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutPassageInput!]
  updateMany: [PostUpdateManyWithWhereWithoutPassageInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutPassageInput!]
}

input PostUpdateManyWithoutUserInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutUserInput!]
  create: [PostCreateWithoutUserInput!]
  delete: [PostWhereUniqueInput!]
  deleteMany: [PostScalarWhereInput!]
  disconnect: [PostWhereUniqueInput!]
  set: [PostWhereUniqueInput!]
  update: [PostUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [PostUpdateManyWithWhereWithoutUserInput!]
  upsert: [PostUpsertWithWhereUniqueWithoutUserInput!]
}

input PostUpdateManyWithWhereWithoutLearningObjectsInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutPassageInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateManyWithWhereWithoutUserInput {
  data: PostUpdateManyMutationInput!
  where: PostScalarWhereInput!
}

input PostUpdateOneRequiredWithoutContentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutContentsInput
  create: PostCreateWithoutContentsInput
  update: PostUpdateWithoutContentsInput
  upsert: PostUpsertWithoutContentsInput
}

input PostUpdateOneRequiredWithoutPostCommentsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostCommentsInput
  create: PostCreateWithoutPostCommentsInput
  update: PostUpdateWithoutPostCommentsInput
  upsert: PostUpsertWithoutPostCommentsInput
}

input PostUpdateOneRequiredWithoutPostCurriculumInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostCurriculumInput
  create: PostCreateWithoutPostCurriculumInput
  update: PostUpdateWithoutPostCurriculumInput
  upsert: PostUpsertWithoutPostCurriculumInput
}

input PostUpdateOneRequiredWithoutPostReactionsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostReactionsInput
  create: PostCreateWithoutPostReactionsInput
  update: PostUpdateWithoutPostReactionsInput
  upsert: PostUpsertWithoutPostReactionsInput
}

input PostUpdateOneRequiredWithoutPostViewInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutPostViewInput
  create: PostCreateWithoutPostViewInput
  update: PostUpdateWithoutPostViewInput
  upsert: PostUpsertWithoutPostViewInput
}

input PostUpdateOneRequiredWithoutUserCurriculumRetentionInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutUserCurriculumRetentionInput
  create: PostCreateWithoutUserCurriculumRetentionInput
  update: PostUpdateWithoutUserCurriculumRetentionInput
  upsert: PostUpsertWithoutUserCurriculumRetentionInput
}

input PostUpdateOneRequiredWithoutUserLearningProgressInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutUserLearningProgressInput
  create: PostCreateWithoutUserLearningProgressInput
  update: PostUpdateWithoutUserLearningProgressInput
  upsert: PostUpsertWithoutUserLearningProgressInput
}

input PostUpdateOneRequiredWithoutUserSavedPostsInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutUserSavedPostsInput
  create: PostCreateWithoutUserSavedPostsInput
  update: PostUpdateWithoutUserSavedPostsInput
  upsert: PostUpsertWithoutUserSavedPostsInput
}

input PostUpdateWithoutContentsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutLearningObjectsInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutPassageInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutPostCommentsInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutPostCurriculumInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutPostReactionsInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutPostViewInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutUserCurriculumRetentionInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutUserInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutUserLearningProgressInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutPostInput
}

input PostUpdateWithoutUserSavedPostsInput {
  Contents: ContentUpdateManyWithoutPostInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublished: NullableBoolFieldUpdateOperationsInput
  learningObjects: LearningObjectUpdateManyWithoutPostsInput
  Passage: PassageUpdateOneWithoutPostsInput
  PostComments: PostCommentsUpdateManyWithoutPostInput
  PostCurriculum: PostCurriculumUpdateManyWithoutPostInput
  PostReactions: PostReactionsUpdateManyWithoutPostInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  PostView: PostViewUpdateManyWithoutPostInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  title: NullableStringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostsInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutPostInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutPostInput
}

input PostUpdateWithWhereUniqueWithoutLearningObjectsInput {
  data: PostUpdateWithoutLearningObjectsInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutPassageInput {
  data: PostUpdateWithoutPassageInput!
  where: PostWhereUniqueInput!
}

input PostUpdateWithWhereUniqueWithoutUserInput {
  data: PostUpdateWithoutUserInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithoutContentsInput {
  create: PostCreateWithoutContentsInput!
  update: PostUpdateWithoutContentsInput!
}

input PostUpsertWithoutPostCommentsInput {
  create: PostCreateWithoutPostCommentsInput!
  update: PostUpdateWithoutPostCommentsInput!
}

input PostUpsertWithoutPostCurriculumInput {
  create: PostCreateWithoutPostCurriculumInput!
  update: PostUpdateWithoutPostCurriculumInput!
}

input PostUpsertWithoutPostReactionsInput {
  create: PostCreateWithoutPostReactionsInput!
  update: PostUpdateWithoutPostReactionsInput!
}

input PostUpsertWithoutPostViewInput {
  create: PostCreateWithoutPostViewInput!
  update: PostUpdateWithoutPostViewInput!
}

input PostUpsertWithoutUserCurriculumRetentionInput {
  create: PostCreateWithoutUserCurriculumRetentionInput!
  update: PostUpdateWithoutUserCurriculumRetentionInput!
}

input PostUpsertWithoutUserLearningProgressInput {
  create: PostCreateWithoutUserLearningProgressInput!
  update: PostUpdateWithoutUserLearningProgressInput!
}

input PostUpsertWithoutUserSavedPostsInput {
  create: PostCreateWithoutUserSavedPostsInput!
  update: PostUpdateWithoutUserSavedPostsInput!
}

input PostUpsertWithWhereUniqueWithoutLearningObjectsInput {
  create: PostCreateWithoutLearningObjectsInput!
  update: PostUpdateWithoutLearningObjectsInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutPassageInput {
  create: PostCreateWithoutPassageInput!
  update: PostUpdateWithoutPassageInput!
  where: PostWhereUniqueInput!
}

input PostUpsertWithWhereUniqueWithoutUserInput {
  create: PostCreateWithoutUserInput!
  update: PostUpdateWithoutUserInput!
  where: PostWhereUniqueInput!
}

type PostView {
  createdAt: DateTime!
  id: String!
  Post: Post!
  postType: PostType!
  updatedAt: DateTime!
  User: User!
  visiblePercent: Float!
  watchDate: DateTime!
  watchIndex: Int!
}

input PostViewCreateInput {
  createdAt: DateTime
  id: String
  Post: PostCreateNestedOneWithoutPostViewInput!
  postType: PostType!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostViewInput!
  visiblePercent: Float!
  watchDate: DateTime
  watchIndex: Int!
}

input PostViewCreateNestedManyWithoutPostInput {
  connect: [PostViewWhereUniqueInput!]
  connectOrCreate: [PostViewCreateOrConnectWithoutPostInput!]
  create: [PostViewCreateWithoutPostInput!]
}

input PostViewCreateNestedManyWithoutUserInput {
  connect: [PostViewWhereUniqueInput!]
  connectOrCreate: [PostViewCreateOrConnectWithoutUserInput!]
  create: [PostViewCreateWithoutUserInput!]
}

input PostViewCreateOrConnectWithoutPostInput {
  create: PostViewCreateWithoutPostInput!
  where: PostViewWhereUniqueInput!
}

input PostViewCreateOrConnectWithoutUserInput {
  create: PostViewCreateWithoutUserInput!
  where: PostViewWhereUniqueInput!
}

input PostViewCreateWithoutPostInput {
  createdAt: DateTime
  id: String
  postType: PostType!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutPostViewInput!
  visiblePercent: Float!
  watchDate: DateTime
  watchIndex: Int!
}

input PostViewCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  Post: PostCreateNestedOneWithoutPostViewInput!
  postType: PostType!
  updatedAt: DateTime
  visiblePercent: Float!
  watchDate: DateTime
  watchIndex: Int!
}

input PostViewListRelationFilter {
  every: PostViewWhereInput
  none: PostViewWhereInput
  some: PostViewWhereInput
}

input PostViewScalarWhereInput {
  AND: [PostViewScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [PostViewScalarWhereInput!]
  OR: [PostViewScalarWhereInput!]
  postId: StringFilter
  postType: EnumPostTypeFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
  visiblePercent: FloatFilter
  watchDate: DateTimeFilter
  watchIndex: IntFilter
}

input PostViewUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  visiblePercent: FloatFieldUpdateOperationsInput
  watchDate: DateTimeFieldUpdateOperationsInput
  watchIndex: IntFieldUpdateOperationsInput
}

input PostViewUpdateManyWithoutPostInput {
  connect: [PostViewWhereUniqueInput!]
  connectOrCreate: [PostViewCreateOrConnectWithoutPostInput!]
  create: [PostViewCreateWithoutPostInput!]
  delete: [PostViewWhereUniqueInput!]
  deleteMany: [PostViewScalarWhereInput!]
  disconnect: [PostViewWhereUniqueInput!]
  set: [PostViewWhereUniqueInput!]
  update: [PostViewUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [PostViewUpdateManyWithWhereWithoutPostInput!]
  upsert: [PostViewUpsertWithWhereUniqueWithoutPostInput!]
}

input PostViewUpdateManyWithoutUserInput {
  connect: [PostViewWhereUniqueInput!]
  connectOrCreate: [PostViewCreateOrConnectWithoutUserInput!]
  create: [PostViewCreateWithoutUserInput!]
  delete: [PostViewWhereUniqueInput!]
  deleteMany: [PostViewScalarWhereInput!]
  disconnect: [PostViewWhereUniqueInput!]
  set: [PostViewWhereUniqueInput!]
  update: [PostViewUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [PostViewUpdateManyWithWhereWithoutUserInput!]
  upsert: [PostViewUpsertWithWhereUniqueWithoutUserInput!]
}

input PostViewUpdateManyWithWhereWithoutPostInput {
  data: PostViewUpdateManyMutationInput!
  where: PostViewScalarWhereInput!
}

input PostViewUpdateManyWithWhereWithoutUserInput {
  data: PostViewUpdateManyMutationInput!
  where: PostViewScalarWhereInput!
}

input PostViewUpdateWithoutPostInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutPostViewInput
  visiblePercent: FloatFieldUpdateOperationsInput
  watchDate: DateTimeFieldUpdateOperationsInput
  watchIndex: IntFieldUpdateOperationsInput
}

input PostViewUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutPostViewInput
  postType: EnumPostTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  visiblePercent: FloatFieldUpdateOperationsInput
  watchDate: DateTimeFieldUpdateOperationsInput
  watchIndex: IntFieldUpdateOperationsInput
}

input PostViewUpdateWithWhereUniqueWithoutPostInput {
  data: PostViewUpdateWithoutPostInput!
  where: PostViewWhereUniqueInput!
}

input PostViewUpdateWithWhereUniqueWithoutUserInput {
  data: PostViewUpdateWithoutUserInput!
  where: PostViewWhereUniqueInput!
}

input PostViewUpsertWithWhereUniqueWithoutPostInput {
  create: PostViewCreateWithoutPostInput!
  update: PostViewUpdateWithoutPostInput!
  where: PostViewWhereUniqueInput!
}

input PostViewUpsertWithWhereUniqueWithoutUserInput {
  create: PostViewCreateWithoutUserInput!
  update: PostViewUpdateWithoutUserInput!
  where: PostViewWhereUniqueInput!
}

input PostViewWhereInput {
  AND: [PostViewWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [PostViewWhereInput!]
  OR: [PostViewWhereInput!]
  Post: PostWhereInput
  postId: StringFilter
  postType: EnumPostTypeFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
  visiblePercent: FloatFilter
  watchDate: DateTimeFilter
  watchIndex: IntFilter
}

input PostViewWhereUniqueInput {
  id: String
}

input PostWhereInput {
  AND: [PostWhereInput!]
  Contents: ContentListRelationFilter
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  isPublished: BoolNullableFilter
  learningObjects: LearningObjectListRelationFilter
  NOT: [PostWhereInput!]
  OR: [PostWhereInput!]
  Passage: PassageWhereInput
  passageId: StringNullableFilter
  PostComments: PostCommentsListRelationFilter
  PostCurriculum: PostCurriculumListRelationFilter
  PostReactions: PostReactionsListRelationFilter
  postType: EnumPostTypeFilter
  PostView: PostViewListRelationFilter
  publishedDate: DateTimeNullableFilter
  title: StringNullableFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  UserCurriculumRetention: UserCurriculumRetentionListRelationFilter
  userId: StringFilter
  UserLearningProgress: UserLearningProgressListRelationFilter
  UserSavedPosts: UserSavedPostsListRelationFilter
}

input PostWhereUniqueInput {
  id: String
}

type Query {
  careers(after: CareerWhereUniqueInput, before: CareerWhereUniqueInput, first: Int, last: Int): [Career!]!
  contents(after: ContentWhereUniqueInput, before: ContentWhereUniqueInput, first: Int, last: Int, orderBy: [ContentOrderByInput!], where: ContentWhereInput): [Content!]!
  curricula(after: CurriculumWhereUniqueInput, before: CurriculumWhereUniqueInput, first: Int, last: Int, orderBy: [CurriculumOrderByInput!], where: CurriculumWhereInput): [Curriculum!]!
  curriculum(where: CurriculumWhereUniqueInput!): Curriculum
  curriculumSchool(where: CurriculumSchoolWhereUniqueInput!): CurriculumSchool
  curriculumSchools(after: CurriculumSchoolWhereUniqueInput, before: CurriculumSchoolWhereUniqueInput, first: Int, last: Int, orderBy: [CurriculumSchoolOrderByInput!], where: CurriculumSchoolWhereInput): [CurriculumSchool!]!
  feedbacks(after: FeedbackWhereUniqueInput, before: FeedbackWhereUniqueInput, first: Int, last: Int): [Feedback!]!
  getMe: User
  getProgress(curriculumId: String, userId: String): Curriculum
  momentumItems(after: MomentumItemWhereUniqueInput, before: MomentumItemWhereUniqueInput, first: Int, last: Int): [MomentumItem!]!
  onboardTypes(after: OnboardTypeWhereUniqueInput, before: OnboardTypeWhereUniqueInput, first: Int, last: Int, orderBy: [OnboardTypeOrderByInput!], where: OnboardTypeWhereInput): [OnboardType!]!
  postComments(after: PostCommentsWhereUniqueInput, before: PostCommentsWhereUniqueInput, first: Int, last: Int, orderBy: [PostCommentsOrderByInput!], where: PostCommentsWhereInput): [PostComments!]!
  postReactions(after: PostReactionsWhereUniqueInput, before: PostReactionsWhereUniqueInput, first: Int, last: Int, where: PostReactionsWhereInput): [PostReactions!]!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int, orderBy: [PostOrderByInput!], where: PostWhereInput): [Post!]!
  postView(where: PostViewWhereUniqueInput!): PostView
  reactionTypes(after: ReactionTypesWhereUniqueInput, before: ReactionTypesWhereUniqueInput, first: Int, last: Int): [ReactionTypes!]!
  stories(after: StoryWhereUniqueInput, before: StoryWhereUniqueInput, first: Int, last: Int): [Story!]!
  user(where: UserWhereUniqueInput!): User
  userCurricula(after: UserCurriculumWhereUniqueInput, before: UserCurriculumWhereUniqueInput, first: Int, last: Int, where: UserCurriculumWhereInput): [UserCurriculum!]!
  userCurriculum(where: UserCurriculumWhereUniqueInput!): UserCurriculum
  userCurriculumRetention(where: UserCurriculumRetentionWhereUniqueInput!): UserCurriculumRetention
  userCurriculumRetentions(after: UserCurriculumRetentionWhereUniqueInput, before: UserCurriculumRetentionWhereUniqueInput, first: Int, last: Int): [UserCurriculumRetention!]!
  userCurriculumSchool(where: UserCurriculumSchoolWhereUniqueInput!): UserCurriculumSchool
  userFollows(after: UserFollowWhereUniqueInput, before: UserFollowWhereUniqueInput, first: Int, last: Int, orderBy: [UserFollowOrderByInput!], where: UserFollowWhereInput): [UserFollow!]!
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int, orderBy: [UserOrderByInput!], where: UserWhereInput): [User!]!
  userSavedPosts(after: UserSavedPostsWhereUniqueInput, before: UserSavedPostsWhereUniqueInput, first: Int, last: Int, where: UserSavedPostsWhereInput): [UserSavedPosts!]!
}

type ReactionTypes {
  iconPath: String!
  id: String!
  name: String!
  PostReactions(after: PostReactionsWhereUniqueInput, before: PostReactionsWhereUniqueInput, first: Int, last: Int): [PostReactions!]!
  value: Int!
}

input ReactionTypesCreateNestedOneWithoutPostReactionsInput {
  connect: ReactionTypesWhereUniqueInput
  connectOrCreate: ReactionTypesCreateOrConnectWithoutPostReactionsInput
  create: ReactionTypesCreateWithoutPostReactionsInput
}

input ReactionTypesCreateOrConnectWithoutPostReactionsInput {
  create: ReactionTypesCreateWithoutPostReactionsInput!
  where: ReactionTypesWhereUniqueInput!
}

input ReactionTypesCreateWithoutPostReactionsInput {
  iconPath: String!
  id: String
  name: String!
  value: Int!
}

input ReactionTypesUpdateOneRequiredWithoutPostReactionsInput {
  connect: ReactionTypesWhereUniqueInput
  connectOrCreate: ReactionTypesCreateOrConnectWithoutPostReactionsInput
  create: ReactionTypesCreateWithoutPostReactionsInput
  update: ReactionTypesUpdateWithoutPostReactionsInput
  upsert: ReactionTypesUpsertWithoutPostReactionsInput
}

input ReactionTypesUpdateWithoutPostReactionsInput {
  iconPath: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  value: IntFieldUpdateOperationsInput
}

input ReactionTypesUpsertWithoutPostReactionsInput {
  create: ReactionTypesCreateWithoutPostReactionsInput!
  update: ReactionTypesUpdateWithoutPostReactionsInput!
}

input ReactionTypesWhereInput {
  AND: [ReactionTypesWhereInput!]
  iconPath: StringFilter
  id: StringFilter
  name: StringFilter
  NOT: [ReactionTypesWhereInput!]
  OR: [ReactionTypesWhereInput!]
  PostReactions: PostReactionsListRelationFilter
  value: IntFilter
}

input ReactionTypesWhereUniqueInput {
  id: String
}

enum ResultUserCurriculum {
  failed
  saved
}

input RetentionConfigCreateNestedOneWithoutUserCurriculumRetentionInput {
  connect: RetentionConfigWhereUniqueInput
  connectOrCreate: RetentionConfigCreateOrConnectWithoutUserCurriculumRetentionInput
  create: RetentionConfigCreateWithoutUserCurriculumRetentionInput
}

input RetentionConfigCreateOrConnectWithoutUserCurriculumRetentionInput {
  create: RetentionConfigCreateWithoutUserCurriculumRetentionInput!
  where: RetentionConfigWhereUniqueInput!
}

input RetentionConfigCreateWithoutUserCurriculumRetentionInput {
  createdAt: DateTime
  id: String
  isLearn: Boolean!
  retentionDay: Int!
  sequence: Int!
  updatedAt: DateTime
}

input RetentionConfigUpdateOneRequiredWithoutUserCurriculumRetentionInput {
  connect: RetentionConfigWhereUniqueInput
  connectOrCreate: RetentionConfigCreateOrConnectWithoutUserCurriculumRetentionInput
  create: RetentionConfigCreateWithoutUserCurriculumRetentionInput
  update: RetentionConfigUpdateWithoutUserCurriculumRetentionInput
  upsert: RetentionConfigUpsertWithoutUserCurriculumRetentionInput
}

input RetentionConfigUpdateWithoutUserCurriculumRetentionInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isLearn: BoolFieldUpdateOperationsInput
  retentionDay: IntFieldUpdateOperationsInput
  sequence: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RetentionConfigUpsertWithoutUserCurriculumRetentionInput {
  create: RetentionConfigCreateWithoutUserCurriculumRetentionInput!
  update: RetentionConfigUpdateWithoutUserCurriculumRetentionInput!
}

input RetentionConfigWhereInput {
  AND: [RetentionConfigWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isLearn: BoolFilter
  NOT: [RetentionConfigWhereInput!]
  OR: [RetentionConfigWhereInput!]
  retentionDay: IntFilter
  sequence: IntFilter
  updatedAt: DateTimeFilter
  UserCurriculumRetention: UserCurriculumRetentionListRelationFilter
}

input RetentionConfigWhereUniqueInput {
  id: String
}

input RoleCreateNestedManyWithoutUsersInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUsersInput!]
  create: [RoleCreateWithoutUsersInput!]
}

input RoleCreateOrConnectWithoutUsersInput {
  create: RoleCreateWithoutUsersInput!
  where: RoleWhereUniqueInput!
}

input RoleCreateWithoutUsersInput {
  createdAt: DateTime
  description: String
  id: String
  name: String!
  permissions: Json
  updatedAt: DateTime
}

input RoleListRelationFilter {
  every: RoleWhereInput
  none: RoleWhereInput
  some: RoleWhereInput
}

input RoleScalarWhereInput {
  AND: [RoleScalarWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [RoleScalarWhereInput!]
  OR: [RoleScalarWhereInput!]
  permissions: JsonNullableFilter
  updatedAt: DateTimeFilter
}

input RoleUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permissions: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RoleUpdateManyWithoutUsersInput {
  connect: [RoleWhereUniqueInput!]
  connectOrCreate: [RoleCreateOrConnectWithoutUsersInput!]
  create: [RoleCreateWithoutUsersInput!]
  delete: [RoleWhereUniqueInput!]
  deleteMany: [RoleScalarWhereInput!]
  disconnect: [RoleWhereUniqueInput!]
  set: [RoleWhereUniqueInput!]
  update: [RoleUpdateWithWhereUniqueWithoutUsersInput!]
  updateMany: [RoleUpdateManyWithWhereWithoutUsersInput!]
  upsert: [RoleUpsertWithWhereUniqueWithoutUsersInput!]
}

input RoleUpdateManyWithWhereWithoutUsersInput {
  data: RoleUpdateManyMutationInput!
  where: RoleScalarWhereInput!
}

input RoleUpdateWithoutUsersInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  permissions: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input RoleUpdateWithWhereUniqueWithoutUsersInput {
  data: RoleUpdateWithoutUsersInput!
  where: RoleWhereUniqueInput!
}

input RoleUpsertWithWhereUniqueWithoutUsersInput {
  create: RoleCreateWithoutUsersInput!
  update: RoleUpdateWithoutUsersInput!
  where: RoleWhereUniqueInput!
}

input RoleWhereInput {
  AND: [RoleWhereInput!]
  createdAt: DateTimeFilter
  description: StringNullableFilter
  id: StringFilter
  name: StringFilter
  NOT: [RoleWhereInput!]
  OR: [RoleWhereInput!]
  permissions: JsonNullableFilter
  updatedAt: DateTimeFilter
  Users: UserListRelationFilter
}

input RoleWhereUniqueInput {
  id: String
}

type SocialNetwork {
  id: String!
  logo: String!
  name: String!
}

input SocialNetworkCreateInput {
  createdAt: DateTime
  id: String
  logo: String!
  name: String!
  updatedAt: DateTime
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutSocialNetworkInput
}

input SocialNetworkCreateNestedOneWithoutUserSocialNetworkInput {
  connect: SocialNetworkWhereUniqueInput
  connectOrCreate: SocialNetworkCreateOrConnectWithoutUserSocialNetworkInput
  create: SocialNetworkCreateWithoutUserSocialNetworkInput
}

input SocialNetworkCreateOrConnectWithoutUserSocialNetworkInput {
  create: SocialNetworkCreateWithoutUserSocialNetworkInput!
  where: SocialNetworkWhereUniqueInput!
}

input SocialNetworkCreateWithoutUserSocialNetworkInput {
  createdAt: DateTime
  id: String
  logo: String!
  name: String!
  updatedAt: DateTime
}

input SocialNetworkUpdateOneRequiredWithoutUserSocialNetworkInput {
  connect: SocialNetworkWhereUniqueInput
  connectOrCreate: SocialNetworkCreateOrConnectWithoutUserSocialNetworkInput
  create: SocialNetworkCreateWithoutUserSocialNetworkInput
  update: SocialNetworkUpdateWithoutUserSocialNetworkInput
  upsert: SocialNetworkUpsertWithoutUserSocialNetworkInput
}

input SocialNetworkUpdateWithoutUserSocialNetworkInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  logo: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SocialNetworkUpsertWithoutUserSocialNetworkInput {
  create: SocialNetworkCreateWithoutUserSocialNetworkInput!
  update: SocialNetworkUpdateWithoutUserSocialNetworkInput!
}

input SocialNetworkWhereInput {
  AND: [SocialNetworkWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  logo: StringFilter
  name: StringFilter
  NOT: [SocialNetworkWhereInput!]
  OR: [SocialNetworkWhereInput!]
  updatedAt: DateTimeFilter
  UserSocialNetwork: UserSocialNetworkListRelationFilter
}

input SocialNetworkWhereUniqueInput {
  id: String
}

enum SortOrder {
  asc
  desc
}

type Story {
  id: String!
  publishedDate: DateTime
  StoryContent(after: StoryContentWhereUniqueInput, before: StoryContentWhereUniqueInput, first: Int, last: Int): [StoryContent!]!
  User: User!
}

type StoryContent {
  contentSize: Float
  contentText: String
  duration: Int!
  id: String!
  mediaType: MediaType!
  sourcePath: String
  Story: Story!
}

input StoryContentCreateNestedManyWithoutStoryInput {
  connect: [StoryContentWhereUniqueInput!]
  connectOrCreate: [StoryContentCreateOrConnectWithoutStoryInput!]
  create: [StoryContentCreateWithoutStoryInput!]
}

input StoryContentCreateNestedOneWithoutUserSeenStoryInput {
  connect: StoryContentWhereUniqueInput
  connectOrCreate: StoryContentCreateOrConnectWithoutUserSeenStoryInput
  create: StoryContentCreateWithoutUserSeenStoryInput
}

input StoryContentCreateOrConnectWithoutStoryInput {
  create: StoryContentCreateWithoutStoryInput!
  where: StoryContentWhereUniqueInput!
}

input StoryContentCreateOrConnectWithoutUserSeenStoryInput {
  create: StoryContentCreateWithoutUserSeenStoryInput!
  where: StoryContentWhereUniqueInput!
}

input StoryContentCreateWithoutStoryInput {
  contentSize: Float
  contentText: String
  createdAt: DateTime
  duration: Int!
  id: String
  mediaType: MediaType!
  sourcePath: String
  storyType: StoryType!
  updatedAt: DateTime
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutStoryContentInput
}

input StoryContentCreateWithoutUserSeenStoryInput {
  contentSize: Float
  contentText: String
  createdAt: DateTime
  duration: Int!
  id: String
  mediaType: MediaType!
  sourcePath: String
  Story: StoryCreateNestedOneWithoutStoryContentInput!
  storyType: StoryType!
  updatedAt: DateTime
}

input StoryContentListRelationFilter {
  every: StoryContentWhereInput
  none: StoryContentWhereInput
  some: StoryContentWhereInput
}

input StoryContentScalarWhereInput {
  AND: [StoryContentScalarWhereInput!]
  contentSize: FloatNullableFilter
  contentText: StringNullableFilter
  createdAt: DateTimeFilter
  duration: IntFilter
  id: StringFilter
  mediaType: EnumMediaTypeFilter
  NOT: [StoryContentScalarWhereInput!]
  OR: [StoryContentScalarWhereInput!]
  sourcePath: StringNullableFilter
  storyId: StringFilter
  storyType: EnumStoryTypeFilter
  updatedAt: DateTimeFilter
}

input StoryContentUpdateManyMutationInput {
  contentSize: NullableFloatFieldUpdateOperationsInput
  contentText: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  duration: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  storyType: EnumStoryTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryContentUpdateManyWithoutStoryInput {
  connect: [StoryContentWhereUniqueInput!]
  connectOrCreate: [StoryContentCreateOrConnectWithoutStoryInput!]
  create: [StoryContentCreateWithoutStoryInput!]
  delete: [StoryContentWhereUniqueInput!]
  deleteMany: [StoryContentScalarWhereInput!]
  disconnect: [StoryContentWhereUniqueInput!]
  set: [StoryContentWhereUniqueInput!]
  update: [StoryContentUpdateWithWhereUniqueWithoutStoryInput!]
  updateMany: [StoryContentUpdateManyWithWhereWithoutStoryInput!]
  upsert: [StoryContentUpsertWithWhereUniqueWithoutStoryInput!]
}

input StoryContentUpdateManyWithWhereWithoutStoryInput {
  data: StoryContentUpdateManyMutationInput!
  where: StoryContentScalarWhereInput!
}

input StoryContentUpdateOneRequiredWithoutUserSeenStoryInput {
  connect: StoryContentWhereUniqueInput
  connectOrCreate: StoryContentCreateOrConnectWithoutUserSeenStoryInput
  create: StoryContentCreateWithoutUserSeenStoryInput
  update: StoryContentUpdateWithoutUserSeenStoryInput
  upsert: StoryContentUpsertWithoutUserSeenStoryInput
}

input StoryContentUpdateWithoutStoryInput {
  contentSize: NullableFloatFieldUpdateOperationsInput
  contentText: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  duration: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  storyType: EnumStoryTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutStoryContentInput
}

input StoryContentUpdateWithoutUserSeenStoryInput {
  contentSize: NullableFloatFieldUpdateOperationsInput
  contentText: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  duration: IntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mediaType: EnumMediaTypeFieldUpdateOperationsInput
  sourcePath: NullableStringFieldUpdateOperationsInput
  Story: StoryUpdateOneRequiredWithoutStoryContentInput
  storyType: EnumStoryTypeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryContentUpdateWithWhereUniqueWithoutStoryInput {
  data: StoryContentUpdateWithoutStoryInput!
  where: StoryContentWhereUniqueInput!
}

input StoryContentUpsertWithoutUserSeenStoryInput {
  create: StoryContentCreateWithoutUserSeenStoryInput!
  update: StoryContentUpdateWithoutUserSeenStoryInput!
}

input StoryContentUpsertWithWhereUniqueWithoutStoryInput {
  create: StoryContentCreateWithoutStoryInput!
  update: StoryContentUpdateWithoutStoryInput!
  where: StoryContentWhereUniqueInput!
}

input StoryContentWhereInput {
  AND: [StoryContentWhereInput!]
  contentSize: FloatNullableFilter
  contentText: StringNullableFilter
  createdAt: DateTimeFilter
  duration: IntFilter
  id: StringFilter
  mediaType: EnumMediaTypeFilter
  NOT: [StoryContentWhereInput!]
  OR: [StoryContentWhereInput!]
  sourcePath: StringNullableFilter
  Story: StoryWhereInput
  storyId: StringFilter
  storyType: EnumStoryTypeFilter
  updatedAt: DateTimeFilter
  UserSeenStory: UserSeenStoryListRelationFilter
}

input StoryContentWhereUniqueInput {
  id: String
}

input StoryCreateNestedManyWithoutUserInput {
  connect: [StoryWhereUniqueInput!]
  connectOrCreate: [StoryCreateOrConnectWithoutUserInput!]
  create: [StoryCreateWithoutUserInput!]
}

input StoryCreateNestedOneWithoutStoryContentInput {
  connect: StoryWhereUniqueInput
  connectOrCreate: StoryCreateOrConnectWithoutStoryContentInput
  create: StoryCreateWithoutStoryContentInput
}

input StoryCreateNestedOneWithoutUserSeenStoryInput {
  connect: StoryWhereUniqueInput
  connectOrCreate: StoryCreateOrConnectWithoutUserSeenStoryInput
  create: StoryCreateWithoutUserSeenStoryInput
}

input StoryCreateOrConnectWithoutStoryContentInput {
  create: StoryCreateWithoutStoryContentInput!
  where: StoryWhereUniqueInput!
}

input StoryCreateOrConnectWithoutUserInput {
  create: StoryCreateWithoutUserInput!
  where: StoryWhereUniqueInput!
}

input StoryCreateOrConnectWithoutUserSeenStoryInput {
  create: StoryCreateWithoutUserSeenStoryInput!
  where: StoryWhereUniqueInput!
}

input StoryCreateWithoutStoryContentInput {
  createdAt: DateTime
  id: String
  publishedDate: DateTime
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutStoryInput!
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutStoryInput
}

input StoryCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  publishedDate: DateTime
  StoryContent: StoryContentCreateNestedManyWithoutStoryInput
  updatedAt: DateTime
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutStoryInput
}

input StoryCreateWithoutUserSeenStoryInput {
  createdAt: DateTime
  id: String
  publishedDate: DateTime
  StoryContent: StoryContentCreateNestedManyWithoutStoryInput
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutStoryInput!
}

input StoryListRelationFilter {
  every: StoryWhereInput
  none: StoryWhereInput
  some: StoryWhereInput
}

input StoryScalarWhereInput {
  AND: [StoryScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [StoryScalarWhereInput!]
  OR: [StoryScalarWhereInput!]
  publishedDate: DateTimeNullableFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

enum StoryType {
  Post
  Story
}

input StoryUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input StoryUpdateManyWithoutUserInput {
  connect: [StoryWhereUniqueInput!]
  connectOrCreate: [StoryCreateOrConnectWithoutUserInput!]
  create: [StoryCreateWithoutUserInput!]
  delete: [StoryWhereUniqueInput!]
  deleteMany: [StoryScalarWhereInput!]
  disconnect: [StoryWhereUniqueInput!]
  set: [StoryWhereUniqueInput!]
  update: [StoryUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [StoryUpdateManyWithWhereWithoutUserInput!]
  upsert: [StoryUpsertWithWhereUniqueWithoutUserInput!]
}

input StoryUpdateManyWithWhereWithoutUserInput {
  data: StoryUpdateManyMutationInput!
  where: StoryScalarWhereInput!
}

input StoryUpdateOneRequiredWithoutStoryContentInput {
  connect: StoryWhereUniqueInput
  connectOrCreate: StoryCreateOrConnectWithoutStoryContentInput
  create: StoryCreateWithoutStoryContentInput
  update: StoryUpdateWithoutStoryContentInput
  upsert: StoryUpsertWithoutStoryContentInput
}

input StoryUpdateOneRequiredWithoutUserSeenStoryInput {
  connect: StoryWhereUniqueInput
  connectOrCreate: StoryCreateOrConnectWithoutUserSeenStoryInput
  create: StoryCreateWithoutUserSeenStoryInput
  update: StoryUpdateWithoutUserSeenStoryInput
  upsert: StoryUpsertWithoutUserSeenStoryInput
}

input StoryUpdateWithoutStoryContentInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutStoryInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutStoryInput
}

input StoryUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  StoryContent: StoryContentUpdateManyWithoutStoryInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutStoryInput
}

input StoryUpdateWithoutUserSeenStoryInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  publishedDate: NullableDateTimeFieldUpdateOperationsInput
  StoryContent: StoryContentUpdateManyWithoutStoryInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutStoryInput
}

input StoryUpdateWithWhereUniqueWithoutUserInput {
  data: StoryUpdateWithoutUserInput!
  where: StoryWhereUniqueInput!
}

input StoryUpsertWithoutStoryContentInput {
  create: StoryCreateWithoutStoryContentInput!
  update: StoryUpdateWithoutStoryContentInput!
}

input StoryUpsertWithoutUserSeenStoryInput {
  create: StoryCreateWithoutUserSeenStoryInput!
  update: StoryUpdateWithoutUserSeenStoryInput!
}

input StoryUpsertWithWhereUniqueWithoutUserInput {
  create: StoryCreateWithoutUserInput!
  update: StoryUpdateWithoutUserInput!
  where: StoryWhereUniqueInput!
}

input StoryWhereInput {
  AND: [StoryWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [StoryWhereInput!]
  OR: [StoryWhereInput!]
  publishedDate: DateTimeNullableFilter
  StoryContent: StoryContentListRelationFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
  UserSeenStory: UserSeenStoryListRelationFilter
}

input StoryWhereUniqueInput {
  id: String
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input SubjectCreateNestedOneWithoutCurriculumInput {
  connect: SubjectWhereUniqueInput
  connectOrCreate: SubjectCreateOrConnectWithoutCurriculumInput
  create: SubjectCreateWithoutCurriculumInput
}

input SubjectCreateOrConnectWithoutCurriculumInput {
  create: SubjectCreateWithoutCurriculumInput!
  where: SubjectWhereUniqueInput!
}

input SubjectCreateWithoutCurriculumInput {
  createdAt: DateTime
  id: String
  name: String!
  updatedAt: DateTime
}

input SubjectOrderByInput {
  createdAt: SortOrder
  id: SortOrder
  name: SortOrder
  updatedAt: SortOrder
}

input SubjectUpdateOneWithoutCurriculumInput {
  connect: SubjectWhereUniqueInput
  connectOrCreate: SubjectCreateOrConnectWithoutCurriculumInput
  create: SubjectCreateWithoutCurriculumInput
  delete: Boolean
  disconnect: Boolean
  update: SubjectUpdateWithoutCurriculumInput
  upsert: SubjectUpsertWithoutCurriculumInput
}

input SubjectUpdateWithoutCurriculumInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input SubjectUpsertWithoutCurriculumInput {
  create: SubjectCreateWithoutCurriculumInput!
  update: SubjectUpdateWithoutCurriculumInput!
}

input SubjectWhereInput {
  AND: [SubjectWhereInput!]
  createdAt: DateTimeFilter
  Curriculum: CurriculumListRelationFilter
  id: StringFilter
  name: StringFilter
  NOT: [SubjectWhereInput!]
  OR: [SubjectWhereInput!]
  updatedAt: DateTimeFilter
}

input SubjectWhereUniqueInput {
  id: String
}

type User {
  AcceptedByUser: User
  bio: String
  email: String!
  firstName: String
  id: String!
  isOnboarded: Boolean!
  lastName: String
  Posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
  profilePic: String
  sub: String!
  UserFollow(after: UserFollowWhereUniqueInput, before: UserFollowWhereUniqueInput, first: Int, last: Int): [UserFollow!]!
  userName: String
  UserSocialNetwork(after: UserSocialNetworkWhereUniqueInput, before: UserSocialNetworkWhereUniqueInput, first: Int, last: Int): [UserSocialNetwork!]!
}

input UserActivityCreateNestedManyWithoutUserInput {
  connect: [UserActivityWhereUniqueInput!]
  connectOrCreate: [UserActivityCreateOrConnectWithoutUserInput!]
  create: [UserActivityCreateWithoutUserInput!]
}

input UserActivityCreateOrConnectWithoutUserInput {
  create: UserActivityCreateWithoutUserInput!
  where: UserActivityWhereUniqueInput!
}

input UserActivityCreateWithoutUserInput {
  activityId: String
  ActivityType: ActivityTypeCreateNestedOneWithoutUserActivityInput!
  createdAt: DateTime
  id: String
  isWatched: Boolean
  updatedAt: DateTime
}

input UserActivityListRelationFilter {
  every: UserActivityWhereInput
  none: UserActivityWhereInput
  some: UserActivityWhereInput
}

input UserActivityScalarWhereInput {
  activityId: StringNullableFilter
  activityTypeId: StringFilter
  AND: [UserActivityScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isWatched: BoolFilter
  NOT: [UserActivityScalarWhereInput!]
  OR: [UserActivityScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserActivityUpdateManyMutationInput {
  activityId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isWatched: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserActivityUpdateManyWithoutUserInput {
  connect: [UserActivityWhereUniqueInput!]
  connectOrCreate: [UserActivityCreateOrConnectWithoutUserInput!]
  create: [UserActivityCreateWithoutUserInput!]
  delete: [UserActivityWhereUniqueInput!]
  deleteMany: [UserActivityScalarWhereInput!]
  disconnect: [UserActivityWhereUniqueInput!]
  set: [UserActivityWhereUniqueInput!]
  update: [UserActivityUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserActivityUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserActivityUpsertWithWhereUniqueWithoutUserInput!]
}

input UserActivityUpdateManyWithWhereWithoutUserInput {
  data: UserActivityUpdateManyMutationInput!
  where: UserActivityScalarWhereInput!
}

input UserActivityUpdateWithoutUserInput {
  activityId: NullableStringFieldUpdateOperationsInput
  ActivityType: ActivityTypeUpdateOneRequiredWithoutUserActivityInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isWatched: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserActivityUpdateWithWhereUniqueWithoutUserInput {
  data: UserActivityUpdateWithoutUserInput!
  where: UserActivityWhereUniqueInput!
}

input UserActivityUpsertWithWhereUniqueWithoutUserInput {
  create: UserActivityCreateWithoutUserInput!
  update: UserActivityUpdateWithoutUserInput!
  where: UserActivityWhereUniqueInput!
}

input UserActivityWhereInput {
  activityId: StringNullableFilter
  ActivityType: ActivityTypeWhereInput
  activityTypeId: StringFilter
  AND: [UserActivityWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isWatched: BoolFilter
  NOT: [UserActivityWhereInput!]
  OR: [UserActivityWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserActivityWhereUniqueInput {
  id: String
}

type UserAnswersOnContents {
  Answer: ContentAnswer
  answerText: String
  Content: Content!
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
  User: User!
}

input UserAnswersOnContentsCreateInput {
  Answer: ContentAnswerCreateNestedOneWithoutUserAnswersOnContentsInput
  answerText: String
  challengeId: String
  Content: ContentCreateNestedOneWithoutUserAnswersOnContentsInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserAnswersOnContentsInput!
}

input UserAnswersOnContentsCreateNestedManyWithoutAnswerInput {
  connect: [UserAnswersOnContentsWhereUniqueInput!]
  connectOrCreate: [UserAnswersOnContentsCreateOrConnectWithoutAnswerInput!]
  create: [UserAnswersOnContentsCreateWithoutAnswerInput!]
}

input UserAnswersOnContentsCreateNestedManyWithoutContentInput {
  connect: [UserAnswersOnContentsWhereUniqueInput!]
  connectOrCreate: [UserAnswersOnContentsCreateOrConnectWithoutContentInput!]
  create: [UserAnswersOnContentsCreateWithoutContentInput!]
}

input UserAnswersOnContentsCreateNestedManyWithoutUserInput {
  connect: [UserAnswersOnContentsWhereUniqueInput!]
  connectOrCreate: [UserAnswersOnContentsCreateOrConnectWithoutUserInput!]
  create: [UserAnswersOnContentsCreateWithoutUserInput!]
}

input UserAnswersOnContentsCreateOrConnectWithoutAnswerInput {
  create: UserAnswersOnContentsCreateWithoutAnswerInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsCreateOrConnectWithoutContentInput {
  create: UserAnswersOnContentsCreateWithoutContentInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsCreateOrConnectWithoutUserInput {
  create: UserAnswersOnContentsCreateWithoutUserInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsCreateWithoutAnswerInput {
  answerText: String
  challengeId: String
  Content: ContentCreateNestedOneWithoutUserAnswersOnContentsInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserAnswersOnContentsInput!
}

input UserAnswersOnContentsCreateWithoutContentInput {
  Answer: ContentAnswerCreateNestedOneWithoutUserAnswersOnContentsInput
  answerText: String
  challengeId: String
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserAnswersOnContentsInput!
}

input UserAnswersOnContentsCreateWithoutUserInput {
  Answer: ContentAnswerCreateNestedOneWithoutUserAnswersOnContentsInput
  answerText: String
  challengeId: String
  Content: ContentCreateNestedOneWithoutUserAnswersOnContentsInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input UserAnswersOnContentsListRelationFilter {
  every: UserAnswersOnContentsWhereInput
  none: UserAnswersOnContentsWhereInput
  some: UserAnswersOnContentsWhereInput
}

input UserAnswersOnContentsScalarWhereInput {
  AND: [UserAnswersOnContentsScalarWhereInput!]
  answerId: StringNullableFilter
  answerText: StringNullableFilter
  challengeId: StringNullableFilter
  contentId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [UserAnswersOnContentsScalarWhereInput!]
  OR: [UserAnswersOnContentsScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserAnswersOnContentsUpdateManyMutationInput {
  answerText: NullableStringFieldUpdateOperationsInput
  challengeId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserAnswersOnContentsUpdateManyWithoutAnswerInput {
  connect: [UserAnswersOnContentsWhereUniqueInput!]
  connectOrCreate: [UserAnswersOnContentsCreateOrConnectWithoutAnswerInput!]
  create: [UserAnswersOnContentsCreateWithoutAnswerInput!]
  delete: [UserAnswersOnContentsWhereUniqueInput!]
  deleteMany: [UserAnswersOnContentsScalarWhereInput!]
  disconnect: [UserAnswersOnContentsWhereUniqueInput!]
  set: [UserAnswersOnContentsWhereUniqueInput!]
  update: [UserAnswersOnContentsUpdateWithWhereUniqueWithoutAnswerInput!]
  updateMany: [UserAnswersOnContentsUpdateManyWithWhereWithoutAnswerInput!]
  upsert: [UserAnswersOnContentsUpsertWithWhereUniqueWithoutAnswerInput!]
}

input UserAnswersOnContentsUpdateManyWithoutContentInput {
  connect: [UserAnswersOnContentsWhereUniqueInput!]
  connectOrCreate: [UserAnswersOnContentsCreateOrConnectWithoutContentInput!]
  create: [UserAnswersOnContentsCreateWithoutContentInput!]
  delete: [UserAnswersOnContentsWhereUniqueInput!]
  deleteMany: [UserAnswersOnContentsScalarWhereInput!]
  disconnect: [UserAnswersOnContentsWhereUniqueInput!]
  set: [UserAnswersOnContentsWhereUniqueInput!]
  update: [UserAnswersOnContentsUpdateWithWhereUniqueWithoutContentInput!]
  updateMany: [UserAnswersOnContentsUpdateManyWithWhereWithoutContentInput!]
  upsert: [UserAnswersOnContentsUpsertWithWhereUniqueWithoutContentInput!]
}

input UserAnswersOnContentsUpdateManyWithoutUserInput {
  connect: [UserAnswersOnContentsWhereUniqueInput!]
  connectOrCreate: [UserAnswersOnContentsCreateOrConnectWithoutUserInput!]
  create: [UserAnswersOnContentsCreateWithoutUserInput!]
  delete: [UserAnswersOnContentsWhereUniqueInput!]
  deleteMany: [UserAnswersOnContentsScalarWhereInput!]
  disconnect: [UserAnswersOnContentsWhereUniqueInput!]
  set: [UserAnswersOnContentsWhereUniqueInput!]
  update: [UserAnswersOnContentsUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserAnswersOnContentsUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserAnswersOnContentsUpsertWithWhereUniqueWithoutUserInput!]
}

input UserAnswersOnContentsUpdateManyWithWhereWithoutAnswerInput {
  data: UserAnswersOnContentsUpdateManyMutationInput!
  where: UserAnswersOnContentsScalarWhereInput!
}

input UserAnswersOnContentsUpdateManyWithWhereWithoutContentInput {
  data: UserAnswersOnContentsUpdateManyMutationInput!
  where: UserAnswersOnContentsScalarWhereInput!
}

input UserAnswersOnContentsUpdateManyWithWhereWithoutUserInput {
  data: UserAnswersOnContentsUpdateManyMutationInput!
  where: UserAnswersOnContentsScalarWhereInput!
}

input UserAnswersOnContentsUpdateWithoutAnswerInput {
  answerText: NullableStringFieldUpdateOperationsInput
  challengeId: NullableStringFieldUpdateOperationsInput
  Content: ContentUpdateOneRequiredWithoutUserAnswersOnContentsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserAnswersOnContentsInput
}

input UserAnswersOnContentsUpdateWithoutContentInput {
  Answer: ContentAnswerUpdateOneWithoutUserAnswersOnContentsInput
  answerText: NullableStringFieldUpdateOperationsInput
  challengeId: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserAnswersOnContentsInput
}

input UserAnswersOnContentsUpdateWithoutUserInput {
  Answer: ContentAnswerUpdateOneWithoutUserAnswersOnContentsInput
  answerText: NullableStringFieldUpdateOperationsInput
  challengeId: NullableStringFieldUpdateOperationsInput
  Content: ContentUpdateOneRequiredWithoutUserAnswersOnContentsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserAnswersOnContentsUpdateWithWhereUniqueWithoutAnswerInput {
  data: UserAnswersOnContentsUpdateWithoutAnswerInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsUpdateWithWhereUniqueWithoutContentInput {
  data: UserAnswersOnContentsUpdateWithoutContentInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsUpdateWithWhereUniqueWithoutUserInput {
  data: UserAnswersOnContentsUpdateWithoutUserInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsUpsertWithWhereUniqueWithoutAnswerInput {
  create: UserAnswersOnContentsCreateWithoutAnswerInput!
  update: UserAnswersOnContentsUpdateWithoutAnswerInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsUpsertWithWhereUniqueWithoutContentInput {
  create: UserAnswersOnContentsCreateWithoutContentInput!
  update: UserAnswersOnContentsUpdateWithoutContentInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsUpsertWithWhereUniqueWithoutUserInput {
  create: UserAnswersOnContentsCreateWithoutUserInput!
  update: UserAnswersOnContentsUpdateWithoutUserInput!
  where: UserAnswersOnContentsWhereUniqueInput!
}

input UserAnswersOnContentsWhereInput {
  AND: [UserAnswersOnContentsWhereInput!]
  Answer: ContentAnswerWhereInput
  answerId: StringNullableFilter
  answerText: StringNullableFilter
  challengeId: StringNullableFilter
  Content: ContentWhereInput
  contentId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [UserAnswersOnContentsWhereInput!]
  OR: [UserAnswersOnContentsWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserAnswersOnContentsWhereUniqueInput {
  id: String
}

type UserBadge {
  badgeId: String!
  badgeStatusId: String!
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
  User: User!
}

input UserBadgeCreateNestedManyWithoutUserInput {
  connect: [UserBadgeWhereUniqueInput!]
  connectOrCreate: [UserBadgeCreateOrConnectWithoutUserInput!]
  create: [UserBadgeCreateWithoutUserInput!]
}

input UserBadgeCreateOrConnectWithoutUserInput {
  create: UserBadgeCreateWithoutUserInput!
  where: UserBadgeWhereUniqueInput!
}

input UserBadgeCreateWithoutUserInput {
  Badge: BadgeCreateNestedOneWithoutUserBadgeInput!
  BadgeStatus: BadgeStatusCreateNestedOneWithoutUserBadgeInput!
  createdAt: DateTime
  id: String
  isDefault: Boolean
  updatedAt: DateTime
}

input UserBadgeListRelationFilter {
  every: UserBadgeWhereInput
  none: UserBadgeWhereInput
  some: UserBadgeWhereInput
}

input UserBadgeScalarWhereInput {
  AND: [UserBadgeScalarWhereInput!]
  badgeId: StringFilter
  badgeStatusId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  isDefault: BoolFilter
  NOT: [UserBadgeScalarWhereInput!]
  OR: [UserBadgeScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserBadgeUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDefault: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserBadgeUpdateManyWithoutUserInput {
  connect: [UserBadgeWhereUniqueInput!]
  connectOrCreate: [UserBadgeCreateOrConnectWithoutUserInput!]
  create: [UserBadgeCreateWithoutUserInput!]
  delete: [UserBadgeWhereUniqueInput!]
  deleteMany: [UserBadgeScalarWhereInput!]
  disconnect: [UserBadgeWhereUniqueInput!]
  set: [UserBadgeWhereUniqueInput!]
  update: [UserBadgeUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserBadgeUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserBadgeUpsertWithWhereUniqueWithoutUserInput!]
}

input UserBadgeUpdateManyWithWhereWithoutUserInput {
  data: UserBadgeUpdateManyMutationInput!
  where: UserBadgeScalarWhereInput!
}

input UserBadgeUpdateWithoutUserInput {
  Badge: BadgeUpdateOneRequiredWithoutUserBadgeInput
  BadgeStatus: BadgeStatusUpdateOneRequiredWithoutUserBadgeInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isDefault: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserBadgeUpdateWithWhereUniqueWithoutUserInput {
  data: UserBadgeUpdateWithoutUserInput!
  where: UserBadgeWhereUniqueInput!
}

input UserBadgeUpsertWithWhereUniqueWithoutUserInput {
  create: UserBadgeCreateWithoutUserInput!
  update: UserBadgeUpdateWithoutUserInput!
  where: UserBadgeWhereUniqueInput!
}

input UserBadgeWhereInput {
  AND: [UserBadgeWhereInput!]
  Badge: BadgeWhereInput
  badgeId: StringFilter
  BadgeStatus: BadgeStatusWhereInput
  badgeStatusId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  isDefault: BoolFilter
  NOT: [UserBadgeWhereInput!]
  OR: [UserBadgeWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserBadgeWhereUniqueInput {
  id: String
}

type UserCareer {
  careerId: String!
  createdAt: DateTime!
  id: String!
  updatedAt: DateTime!
  userId: String!
}

input UserCareerCreateInput {
  Career: CareerCreateNestedOneWithoutUserCareerInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCareerInput!
}

input UserCareerCreateNestedManyWithoutCareerInput {
  connect: [UserCareerWhereUniqueInput!]
  connectOrCreate: [UserCareerCreateOrConnectWithoutCareerInput!]
  create: [UserCareerCreateWithoutCareerInput!]
}

input UserCareerCreateNestedManyWithoutUserInput {
  connect: [UserCareerWhereUniqueInput!]
  connectOrCreate: [UserCareerCreateOrConnectWithoutUserInput!]
  create: [UserCareerCreateWithoutUserInput!]
}

input UserCareerCreateOrConnectWithoutCareerInput {
  create: UserCareerCreateWithoutCareerInput!
  where: UserCareerWhereUniqueInput!
}

input UserCareerCreateOrConnectWithoutUserInput {
  create: UserCareerCreateWithoutUserInput!
  where: UserCareerWhereUniqueInput!
}

input UserCareerCreateWithoutCareerInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCareerInput!
}

input UserCareerCreateWithoutUserInput {
  Career: CareerCreateNestedOneWithoutUserCareerInput!
  createdAt: DateTime
  id: String
  updatedAt: DateTime
}

input UserCareerListRelationFilter {
  every: UserCareerWhereInput
  none: UserCareerWhereInput
  some: UserCareerWhereInput
}

input UserCareerScalarWhereInput {
  AND: [UserCareerScalarWhereInput!]
  careerId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [UserCareerScalarWhereInput!]
  OR: [UserCareerScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserCareerUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCareerUpdateManyWithoutUserInput {
  connect: [UserCareerWhereUniqueInput!]
  connectOrCreate: [UserCareerCreateOrConnectWithoutUserInput!]
  create: [UserCareerCreateWithoutUserInput!]
  delete: [UserCareerWhereUniqueInput!]
  deleteMany: [UserCareerScalarWhereInput!]
  disconnect: [UserCareerWhereUniqueInput!]
  set: [UserCareerWhereUniqueInput!]
  update: [UserCareerUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserCareerUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserCareerUpsertWithWhereUniqueWithoutUserInput!]
}

input UserCareerUpdateManyWithWhereWithoutUserInput {
  data: UserCareerUpdateManyMutationInput!
  where: UserCareerScalarWhereInput!
}

input UserCareerUpdateWithoutUserInput {
  Career: CareerUpdateOneRequiredWithoutUserCareerInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCareerUpdateWithWhereUniqueWithoutUserInput {
  data: UserCareerUpdateWithoutUserInput!
  where: UserCareerWhereUniqueInput!
}

input UserCareerUpsertWithWhereUniqueWithoutUserInput {
  create: UserCareerCreateWithoutUserInput!
  update: UserCareerUpdateWithoutUserInput!
  where: UserCareerWhereUniqueInput!
}

input UserCareerWhereInput {
  AND: [UserCareerWhereInput!]
  Career: CareerWhereInput
  careerId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [UserCareerWhereInput!]
  OR: [UserCareerWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserCareerWhereUniqueInput {
  id: String
}

type UserConfig {
  createdAt: DateTime!
  id: String!
  instensity: Float
  isAllowTerms: Boolean!
  isOnNotify: Boolean!
  updatedAt: DateTime!
  userId: String!
}

input UserConfigCreateInput {
  createdAt: DateTime
  id: String
  instensity: Float
  isAllowTerms: Boolean
  isOnNotify: Boolean
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserConfigInput!
}

input UserConfigCreateNestedManyWithoutUserInput {
  connect: [UserConfigWhereUniqueInput!]
  connectOrCreate: [UserConfigCreateOrConnectWithoutUserInput!]
  create: [UserConfigCreateWithoutUserInput!]
}

input UserConfigCreateOrConnectWithoutUserInput {
  create: UserConfigCreateWithoutUserInput!
  where: UserConfigWhereUniqueInput!
}

input UserConfigCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  instensity: Float
  isAllowTerms: Boolean
  isOnNotify: Boolean
  updatedAt: DateTime
}

input UserConfigListRelationFilter {
  every: UserConfigWhereInput
  none: UserConfigWhereInput
  some: UserConfigWhereInput
}

input UserConfigScalarWhereInput {
  AND: [UserConfigScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  instensity: FloatNullableFilter
  isAllowTerms: BoolFilter
  isOnNotify: BoolFilter
  NOT: [UserConfigScalarWhereInput!]
  OR: [UserConfigScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserConfigUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instensity: NullableFloatFieldUpdateOperationsInput
  isAllowTerms: BoolFieldUpdateOperationsInput
  isOnNotify: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserConfigInput
}

input UserConfigUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instensity: NullableFloatFieldUpdateOperationsInput
  isAllowTerms: BoolFieldUpdateOperationsInput
  isOnNotify: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserConfigUpdateManyWithoutUserInput {
  connect: [UserConfigWhereUniqueInput!]
  connectOrCreate: [UserConfigCreateOrConnectWithoutUserInput!]
  create: [UserConfigCreateWithoutUserInput!]
  delete: [UserConfigWhereUniqueInput!]
  deleteMany: [UserConfigScalarWhereInput!]
  disconnect: [UserConfigWhereUniqueInput!]
  set: [UserConfigWhereUniqueInput!]
  update: [UserConfigUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserConfigUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserConfigUpsertWithWhereUniqueWithoutUserInput!]
}

input UserConfigUpdateManyWithWhereWithoutUserInput {
  data: UserConfigUpdateManyMutationInput!
  where: UserConfigScalarWhereInput!
}

input UserConfigUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  instensity: NullableFloatFieldUpdateOperationsInput
  isAllowTerms: BoolFieldUpdateOperationsInput
  isOnNotify: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserConfigUpdateWithWhereUniqueWithoutUserInput {
  data: UserConfigUpdateWithoutUserInput!
  where: UserConfigWhereUniqueInput!
}

input UserConfigUpsertWithWhereUniqueWithoutUserInput {
  create: UserConfigCreateWithoutUserInput!
  update: UserConfigUpdateWithoutUserInput!
  where: UserConfigWhereUniqueInput!
}

input UserConfigWhereInput {
  AND: [UserConfigWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  instensity: FloatNullableFilter
  isAllowTerms: BoolFilter
  isOnNotify: BoolFilter
  NOT: [UserConfigWhereInput!]
  OR: [UserConfigWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserConfigWhereUniqueInput {
  id: String
}

input UserCreateInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateNestedManyWithoutAcceptedByUserInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutAcceptedByUserInput!]
  create: [UserCreateWithoutAcceptedByUserInput!]
}

input UserCreateNestedOneWithoutFeedbackInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFeedbackInput
  create: UserCreateWithoutFeedbackInput
}

input UserCreateNestedOneWithoutFollowedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFollowedInput
  create: UserCreateWithoutFollowedInput
}

input UserCreateNestedOneWithoutPassageInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPassageInput
  create: UserCreateWithoutPassageInput
}

input UserCreateNestedOneWithoutPostCommentsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostCommentsInput
  create: UserCreateWithoutPostCommentsInput
}

input UserCreateNestedOneWithoutPostReactionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostReactionsInput
  create: UserCreateWithoutPostReactionsInput
}

input UserCreateNestedOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostsInput
  create: UserCreateWithoutPostsInput
}

input UserCreateNestedOneWithoutPostViewInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostViewInput
  create: UserCreateWithoutPostViewInput
}

input UserCreateNestedOneWithoutStoryInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutStoryInput
  create: UserCreateWithoutStoryInput
}

input UserCreateNestedOneWithoutUserAnswersOnContentsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserAnswersOnContentsInput
  create: UserCreateWithoutUserAnswersOnContentsInput
}

input UserCreateNestedOneWithoutUserCareerInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserCareerInput
  create: UserCreateWithoutUserCareerInput
}

input UserCreateNestedOneWithoutUserConfigInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserConfigInput
  create: UserCreateWithoutUserConfigInput
}

input UserCreateNestedOneWithoutUserCurriculumInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserCurriculumInput
  create: UserCreateWithoutUserCurriculumInput
}

input UserCreateNestedOneWithoutUserCurriculumRetentionInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserCurriculumRetentionInput
  create: UserCreateWithoutUserCurriculumRetentionInput
}

input UserCreateNestedOneWithoutUserCurriculumSchoolInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserCurriculumSchoolInput
  create: UserCreateWithoutUserCurriculumSchoolInput
}

input UserCreateNestedOneWithoutUserFollowInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserFollowInput
  create: UserCreateWithoutUserFollowInput
}

input UserCreateNestedOneWithoutUserInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserInput
  create: UserCreateWithoutUserInput
}

input UserCreateNestedOneWithoutUserLearningCurriculumInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserLearningCurriculumInput
  create: UserCreateWithoutUserLearningCurriculumInput
}

input UserCreateNestedOneWithoutUserLearningProgressInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserLearningProgressInput
  create: UserCreateWithoutUserLearningProgressInput
}

input UserCreateNestedOneWithoutUserMomentumInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserMomentumInput
  create: UserCreateWithoutUserMomentumInput
}

input UserCreateNestedOneWithoutUserOnboardInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserOnboardInput
  create: UserCreateWithoutUserOnboardInput
}

input UserCreateNestedOneWithoutUserSavedPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserSavedPostsInput
  create: UserCreateWithoutUserSavedPostsInput
}

input UserCreateNestedOneWithoutUserSeenStoryInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserSeenStoryInput
  create: UserCreateWithoutUserSeenStoryInput
}

input UserCreateNestedOneWithoutUserSocialNetworkInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserSocialNetworkInput
  create: UserCreateWithoutUserSocialNetworkInput
}

input UserCreateOrConnectWithoutAcceptedByUserInput {
  create: UserCreateWithoutAcceptedByUserInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutFeedbackInput {
  create: UserCreateWithoutFeedbackInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutFollowedInput {
  create: UserCreateWithoutFollowedInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPassageInput {
  create: UserCreateWithoutPassageInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPostCommentsInput {
  create: UserCreateWithoutPostCommentsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPostReactionsInput {
  create: UserCreateWithoutPostReactionsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPostsInput {
  create: UserCreateWithoutPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutPostViewInput {
  create: UserCreateWithoutPostViewInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutStoryInput {
  create: UserCreateWithoutStoryInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserAnswersOnContentsInput {
  create: UserCreateWithoutUserAnswersOnContentsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserCareerInput {
  create: UserCreateWithoutUserCareerInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserConfigInput {
  create: UserCreateWithoutUserConfigInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserCurriculumInput {
  create: UserCreateWithoutUserCurriculumInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserCurriculumRetentionInput {
  create: UserCreateWithoutUserCurriculumRetentionInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserCurriculumSchoolInput {
  create: UserCreateWithoutUserCurriculumSchoolInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserFollowInput {
  create: UserCreateWithoutUserFollowInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserInput {
  create: UserCreateWithoutUserInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserLearningCurriculumInput {
  create: UserCreateWithoutUserLearningCurriculumInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserLearningProgressInput {
  create: UserCreateWithoutUserLearningProgressInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserMomentumInput {
  create: UserCreateWithoutUserMomentumInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserOnboardInput {
  create: UserCreateWithoutUserOnboardInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserSavedPostsInput {
  create: UserCreateWithoutUserSavedPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserSeenStoryInput {
  create: UserCreateWithoutUserSeenStoryInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutUserSocialNetworkInput {
  create: UserCreateWithoutUserSocialNetworkInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutAcceptedByUserInput {
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutFeedbackInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutFollowedInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutPassageInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutPostCommentsInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutPostReactionsInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutPostsInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutPostViewInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutStoryInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserAnswersOnContentsInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserCareerInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserConfigInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserCurriculumInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserCurriculumRetentionInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserCurriculumSchoolInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserFollowInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserLearningCurriculumInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserLearningProgressInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserMomentumInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserOnboardInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserSavedPostsInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserSeenStoryInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkCreateNestedManyWithoutUserInput
}

input UserCreateWithoutUserSocialNetworkInput {
  AcceptedByUser: UserCreateNestedOneWithoutUserInput
  bio: String
  createdAt: DateTime
  email: String!
  Feedback: FeedbackCreateNestedManyWithoutUserInput
  firstName: String
  Followed: UserFollowCreateNestedManyWithoutFollowedUserInput
  id: String
  isOnboarded: Boolean
  lastName: String
  Passage: PassageCreateNestedManyWithoutUserInput
  PostComments: PostCommentsCreateNestedManyWithoutUserInput
  PostReactions: PostReactionsCreateNestedManyWithoutUserInput
  Posts: PostCreateNestedManyWithoutUserInput
  PostView: PostViewCreateNestedManyWithoutUserInput
  profilePic: String
  Roles: RoleCreateNestedManyWithoutUsersInput
  Story: StoryCreateNestedManyWithoutUserInput
  sub: String!
  updatedAt: DateTime
  User: UserCreateNestedManyWithoutAcceptedByUserInput
  UserActivity: UserActivityCreateNestedManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsCreateNestedManyWithoutUserInput
  UserBadge: UserBadgeCreateNestedManyWithoutUserInput
  UserCareer: UserCareerCreateNestedManyWithoutUserInput
  UserConfig: UserConfigCreateNestedManyWithoutUserInput
  UserCurriculum: UserCurriculumCreateNestedManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionCreateNestedManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolCreateNestedManyWithoutUserInput
  UserFollow: UserFollowCreateNestedManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumCreateNestedManyWithoutUserInput
  UserLearningProgress: UserLearningProgressCreateNestedManyWithoutUserInput
  UserMomentum: UserMomentumCreateNestedManyWithoutUserInput
  userName: String
  UserOnboard: UserOnboardCreateNestedManyWithoutUserInput
  UserSavedPosts: UserSavedPostsCreateNestedManyWithoutUserInput
  UserSeenStory: UserSeenStoryCreateNestedManyWithoutUserInput
}

type UserCurriculum {
  applyingDate: String
  createdAt: DateTime!
  curriculumId: String
  id: String!
  point: Float
  updatedAt: DateTime!
  UserCurriculumRate(after: UserCurriculumRateWhereUniqueInput, before: UserCurriculumRateWhereUniqueInput, first: Int, last: Int): [UserCurriculumRate!]!
  userId: String!
}

input UserCurriculumCreateInput {
  applyingDate: String
  createdAt: DateTime
  Curriculum: CurriculumCreateNestedOneWithoutUserCurriculumsInput
  id: String
  point: Float
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCurriculumInput!
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutUserCurriculumInput
}

input UserCurriculumCreateNestedManyWithoutCurriculumInput {
  connect: [UserCurriculumWhereUniqueInput!]
  connectOrCreate: [UserCurriculumCreateOrConnectWithoutCurriculumInput!]
  create: [UserCurriculumCreateWithoutCurriculumInput!]
}

input UserCurriculumCreateNestedManyWithoutUserInput {
  connect: [UserCurriculumWhereUniqueInput!]
  connectOrCreate: [UserCurriculumCreateOrConnectWithoutUserInput!]
  create: [UserCurriculumCreateWithoutUserInput!]
}

input UserCurriculumCreateNestedOneWithoutUserCurriculumRateInput {
  connect: UserCurriculumWhereUniqueInput
  connectOrCreate: UserCurriculumCreateOrConnectWithoutUserCurriculumRateInput
  create: UserCurriculumCreateWithoutUserCurriculumRateInput
}

input UserCurriculumCreateOrConnectWithoutCurriculumInput {
  create: UserCurriculumCreateWithoutCurriculumInput!
  where: UserCurriculumWhereUniqueInput!
}

input UserCurriculumCreateOrConnectWithoutUserCurriculumRateInput {
  create: UserCurriculumCreateWithoutUserCurriculumRateInput!
  where: UserCurriculumWhereUniqueInput!
}

input UserCurriculumCreateOrConnectWithoutUserInput {
  create: UserCurriculumCreateWithoutUserInput!
  where: UserCurriculumWhereUniqueInput!
}

input UserCurriculumCreateWithoutCurriculumInput {
  applyingDate: String
  createdAt: DateTime
  id: String
  point: Float
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCurriculumInput!
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutUserCurriculumInput
}

input UserCurriculumCreateWithoutUserCurriculumRateInput {
  applyingDate: String
  createdAt: DateTime
  Curriculum: CurriculumCreateNestedOneWithoutUserCurriculumsInput
  id: String
  point: Float
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCurriculumInput!
}

input UserCurriculumCreateWithoutUserInput {
  applyingDate: String
  createdAt: DateTime
  Curriculum: CurriculumCreateNestedOneWithoutUserCurriculumsInput
  id: String
  point: Float
  updatedAt: DateTime
  UserCurriculumRate: UserCurriculumRateCreateNestedManyWithoutUserCurriculumInput
}

input UserCurriculumListRelationFilter {
  every: UserCurriculumWhereInput
  none: UserCurriculumWhereInput
  some: UserCurriculumWhereInput
}

type UserCurriculumRate {
  createdAt: DateTime!
  curriculumId: String!
  id: String!
  rate: Float!
  updatedAt: DateTime!
  userCurriculumId: String!
}

input UserCurriculumRateCreateNestedManyWithoutCurriculumInput {
  connect: [UserCurriculumRateWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRateCreateOrConnectWithoutCurriculumInput!]
  create: [UserCurriculumRateCreateWithoutCurriculumInput!]
}

input UserCurriculumRateCreateNestedManyWithoutUserCurriculumInput {
  connect: [UserCurriculumRateWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRateCreateOrConnectWithoutUserCurriculumInput!]
  create: [UserCurriculumRateCreateWithoutUserCurriculumInput!]
}

input UserCurriculumRateCreateOrConnectWithoutCurriculumInput {
  create: UserCurriculumRateCreateWithoutCurriculumInput!
  where: UserCurriculumRateWhereUniqueInput!
}

input UserCurriculumRateCreateOrConnectWithoutUserCurriculumInput {
  create: UserCurriculumRateCreateWithoutUserCurriculumInput!
  where: UserCurriculumRateWhereUniqueInput!
}

input UserCurriculumRateCreateWithoutCurriculumInput {
  createdAt: DateTime
  id: String
  rate: Float!
  updatedAt: DateTime
  UserCurriculum: UserCurriculumCreateNestedOneWithoutUserCurriculumRateInput!
}

input UserCurriculumRateCreateWithoutUserCurriculumInput {
  createdAt: DateTime
  Curriculum: CurriculumCreateNestedOneWithoutUserCurriculumRateInput!
  id: String
  rate: Float!
  updatedAt: DateTime
}

input UserCurriculumRateListRelationFilter {
  every: UserCurriculumRateWhereInput
  none: UserCurriculumRateWhereInput
  some: UserCurriculumRateWhereInput
}

input UserCurriculumRateScalarWhereInput {
  AND: [UserCurriculumRateScalarWhereInput!]
  createdAt: DateTimeFilter
  curriculumId: StringFilter
  id: StringFilter
  NOT: [UserCurriculumRateScalarWhereInput!]
  OR: [UserCurriculumRateScalarWhereInput!]
  rate: FloatFilter
  updatedAt: DateTimeFilter
  userCurriculumId: StringFilter
}

input UserCurriculumRateUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  rate: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCurriculumRateUpdateManyWithoutCurriculumInput {
  connect: [UserCurriculumRateWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRateCreateOrConnectWithoutCurriculumInput!]
  create: [UserCurriculumRateCreateWithoutCurriculumInput!]
  delete: [UserCurriculumRateWhereUniqueInput!]
  deleteMany: [UserCurriculumRateScalarWhereInput!]
  disconnect: [UserCurriculumRateWhereUniqueInput!]
  set: [UserCurriculumRateWhereUniqueInput!]
  update: [UserCurriculumRateUpdateWithWhereUniqueWithoutCurriculumInput!]
  updateMany: [UserCurriculumRateUpdateManyWithWhereWithoutCurriculumInput!]
  upsert: [UserCurriculumRateUpsertWithWhereUniqueWithoutCurriculumInput!]
}

input UserCurriculumRateUpdateManyWithoutUserCurriculumInput {
  connect: [UserCurriculumRateWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRateCreateOrConnectWithoutUserCurriculumInput!]
  create: [UserCurriculumRateCreateWithoutUserCurriculumInput!]
  delete: [UserCurriculumRateWhereUniqueInput!]
  deleteMany: [UserCurriculumRateScalarWhereInput!]
  disconnect: [UserCurriculumRateWhereUniqueInput!]
  set: [UserCurriculumRateWhereUniqueInput!]
  update: [UserCurriculumRateUpdateWithWhereUniqueWithoutUserCurriculumInput!]
  updateMany: [UserCurriculumRateUpdateManyWithWhereWithoutUserCurriculumInput!]
  upsert: [UserCurriculumRateUpsertWithWhereUniqueWithoutUserCurriculumInput!]
}

input UserCurriculumRateUpdateManyWithWhereWithoutCurriculumInput {
  data: UserCurriculumRateUpdateManyMutationInput!
  where: UserCurriculumRateScalarWhereInput!
}

input UserCurriculumRateUpdateManyWithWhereWithoutUserCurriculumInput {
  data: UserCurriculumRateUpdateManyMutationInput!
  where: UserCurriculumRateScalarWhereInput!
}

input UserCurriculumRateUpdateWithoutCurriculumInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  rate: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculum: UserCurriculumUpdateOneRequiredWithoutUserCurriculumRateInput
}

input UserCurriculumRateUpdateWithoutUserCurriculumInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  Curriculum: CurriculumUpdateOneRequiredWithoutUserCurriculumRateInput
  id: StringFieldUpdateOperationsInput
  rate: FloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCurriculumRateUpdateWithWhereUniqueWithoutCurriculumInput {
  data: UserCurriculumRateUpdateWithoutCurriculumInput!
  where: UserCurriculumRateWhereUniqueInput!
}

input UserCurriculumRateUpdateWithWhereUniqueWithoutUserCurriculumInput {
  data: UserCurriculumRateUpdateWithoutUserCurriculumInput!
  where: UserCurriculumRateWhereUniqueInput!
}

input UserCurriculumRateUpsertWithWhereUniqueWithoutCurriculumInput {
  create: UserCurriculumRateCreateWithoutCurriculumInput!
  update: UserCurriculumRateUpdateWithoutCurriculumInput!
  where: UserCurriculumRateWhereUniqueInput!
}

input UserCurriculumRateUpsertWithWhereUniqueWithoutUserCurriculumInput {
  create: UserCurriculumRateCreateWithoutUserCurriculumInput!
  update: UserCurriculumRateUpdateWithoutUserCurriculumInput!
  where: UserCurriculumRateWhereUniqueInput!
}

input UserCurriculumRateWhereInput {
  AND: [UserCurriculumRateWhereInput!]
  createdAt: DateTimeFilter
  Curriculum: CurriculumWhereInput
  curriculumId: StringFilter
  id: StringFilter
  NOT: [UserCurriculumRateWhereInput!]
  OR: [UserCurriculumRateWhereInput!]
  rate: FloatFilter
  updatedAt: DateTimeFilter
  UserCurriculum: UserCurriculumWhereInput
  userCurriculumId: StringFilter
}

input UserCurriculumRateWhereUniqueInput {
  id: String
}

type UserCurriculumRetention {
  active: Boolean!
  createdAt: DateTime!
  Curriculum: Curriculum!
  id: String!
  Post: Post!
  retentionConfigId: String!
  updatedAt: DateTime!
  User: User!
}

input UserCurriculumRetentionCreateNestedManyWithoutCurriculumInput {
  connect: [UserCurriculumRetentionWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRetentionCreateOrConnectWithoutCurriculumInput!]
  create: [UserCurriculumRetentionCreateWithoutCurriculumInput!]
}

input UserCurriculumRetentionCreateNestedManyWithoutPostInput {
  connect: [UserCurriculumRetentionWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRetentionCreateOrConnectWithoutPostInput!]
  create: [UserCurriculumRetentionCreateWithoutPostInput!]
}

input UserCurriculumRetentionCreateNestedManyWithoutUserInput {
  connect: [UserCurriculumRetentionWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRetentionCreateOrConnectWithoutUserInput!]
  create: [UserCurriculumRetentionCreateWithoutUserInput!]
}

input UserCurriculumRetentionCreateOrConnectWithoutCurriculumInput {
  create: UserCurriculumRetentionCreateWithoutCurriculumInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionCreateOrConnectWithoutPostInput {
  create: UserCurriculumRetentionCreateWithoutPostInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionCreateOrConnectWithoutUserInput {
  create: UserCurriculumRetentionCreateWithoutUserInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionCreateWithoutCurriculumInput {
  active: Boolean!
  createdAt: DateTime
  id: String
  Post: PostCreateNestedOneWithoutUserCurriculumRetentionInput!
  RetentionConfig: RetentionConfigCreateNestedOneWithoutUserCurriculumRetentionInput!
  retentionDate: DateTime!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCurriculumRetentionInput!
}

input UserCurriculumRetentionCreateWithoutPostInput {
  active: Boolean!
  createdAt: DateTime
  Curriculum: CurriculumCreateNestedOneWithoutUserCurriculumRetentionInput!
  id: String
  RetentionConfig: RetentionConfigCreateNestedOneWithoutUserCurriculumRetentionInput!
  retentionDate: DateTime!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCurriculumRetentionInput!
}

input UserCurriculumRetentionCreateWithoutUserInput {
  active: Boolean!
  createdAt: DateTime
  Curriculum: CurriculumCreateNestedOneWithoutUserCurriculumRetentionInput!
  id: String
  Post: PostCreateNestedOneWithoutUserCurriculumRetentionInput!
  RetentionConfig: RetentionConfigCreateNestedOneWithoutUserCurriculumRetentionInput!
  retentionDate: DateTime!
  updatedAt: DateTime
}

input UserCurriculumRetentionListRelationFilter {
  every: UserCurriculumRetentionWhereInput
  none: UserCurriculumRetentionWhereInput
  some: UserCurriculumRetentionWhereInput
}

input UserCurriculumRetentionScalarWhereInput {
  active: BoolFilter
  AND: [UserCurriculumRetentionScalarWhereInput!]
  createdAt: DateTimeFilter
  curriculumId: StringFilter
  id: StringFilter
  NOT: [UserCurriculumRetentionScalarWhereInput!]
  OR: [UserCurriculumRetentionScalarWhereInput!]
  postId: StringFilter
  retentionConfigId: StringFilter
  retentionDate: DateTimeFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserCurriculumRetentionUpdateManyMutationInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  retentionDate: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCurriculumRetentionUpdateManyWithoutCurriculumInput {
  connect: [UserCurriculumRetentionWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRetentionCreateOrConnectWithoutCurriculumInput!]
  create: [UserCurriculumRetentionCreateWithoutCurriculumInput!]
  delete: [UserCurriculumRetentionWhereUniqueInput!]
  deleteMany: [UserCurriculumRetentionScalarWhereInput!]
  disconnect: [UserCurriculumRetentionWhereUniqueInput!]
  set: [UserCurriculumRetentionWhereUniqueInput!]
  update: [UserCurriculumRetentionUpdateWithWhereUniqueWithoutCurriculumInput!]
  updateMany: [UserCurriculumRetentionUpdateManyWithWhereWithoutCurriculumInput!]
  upsert: [UserCurriculumRetentionUpsertWithWhereUniqueWithoutCurriculumInput!]
}

input UserCurriculumRetentionUpdateManyWithoutPostInput {
  connect: [UserCurriculumRetentionWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRetentionCreateOrConnectWithoutPostInput!]
  create: [UserCurriculumRetentionCreateWithoutPostInput!]
  delete: [UserCurriculumRetentionWhereUniqueInput!]
  deleteMany: [UserCurriculumRetentionScalarWhereInput!]
  disconnect: [UserCurriculumRetentionWhereUniqueInput!]
  set: [UserCurriculumRetentionWhereUniqueInput!]
  update: [UserCurriculumRetentionUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [UserCurriculumRetentionUpdateManyWithWhereWithoutPostInput!]
  upsert: [UserCurriculumRetentionUpsertWithWhereUniqueWithoutPostInput!]
}

input UserCurriculumRetentionUpdateManyWithoutUserInput {
  connect: [UserCurriculumRetentionWhereUniqueInput!]
  connectOrCreate: [UserCurriculumRetentionCreateOrConnectWithoutUserInput!]
  create: [UserCurriculumRetentionCreateWithoutUserInput!]
  delete: [UserCurriculumRetentionWhereUniqueInput!]
  deleteMany: [UserCurriculumRetentionScalarWhereInput!]
  disconnect: [UserCurriculumRetentionWhereUniqueInput!]
  set: [UserCurriculumRetentionWhereUniqueInput!]
  update: [UserCurriculumRetentionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserCurriculumRetentionUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserCurriculumRetentionUpsertWithWhereUniqueWithoutUserInput!]
}

input UserCurriculumRetentionUpdateManyWithWhereWithoutCurriculumInput {
  data: UserCurriculumRetentionUpdateManyMutationInput!
  where: UserCurriculumRetentionScalarWhereInput!
}

input UserCurriculumRetentionUpdateManyWithWhereWithoutPostInput {
  data: UserCurriculumRetentionUpdateManyMutationInput!
  where: UserCurriculumRetentionScalarWhereInput!
}

input UserCurriculumRetentionUpdateManyWithWhereWithoutUserInput {
  data: UserCurriculumRetentionUpdateManyMutationInput!
  where: UserCurriculumRetentionScalarWhereInput!
}

input UserCurriculumRetentionUpdateWithoutCurriculumInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutUserCurriculumRetentionInput
  RetentionConfig: RetentionConfigUpdateOneRequiredWithoutUserCurriculumRetentionInput
  retentionDate: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserCurriculumRetentionInput
}

input UserCurriculumRetentionUpdateWithoutPostInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Curriculum: CurriculumUpdateOneRequiredWithoutUserCurriculumRetentionInput
  id: StringFieldUpdateOperationsInput
  RetentionConfig: RetentionConfigUpdateOneRequiredWithoutUserCurriculumRetentionInput
  retentionDate: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserCurriculumRetentionInput
}

input UserCurriculumRetentionUpdateWithoutUserInput {
  active: BoolFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Curriculum: CurriculumUpdateOneRequiredWithoutUserCurriculumRetentionInput
  id: StringFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutUserCurriculumRetentionInput
  RetentionConfig: RetentionConfigUpdateOneRequiredWithoutUserCurriculumRetentionInput
  retentionDate: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCurriculumRetentionUpdateWithWhereUniqueWithoutCurriculumInput {
  data: UserCurriculumRetentionUpdateWithoutCurriculumInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionUpdateWithWhereUniqueWithoutPostInput {
  data: UserCurriculumRetentionUpdateWithoutPostInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionUpdateWithWhereUniqueWithoutUserInput {
  data: UserCurriculumRetentionUpdateWithoutUserInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionUpsertWithWhereUniqueWithoutCurriculumInput {
  create: UserCurriculumRetentionCreateWithoutCurriculumInput!
  update: UserCurriculumRetentionUpdateWithoutCurriculumInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionUpsertWithWhereUniqueWithoutPostInput {
  create: UserCurriculumRetentionCreateWithoutPostInput!
  update: UserCurriculumRetentionUpdateWithoutPostInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionUpsertWithWhereUniqueWithoutUserInput {
  create: UserCurriculumRetentionCreateWithoutUserInput!
  update: UserCurriculumRetentionUpdateWithoutUserInput!
  where: UserCurriculumRetentionWhereUniqueInput!
}

input UserCurriculumRetentionWhereInput {
  active: BoolFilter
  AND: [UserCurriculumRetentionWhereInput!]
  createdAt: DateTimeFilter
  Curriculum: CurriculumWhereInput
  curriculumId: StringFilter
  id: StringFilter
  NOT: [UserCurriculumRetentionWhereInput!]
  OR: [UserCurriculumRetentionWhereInput!]
  Post: PostWhereInput
  postId: StringFilter
  RetentionConfig: RetentionConfigWhereInput
  retentionConfigId: StringFilter
  retentionDate: DateTimeFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserCurriculumRetentionWhereUniqueInput {
  id: String
}

input UserCurriculumScalarWhereInput {
  AND: [UserCurriculumScalarWhereInput!]
  applyingDate: StringNullableFilter
  createdAt: DateTimeFilter
  curriculumId: StringNullableFilter
  id: StringFilter
  NOT: [UserCurriculumScalarWhereInput!]
  OR: [UserCurriculumScalarWhereInput!]
  point: FloatNullableFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

type UserCurriculumSchool {
  createdAt: DateTime!
  CurriculumSchool: CurriculumSchool!
  id: String!
  updatedAt: DateTime!
  User: User!
}

input UserCurriculumSchoolCreateInput {
  createdAt: DateTime
  CurriculumSchool: CurriculumSchoolCreateNestedOneWithoutUserCurriculumSchoolInput!
  id: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCurriculumSchoolInput!
}

input UserCurriculumSchoolCreateNestedManyWithoutCurriculumSchoolInput {
  connect: [UserCurriculumSchoolWhereUniqueInput!]
  connectOrCreate: [UserCurriculumSchoolCreateOrConnectWithoutCurriculumSchoolInput!]
  create: [UserCurriculumSchoolCreateWithoutCurriculumSchoolInput!]
}

input UserCurriculumSchoolCreateNestedManyWithoutUserInput {
  connect: [UserCurriculumSchoolWhereUniqueInput!]
  connectOrCreate: [UserCurriculumSchoolCreateOrConnectWithoutUserInput!]
  create: [UserCurriculumSchoolCreateWithoutUserInput!]
}

input UserCurriculumSchoolCreateOrConnectWithoutCurriculumSchoolInput {
  create: UserCurriculumSchoolCreateWithoutCurriculumSchoolInput!
  where: UserCurriculumSchoolWhereUniqueInput!
}

input UserCurriculumSchoolCreateOrConnectWithoutUserInput {
  create: UserCurriculumSchoolCreateWithoutUserInput!
  where: UserCurriculumSchoolWhereUniqueInput!
}

input UserCurriculumSchoolCreateWithoutCurriculumSchoolInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserCurriculumSchoolInput!
}

input UserCurriculumSchoolCreateWithoutUserInput {
  createdAt: DateTime
  CurriculumSchool: CurriculumSchoolCreateNestedOneWithoutUserCurriculumSchoolInput!
  id: String
  updatedAt: DateTime
}

input UserCurriculumSchoolListRelationFilter {
  every: UserCurriculumSchoolWhereInput
  none: UserCurriculumSchoolWhereInput
  some: UserCurriculumSchoolWhereInput
}

input UserCurriculumSchoolScalarWhereInput {
  AND: [UserCurriculumSchoolScalarWhereInput!]
  createdAt: DateTimeFilter
  curriculumSchoolId: StringFilter
  id: StringFilter
  NOT: [UserCurriculumSchoolScalarWhereInput!]
  OR: [UserCurriculumSchoolScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserCurriculumSchoolUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCurriculumSchoolUpdateManyWithoutCurriculumSchoolInput {
  connect: [UserCurriculumSchoolWhereUniqueInput!]
  connectOrCreate: [UserCurriculumSchoolCreateOrConnectWithoutCurriculumSchoolInput!]
  create: [UserCurriculumSchoolCreateWithoutCurriculumSchoolInput!]
  delete: [UserCurriculumSchoolWhereUniqueInput!]
  deleteMany: [UserCurriculumSchoolScalarWhereInput!]
  disconnect: [UserCurriculumSchoolWhereUniqueInput!]
  set: [UserCurriculumSchoolWhereUniqueInput!]
  update: [UserCurriculumSchoolUpdateWithWhereUniqueWithoutCurriculumSchoolInput!]
  updateMany: [UserCurriculumSchoolUpdateManyWithWhereWithoutCurriculumSchoolInput!]
  upsert: [UserCurriculumSchoolUpsertWithWhereUniqueWithoutCurriculumSchoolInput!]
}

input UserCurriculumSchoolUpdateManyWithoutUserInput {
  connect: [UserCurriculumSchoolWhereUniqueInput!]
  connectOrCreate: [UserCurriculumSchoolCreateOrConnectWithoutUserInput!]
  create: [UserCurriculumSchoolCreateWithoutUserInput!]
  delete: [UserCurriculumSchoolWhereUniqueInput!]
  deleteMany: [UserCurriculumSchoolScalarWhereInput!]
  disconnect: [UserCurriculumSchoolWhereUniqueInput!]
  set: [UserCurriculumSchoolWhereUniqueInput!]
  update: [UserCurriculumSchoolUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserCurriculumSchoolUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserCurriculumSchoolUpsertWithWhereUniqueWithoutUserInput!]
}

input UserCurriculumSchoolUpdateManyWithWhereWithoutCurriculumSchoolInput {
  data: UserCurriculumSchoolUpdateManyMutationInput!
  where: UserCurriculumSchoolScalarWhereInput!
}

input UserCurriculumSchoolUpdateManyWithWhereWithoutUserInput {
  data: UserCurriculumSchoolUpdateManyMutationInput!
  where: UserCurriculumSchoolScalarWhereInput!
}

input UserCurriculumSchoolUpdateWithoutCurriculumSchoolInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserCurriculumSchoolInput
}

input UserCurriculumSchoolUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  CurriculumSchool: CurriculumSchoolUpdateOneRequiredWithoutUserCurriculumSchoolInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCurriculumSchoolUpdateWithWhereUniqueWithoutCurriculumSchoolInput {
  data: UserCurriculumSchoolUpdateWithoutCurriculumSchoolInput!
  where: UserCurriculumSchoolWhereUniqueInput!
}

input UserCurriculumSchoolUpdateWithWhereUniqueWithoutUserInput {
  data: UserCurriculumSchoolUpdateWithoutUserInput!
  where: UserCurriculumSchoolWhereUniqueInput!
}

input UserCurriculumSchoolUpsertWithWhereUniqueWithoutCurriculumSchoolInput {
  create: UserCurriculumSchoolCreateWithoutCurriculumSchoolInput!
  update: UserCurriculumSchoolUpdateWithoutCurriculumSchoolInput!
  where: UserCurriculumSchoolWhereUniqueInput!
}

input UserCurriculumSchoolUpsertWithWhereUniqueWithoutUserInput {
  create: UserCurriculumSchoolCreateWithoutUserInput!
  update: UserCurriculumSchoolUpdateWithoutUserInput!
  where: UserCurriculumSchoolWhereUniqueInput!
}

input UserCurriculumSchoolWhereInput {
  AND: [UserCurriculumSchoolWhereInput!]
  createdAt: DateTimeFilter
  CurriculumSchool: CurriculumSchoolWhereInput
  curriculumSchoolId: StringFilter
  id: StringFilter
  NOT: [UserCurriculumSchoolWhereInput!]
  OR: [UserCurriculumSchoolWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserCurriculumSchoolWhereUniqueInput {
  id: String
}

input UserCurriculumUpdateInput {
  applyingDate: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Curriculum: CurriculumUpdateOneWithoutUserCurriculumsInput
  id: StringFieldUpdateOperationsInput
  point: NullableFloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserCurriculumInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutUserCurriculumInput
}

input UserCurriculumUpdateManyMutationInput {
  applyingDate: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  point: NullableFloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserCurriculumUpdateManyWithoutCurriculumInput {
  connect: [UserCurriculumWhereUniqueInput!]
  connectOrCreate: [UserCurriculumCreateOrConnectWithoutCurriculumInput!]
  create: [UserCurriculumCreateWithoutCurriculumInput!]
  delete: [UserCurriculumWhereUniqueInput!]
  deleteMany: [UserCurriculumScalarWhereInput!]
  disconnect: [UserCurriculumWhereUniqueInput!]
  set: [UserCurriculumWhereUniqueInput!]
  update: [UserCurriculumUpdateWithWhereUniqueWithoutCurriculumInput!]
  updateMany: [UserCurriculumUpdateManyWithWhereWithoutCurriculumInput!]
  upsert: [UserCurriculumUpsertWithWhereUniqueWithoutCurriculumInput!]
}

input UserCurriculumUpdateManyWithoutUserInput {
  connect: [UserCurriculumWhereUniqueInput!]
  connectOrCreate: [UserCurriculumCreateOrConnectWithoutUserInput!]
  create: [UserCurriculumCreateWithoutUserInput!]
  delete: [UserCurriculumWhereUniqueInput!]
  deleteMany: [UserCurriculumScalarWhereInput!]
  disconnect: [UserCurriculumWhereUniqueInput!]
  set: [UserCurriculumWhereUniqueInput!]
  update: [UserCurriculumUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserCurriculumUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserCurriculumUpsertWithWhereUniqueWithoutUserInput!]
}

input UserCurriculumUpdateManyWithWhereWithoutCurriculumInput {
  data: UserCurriculumUpdateManyMutationInput!
  where: UserCurriculumScalarWhereInput!
}

input UserCurriculumUpdateManyWithWhereWithoutUserInput {
  data: UserCurriculumUpdateManyMutationInput!
  where: UserCurriculumScalarWhereInput!
}

input UserCurriculumUpdateOneRequiredWithoutUserCurriculumRateInput {
  connect: UserCurriculumWhereUniqueInput
  connectOrCreate: UserCurriculumCreateOrConnectWithoutUserCurriculumRateInput
  create: UserCurriculumCreateWithoutUserCurriculumRateInput
  update: UserCurriculumUpdateWithoutUserCurriculumRateInput
  upsert: UserCurriculumUpsertWithoutUserCurriculumRateInput
}

input UserCurriculumUpdateWithoutCurriculumInput {
  applyingDate: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  point: NullableFloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserCurriculumInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutUserCurriculumInput
}

input UserCurriculumUpdateWithoutUserCurriculumRateInput {
  applyingDate: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Curriculum: CurriculumUpdateOneWithoutUserCurriculumsInput
  id: StringFieldUpdateOperationsInput
  point: NullableFloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserCurriculumInput
}

input UserCurriculumUpdateWithoutUserInput {
  applyingDate: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  Curriculum: CurriculumUpdateOneWithoutUserCurriculumsInput
  id: StringFieldUpdateOperationsInput
  point: NullableFloatFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserCurriculumRate: UserCurriculumRateUpdateManyWithoutUserCurriculumInput
}

input UserCurriculumUpdateWithWhereUniqueWithoutCurriculumInput {
  data: UserCurriculumUpdateWithoutCurriculumInput!
  where: UserCurriculumWhereUniqueInput!
}

input UserCurriculumUpdateWithWhereUniqueWithoutUserInput {
  data: UserCurriculumUpdateWithoutUserInput!
  where: UserCurriculumWhereUniqueInput!
}

input UserCurriculumUpsertWithoutUserCurriculumRateInput {
  create: UserCurriculumCreateWithoutUserCurriculumRateInput!
  update: UserCurriculumUpdateWithoutUserCurriculumRateInput!
}

input UserCurriculumUpsertWithWhereUniqueWithoutCurriculumInput {
  create: UserCurriculumCreateWithoutCurriculumInput!
  update: UserCurriculumUpdateWithoutCurriculumInput!
  where: UserCurriculumWhereUniqueInput!
}

input UserCurriculumUpsertWithWhereUniqueWithoutUserInput {
  create: UserCurriculumCreateWithoutUserInput!
  update: UserCurriculumUpdateWithoutUserInput!
  where: UserCurriculumWhereUniqueInput!
}

input UserCurriculumWhereInput {
  AND: [UserCurriculumWhereInput!]
  applyingDate: StringNullableFilter
  createdAt: DateTimeFilter
  Curriculum: CurriculumWhereInput
  curriculumId: StringNullableFilter
  id: StringFilter
  NOT: [UserCurriculumWhereInput!]
  OR: [UserCurriculumWhereInput!]
  point: FloatNullableFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  UserCurriculumRate: UserCurriculumRateListRelationFilter
  userId: StringFilter
}

input UserCurriculumWhereUniqueInput {
  id: String
}

type UserFollow {
  buddyCount: Int
  createdAt: DateTime!
  followDate: DateTime!
  FollowedUser: User!
  followerCount: Int
  followId: String!
  followingCount: Int
  id: String!
  isBuddy: Boolean!
  isFollow: Boolean!
  updatedAt: DateTime!
  userId: String!
}

input UserFollowCreateNestedManyWithoutFollowedUserInput {
  connect: [UserFollowWhereUniqueInput!]
  connectOrCreate: [UserFollowCreateOrConnectWithoutFollowedUserInput!]
  create: [UserFollowCreateWithoutFollowedUserInput!]
}

input UserFollowCreateNestedManyWithoutUserInput {
  connect: [UserFollowWhereUniqueInput!]
  connectOrCreate: [UserFollowCreateOrConnectWithoutUserInput!]
  create: [UserFollowCreateWithoutUserInput!]
}

input UserFollowCreateOrConnectWithoutFollowedUserInput {
  create: UserFollowCreateWithoutFollowedUserInput!
  where: UserFollowWhereUniqueInput!
}

input UserFollowCreateOrConnectWithoutUserInput {
  create: UserFollowCreateWithoutUserInput!
  where: UserFollowWhereUniqueInput!
}

input UserFollowCreateWithoutFollowedUserInput {
  createdAt: DateTime
  followDate: DateTime
  id: String
  isBuddy: Boolean!
  isFollow: Boolean!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserFollowInput!
}

input UserFollowCreateWithoutUserInput {
  createdAt: DateTime
  followDate: DateTime
  FollowedUser: UserCreateNestedOneWithoutFollowedInput!
  id: String
  isBuddy: Boolean!
  isFollow: Boolean!
  updatedAt: DateTime
}

input UserFollowListRelationFilter {
  every: UserFollowWhereInput
  none: UserFollowWhereInput
  some: UserFollowWhereInput
}

input UserFollowOrderByInput {
  createdAt: SortOrder
  followDate: SortOrder
  FollowedUser: UserOrderByInput
  followId: SortOrder
  id: SortOrder
  isBuddy: SortOrder
  isFollow: SortOrder
  updatedAt: SortOrder
  User: UserOrderByInput
  userId: SortOrder
}

input UserFollowScalarWhereInput {
  AND: [UserFollowScalarWhereInput!]
  createdAt: DateTimeFilter
  followDate: DateTimeFilter
  followId: StringFilter
  id: StringFilter
  isBuddy: BoolFilter
  isFollow: BoolFilter
  NOT: [UserFollowScalarWhereInput!]
  OR: [UserFollowScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserFollowUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  followDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isBuddy: BoolFieldUpdateOperationsInput
  isFollow: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserFollowUpdateManyWithoutFollowedUserInput {
  connect: [UserFollowWhereUniqueInput!]
  connectOrCreate: [UserFollowCreateOrConnectWithoutFollowedUserInput!]
  create: [UserFollowCreateWithoutFollowedUserInput!]
  delete: [UserFollowWhereUniqueInput!]
  deleteMany: [UserFollowScalarWhereInput!]
  disconnect: [UserFollowWhereUniqueInput!]
  set: [UserFollowWhereUniqueInput!]
  update: [UserFollowUpdateWithWhereUniqueWithoutFollowedUserInput!]
  updateMany: [UserFollowUpdateManyWithWhereWithoutFollowedUserInput!]
  upsert: [UserFollowUpsertWithWhereUniqueWithoutFollowedUserInput!]
}

input UserFollowUpdateManyWithoutUserInput {
  connect: [UserFollowWhereUniqueInput!]
  connectOrCreate: [UserFollowCreateOrConnectWithoutUserInput!]
  create: [UserFollowCreateWithoutUserInput!]
  delete: [UserFollowWhereUniqueInput!]
  deleteMany: [UserFollowScalarWhereInput!]
  disconnect: [UserFollowWhereUniqueInput!]
  set: [UserFollowWhereUniqueInput!]
  update: [UserFollowUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserFollowUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserFollowUpsertWithWhereUniqueWithoutUserInput!]
}

input UserFollowUpdateManyWithWhereWithoutFollowedUserInput {
  data: UserFollowUpdateManyMutationInput!
  where: UserFollowScalarWhereInput!
}

input UserFollowUpdateManyWithWhereWithoutUserInput {
  data: UserFollowUpdateManyMutationInput!
  where: UserFollowScalarWhereInput!
}

input UserFollowUpdateWithoutFollowedUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  followDate: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isBuddy: BoolFieldUpdateOperationsInput
  isFollow: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserFollowInput
}

input UserFollowUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  followDate: DateTimeFieldUpdateOperationsInput
  FollowedUser: UserUpdateOneRequiredWithoutFollowedInput
  id: StringFieldUpdateOperationsInput
  isBuddy: BoolFieldUpdateOperationsInput
  isFollow: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserFollowUpdateWithWhereUniqueWithoutFollowedUserInput {
  data: UserFollowUpdateWithoutFollowedUserInput!
  where: UserFollowWhereUniqueInput!
}

input UserFollowUpdateWithWhereUniqueWithoutUserInput {
  data: UserFollowUpdateWithoutUserInput!
  where: UserFollowWhereUniqueInput!
}

input UserFollowUpsertWithWhereUniqueWithoutFollowedUserInput {
  create: UserFollowCreateWithoutFollowedUserInput!
  update: UserFollowUpdateWithoutFollowedUserInput!
  where: UserFollowWhereUniqueInput!
}

input UserFollowUpsertWithWhereUniqueWithoutUserInput {
  create: UserFollowCreateWithoutUserInput!
  update: UserFollowUpdateWithoutUserInput!
  where: UserFollowWhereUniqueInput!
}

input UserFollowWhereInput {
  AND: [UserFollowWhereInput!]
  createdAt: DateTimeFilter
  followDate: DateTimeFilter
  FollowedUser: UserWhereInput
  followId: StringFilter
  id: StringFilter
  isBuddy: BoolFilter
  isFollow: BoolFilter
  NOT: [UserFollowWhereInput!]
  OR: [UserFollowWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserFollowWhereUniqueInput {
  id: String
}

type UserLearningCurriculum {
  createdAt: DateTime!
  Curriculum: Curriculum!
  curriculumId: String!
  id: String!
  isLearned: Boolean!
  lastUpdated: DateTime!
  updatedAt: DateTime!
  User: User!
}

input UserLearningCurriculumCreateNestedManyWithoutCurriculumInput {
  connect: [UserLearningCurriculumWhereUniqueInput!]
  connectOrCreate: [UserLearningCurriculumCreateOrConnectWithoutCurriculumInput!]
  create: [UserLearningCurriculumCreateWithoutCurriculumInput!]
}

input UserLearningCurriculumCreateNestedManyWithoutUserInput {
  connect: [UserLearningCurriculumWhereUniqueInput!]
  connectOrCreate: [UserLearningCurriculumCreateOrConnectWithoutUserInput!]
  create: [UserLearningCurriculumCreateWithoutUserInput!]
}

input UserLearningCurriculumCreateOrConnectWithoutCurriculumInput {
  create: UserLearningCurriculumCreateWithoutCurriculumInput!
  where: UserLearningCurriculumWhereUniqueInput!
}

input UserLearningCurriculumCreateOrConnectWithoutUserInput {
  create: UserLearningCurriculumCreateWithoutUserInput!
  where: UserLearningCurriculumWhereUniqueInput!
}

input UserLearningCurriculumCreateWithoutCurriculumInput {
  createdAt: DateTime
  id: String
  isLearned: Boolean!
  lastUpdated: DateTime!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserLearningCurriculumInput!
}

input UserLearningCurriculumCreateWithoutUserInput {
  createdAt: DateTime
  Curriculum: CurriculumCreateNestedOneWithoutUserLearningCurriculumInput!
  id: String
  isLearned: Boolean!
  lastUpdated: DateTime!
  updatedAt: DateTime
}

input UserLearningCurriculumListRelationFilter {
  every: UserLearningCurriculumWhereInput
  none: UserLearningCurriculumWhereInput
  some: UserLearningCurriculumWhereInput
}

input UserLearningCurriculumScalarWhereInput {
  AND: [UserLearningCurriculumScalarWhereInput!]
  createdAt: DateTimeFilter
  curriculumId: StringFilter
  id: StringFilter
  isLearned: BoolFilter
  lastUpdated: DateTimeFilter
  NOT: [UserLearningCurriculumScalarWhereInput!]
  OR: [UserLearningCurriculumScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserLearningCurriculumUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isLearned: BoolFieldUpdateOperationsInput
  lastUpdated: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserLearningCurriculumUpdateManyWithoutCurriculumInput {
  connect: [UserLearningCurriculumWhereUniqueInput!]
  connectOrCreate: [UserLearningCurriculumCreateOrConnectWithoutCurriculumInput!]
  create: [UserLearningCurriculumCreateWithoutCurriculumInput!]
  delete: [UserLearningCurriculumWhereUniqueInput!]
  deleteMany: [UserLearningCurriculumScalarWhereInput!]
  disconnect: [UserLearningCurriculumWhereUniqueInput!]
  set: [UserLearningCurriculumWhereUniqueInput!]
  update: [UserLearningCurriculumUpdateWithWhereUniqueWithoutCurriculumInput!]
  updateMany: [UserLearningCurriculumUpdateManyWithWhereWithoutCurriculumInput!]
  upsert: [UserLearningCurriculumUpsertWithWhereUniqueWithoutCurriculumInput!]
}

input UserLearningCurriculumUpdateManyWithoutUserInput {
  connect: [UserLearningCurriculumWhereUniqueInput!]
  connectOrCreate: [UserLearningCurriculumCreateOrConnectWithoutUserInput!]
  create: [UserLearningCurriculumCreateWithoutUserInput!]
  delete: [UserLearningCurriculumWhereUniqueInput!]
  deleteMany: [UserLearningCurriculumScalarWhereInput!]
  disconnect: [UserLearningCurriculumWhereUniqueInput!]
  set: [UserLearningCurriculumWhereUniqueInput!]
  update: [UserLearningCurriculumUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserLearningCurriculumUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserLearningCurriculumUpsertWithWhereUniqueWithoutUserInput!]
}

input UserLearningCurriculumUpdateManyWithWhereWithoutCurriculumInput {
  data: UserLearningCurriculumUpdateManyMutationInput!
  where: UserLearningCurriculumScalarWhereInput!
}

input UserLearningCurriculumUpdateManyWithWhereWithoutUserInput {
  data: UserLearningCurriculumUpdateManyMutationInput!
  where: UserLearningCurriculumScalarWhereInput!
}

input UserLearningCurriculumUpdateWithoutCurriculumInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isLearned: BoolFieldUpdateOperationsInput
  lastUpdated: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserLearningCurriculumInput
}

input UserLearningCurriculumUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  Curriculum: CurriculumUpdateOneRequiredWithoutUserLearningCurriculumInput
  id: StringFieldUpdateOperationsInput
  isLearned: BoolFieldUpdateOperationsInput
  lastUpdated: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserLearningCurriculumUpdateWithWhereUniqueWithoutCurriculumInput {
  data: UserLearningCurriculumUpdateWithoutCurriculumInput!
  where: UserLearningCurriculumWhereUniqueInput!
}

input UserLearningCurriculumUpdateWithWhereUniqueWithoutUserInput {
  data: UserLearningCurriculumUpdateWithoutUserInput!
  where: UserLearningCurriculumWhereUniqueInput!
}

input UserLearningCurriculumUpsertWithWhereUniqueWithoutCurriculumInput {
  create: UserLearningCurriculumCreateWithoutCurriculumInput!
  update: UserLearningCurriculumUpdateWithoutCurriculumInput!
  where: UserLearningCurriculumWhereUniqueInput!
}

input UserLearningCurriculumUpsertWithWhereUniqueWithoutUserInput {
  create: UserLearningCurriculumCreateWithoutUserInput!
  update: UserLearningCurriculumUpdateWithoutUserInput!
  where: UserLearningCurriculumWhereUniqueInput!
}

input UserLearningCurriculumWhereInput {
  AND: [UserLearningCurriculumWhereInput!]
  createdAt: DateTimeFilter
  Curriculum: CurriculumWhereInput
  curriculumId: StringFilter
  id: StringFilter
  isLearned: BoolFilter
  lastUpdated: DateTimeFilter
  NOT: [UserLearningCurriculumWhereInput!]
  OR: [UserLearningCurriculumWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserLearningCurriculumWhereUniqueInput {
  id: String
}

input UserLearningProgressCreateNestedManyWithoutLearningObjectInput {
  connect: [UserLearningProgressWhereUniqueInput!]
  connectOrCreate: [UserLearningProgressCreateOrConnectWithoutLearningObjectInput!]
  create: [UserLearningProgressCreateWithoutLearningObjectInput!]
}

input UserLearningProgressCreateNestedManyWithoutPostInput {
  connect: [UserLearningProgressWhereUniqueInput!]
  connectOrCreate: [UserLearningProgressCreateOrConnectWithoutPostInput!]
  create: [UserLearningProgressCreateWithoutPostInput!]
}

input UserLearningProgressCreateNestedManyWithoutUserInput {
  connect: [UserLearningProgressWhereUniqueInput!]
  connectOrCreate: [UserLearningProgressCreateOrConnectWithoutUserInput!]
  create: [UserLearningProgressCreateWithoutUserInput!]
}

input UserLearningProgressCreateOrConnectWithoutLearningObjectInput {
  create: UserLearningProgressCreateWithoutLearningObjectInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressCreateOrConnectWithoutPostInput {
  create: UserLearningProgressCreateWithoutPostInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressCreateOrConnectWithoutUserInput {
  create: UserLearningProgressCreateWithoutUserInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressCreateWithoutLearningObjectInput {
  createdAt: DateTime
  id: String
  point: Float!
  pointType: String!
  Post: PostCreateNestedOneWithoutUserLearningProgressInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserLearningProgressInput!
}

input UserLearningProgressCreateWithoutPostInput {
  createdAt: DateTime
  id: String
  LearningObject: LearningObjectCreateNestedOneWithoutUserLearningProgressInput!
  point: Float!
  pointType: String!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserLearningProgressInput!
}

input UserLearningProgressCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  LearningObject: LearningObjectCreateNestedOneWithoutUserLearningProgressInput!
  point: Float!
  pointType: String!
  Post: PostCreateNestedOneWithoutUserLearningProgressInput!
  updatedAt: DateTime
}

input UserLearningProgressListRelationFilter {
  every: UserLearningProgressWhereInput
  none: UserLearningProgressWhereInput
  some: UserLearningProgressWhereInput
}

input UserLearningProgressScalarWhereInput {
  AND: [UserLearningProgressScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  learningObjectId: StringFilter
  NOT: [UserLearningProgressScalarWhereInput!]
  OR: [UserLearningProgressScalarWhereInput!]
  point: FloatFilter
  pointType: StringFilter
  postId: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserLearningProgressUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  point: FloatFieldUpdateOperationsInput
  pointType: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserLearningProgressUpdateManyWithoutLearningObjectInput {
  connect: [UserLearningProgressWhereUniqueInput!]
  connectOrCreate: [UserLearningProgressCreateOrConnectWithoutLearningObjectInput!]
  create: [UserLearningProgressCreateWithoutLearningObjectInput!]
  delete: [UserLearningProgressWhereUniqueInput!]
  deleteMany: [UserLearningProgressScalarWhereInput!]
  disconnect: [UserLearningProgressWhereUniqueInput!]
  set: [UserLearningProgressWhereUniqueInput!]
  update: [UserLearningProgressUpdateWithWhereUniqueWithoutLearningObjectInput!]
  updateMany: [UserLearningProgressUpdateManyWithWhereWithoutLearningObjectInput!]
  upsert: [UserLearningProgressUpsertWithWhereUniqueWithoutLearningObjectInput!]
}

input UserLearningProgressUpdateManyWithoutPostInput {
  connect: [UserLearningProgressWhereUniqueInput!]
  connectOrCreate: [UserLearningProgressCreateOrConnectWithoutPostInput!]
  create: [UserLearningProgressCreateWithoutPostInput!]
  delete: [UserLearningProgressWhereUniqueInput!]
  deleteMany: [UserLearningProgressScalarWhereInput!]
  disconnect: [UserLearningProgressWhereUniqueInput!]
  set: [UserLearningProgressWhereUniqueInput!]
  update: [UserLearningProgressUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [UserLearningProgressUpdateManyWithWhereWithoutPostInput!]
  upsert: [UserLearningProgressUpsertWithWhereUniqueWithoutPostInput!]
}

input UserLearningProgressUpdateManyWithoutUserInput {
  connect: [UserLearningProgressWhereUniqueInput!]
  connectOrCreate: [UserLearningProgressCreateOrConnectWithoutUserInput!]
  create: [UserLearningProgressCreateWithoutUserInput!]
  delete: [UserLearningProgressWhereUniqueInput!]
  deleteMany: [UserLearningProgressScalarWhereInput!]
  disconnect: [UserLearningProgressWhereUniqueInput!]
  set: [UserLearningProgressWhereUniqueInput!]
  update: [UserLearningProgressUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserLearningProgressUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserLearningProgressUpsertWithWhereUniqueWithoutUserInput!]
}

input UserLearningProgressUpdateManyWithWhereWithoutLearningObjectInput {
  data: UserLearningProgressUpdateManyMutationInput!
  where: UserLearningProgressScalarWhereInput!
}

input UserLearningProgressUpdateManyWithWhereWithoutPostInput {
  data: UserLearningProgressUpdateManyMutationInput!
  where: UserLearningProgressScalarWhereInput!
}

input UserLearningProgressUpdateManyWithWhereWithoutUserInput {
  data: UserLearningProgressUpdateManyMutationInput!
  where: UserLearningProgressScalarWhereInput!
}

input UserLearningProgressUpdateWithoutLearningObjectInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  point: FloatFieldUpdateOperationsInput
  pointType: StringFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutUserLearningProgressInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserLearningProgressInput
}

input UserLearningProgressUpdateWithoutPostInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  LearningObject: LearningObjectUpdateOneRequiredWithoutUserLearningProgressInput
  point: FloatFieldUpdateOperationsInput
  pointType: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserLearningProgressInput
}

input UserLearningProgressUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  LearningObject: LearningObjectUpdateOneRequiredWithoutUserLearningProgressInput
  point: FloatFieldUpdateOperationsInput
  pointType: StringFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutUserLearningProgressInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserLearningProgressUpdateWithWhereUniqueWithoutLearningObjectInput {
  data: UserLearningProgressUpdateWithoutLearningObjectInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressUpdateWithWhereUniqueWithoutPostInput {
  data: UserLearningProgressUpdateWithoutPostInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressUpdateWithWhereUniqueWithoutUserInput {
  data: UserLearningProgressUpdateWithoutUserInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressUpsertWithWhereUniqueWithoutLearningObjectInput {
  create: UserLearningProgressCreateWithoutLearningObjectInput!
  update: UserLearningProgressUpdateWithoutLearningObjectInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressUpsertWithWhereUniqueWithoutPostInput {
  create: UserLearningProgressCreateWithoutPostInput!
  update: UserLearningProgressUpdateWithoutPostInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressUpsertWithWhereUniqueWithoutUserInput {
  create: UserLearningProgressCreateWithoutUserInput!
  update: UserLearningProgressUpdateWithoutUserInput!
  where: UserLearningProgressWhereUniqueInput!
}

input UserLearningProgressWhereInput {
  AND: [UserLearningProgressWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  LearningObject: LearningObjectWhereInput
  learningObjectId: StringFilter
  NOT: [UserLearningProgressWhereInput!]
  OR: [UserLearningProgressWhereInput!]
  point: FloatFilter
  pointType: StringFilter
  Post: PostWhereInput
  postId: StringFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserLearningProgressWhereUniqueInput {
  id: String
}

input UserListRelationFilter {
  every: UserWhereInput
  none: UserWhereInput
  some: UserWhereInput
}

type UserMomentum {
  createdAt: DateTime!
  id: String!
  madeCount: Int!
  momentDay: DateTime!
  MomentumItem: MomentumItem!
  updatedAt: DateTime!
  User: User!
}

input UserMomentumCreateInput {
  createdAt: DateTime
  id: String
  madeCount: Int!
  momentDay: DateTime!
  MomentumItem: MomentumItemCreateNestedOneWithoutUserMomentumInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserMomentumInput!
}

input UserMomentumCreateNestedManyWithoutUserInput {
  connect: [UserMomentumWhereUniqueInput!]
  connectOrCreate: [UserMomentumCreateOrConnectWithoutUserInput!]
  create: [UserMomentumCreateWithoutUserInput!]
}

input UserMomentumCreateOrConnectWithoutUserInput {
  create: UserMomentumCreateWithoutUserInput!
  where: UserMomentumWhereUniqueInput!
}

input UserMomentumCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  madeCount: Int!
  momentDay: DateTime!
  MomentumItem: MomentumItemCreateNestedOneWithoutUserMomentumInput!
  updatedAt: DateTime
}

input UserMomentumListRelationFilter {
  every: UserMomentumWhereInput
  none: UserMomentumWhereInput
  some: UserMomentumWhereInput
}

input UserMomentumScalarWhereInput {
  AND: [UserMomentumScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  madeCount: IntFilter
  momentDay: DateTimeFilter
  momentumItemId: StringFilter
  NOT: [UserMomentumScalarWhereInput!]
  OR: [UserMomentumScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserMomentumUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  madeCount: IntFieldUpdateOperationsInput
  momentDay: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserMomentumUpdateManyWithoutUserInput {
  connect: [UserMomentumWhereUniqueInput!]
  connectOrCreate: [UserMomentumCreateOrConnectWithoutUserInput!]
  create: [UserMomentumCreateWithoutUserInput!]
  delete: [UserMomentumWhereUniqueInput!]
  deleteMany: [UserMomentumScalarWhereInput!]
  disconnect: [UserMomentumWhereUniqueInput!]
  set: [UserMomentumWhereUniqueInput!]
  update: [UserMomentumUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserMomentumUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserMomentumUpsertWithWhereUniqueWithoutUserInput!]
}

input UserMomentumUpdateManyWithWhereWithoutUserInput {
  data: UserMomentumUpdateManyMutationInput!
  where: UserMomentumScalarWhereInput!
}

input UserMomentumUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  madeCount: IntFieldUpdateOperationsInput
  momentDay: DateTimeFieldUpdateOperationsInput
  MomentumItem: MomentumItemUpdateOneRequiredWithoutUserMomentumInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserMomentumUpdateWithWhereUniqueWithoutUserInput {
  data: UserMomentumUpdateWithoutUserInput!
  where: UserMomentumWhereUniqueInput!
}

input UserMomentumUpsertWithWhereUniqueWithoutUserInput {
  create: UserMomentumCreateWithoutUserInput!
  update: UserMomentumUpdateWithoutUserInput!
  where: UserMomentumWhereUniqueInput!
}

input UserMomentumWhereInput {
  AND: [UserMomentumWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  madeCount: IntFilter
  momentDay: DateTimeFilter
  MomentumItem: MomentumItemWhereInput
  momentumItemId: StringFilter
  NOT: [UserMomentumWhereInput!]
  OR: [UserMomentumWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserMomentumWhereUniqueInput {
  id: String
}

type UserOnboard {
  createdAt: DateTime!
  id: String!
  isFinish: Boolean!
  isSeen: Boolean!
  OnboardType: OnboardType!
  updatedAt: DateTime!
  User: User!
  userId: String!
}

input UserOnboardCreateNestedManyWithoutOnboardTypeInput {
  connect: [UserOnboardWhereUniqueInput!]
  connectOrCreate: [UserOnboardCreateOrConnectWithoutOnboardTypeInput!]
  create: [UserOnboardCreateWithoutOnboardTypeInput!]
}

input UserOnboardCreateNestedManyWithoutUserInput {
  connect: [UserOnboardWhereUniqueInput!]
  connectOrCreate: [UserOnboardCreateOrConnectWithoutUserInput!]
  create: [UserOnboardCreateWithoutUserInput!]
}

input UserOnboardCreateOrConnectWithoutOnboardTypeInput {
  create: UserOnboardCreateWithoutOnboardTypeInput!
  where: UserOnboardWhereUniqueInput!
}

input UserOnboardCreateOrConnectWithoutUserInput {
  create: UserOnboardCreateWithoutUserInput!
  where: UserOnboardWhereUniqueInput!
}

input UserOnboardCreateWithoutOnboardTypeInput {
  createdAt: DateTime
  id: String
  isFinish: Boolean
  isSeen: Boolean
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserOnboardInput!
}

input UserOnboardCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  isFinish: Boolean
  isSeen: Boolean
  OnboardType: OnboardTypeCreateNestedOneWithoutUserOnboardInput!
  updatedAt: DateTime
}

input UserOnboardListRelationFilter {
  every: UserOnboardWhereInput
  none: UserOnboardWhereInput
  some: UserOnboardWhereInput
}

input UserOnboardScalarWhereInput {
  AND: [UserOnboardScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isFinish: BoolFilter
  isSeen: BoolFilter
  NOT: [UserOnboardScalarWhereInput!]
  onboardTypeId: StringFilter
  OR: [UserOnboardScalarWhereInput!]
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserOnboardUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isFinish: BoolFieldUpdateOperationsInput
  isSeen: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserOnboardUpdateManyWithoutUserInput {
  connect: [UserOnboardWhereUniqueInput!]
  connectOrCreate: [UserOnboardCreateOrConnectWithoutUserInput!]
  create: [UserOnboardCreateWithoutUserInput!]
  delete: [UserOnboardWhereUniqueInput!]
  deleteMany: [UserOnboardScalarWhereInput!]
  disconnect: [UserOnboardWhereUniqueInput!]
  set: [UserOnboardWhereUniqueInput!]
  update: [UserOnboardUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserOnboardUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserOnboardUpsertWithWhereUniqueWithoutUserInput!]
}

input UserOnboardUpdateManyWithWhereWithoutUserInput {
  data: UserOnboardUpdateManyMutationInput!
  where: UserOnboardScalarWhereInput!
}

input UserOnboardUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isFinish: BoolFieldUpdateOperationsInput
  isSeen: BoolFieldUpdateOperationsInput
  OnboardType: OnboardTypeUpdateOneRequiredWithoutUserOnboardInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserOnboardUpdateWithWhereUniqueWithoutUserInput {
  data: UserOnboardUpdateWithoutUserInput!
  where: UserOnboardWhereUniqueInput!
}

input UserOnboardUpsertWithWhereUniqueWithoutUserInput {
  create: UserOnboardCreateWithoutUserInput!
  update: UserOnboardUpdateWithoutUserInput!
  where: UserOnboardWhereUniqueInput!
}

input UserOnboardWhereInput {
  AND: [UserOnboardWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isFinish: BoolFilter
  isSeen: BoolFilter
  NOT: [UserOnboardWhereInput!]
  OnboardType: OnboardTypeWhereInput
  onboardTypeId: StringFilter
  OR: [UserOnboardWhereInput!]
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserOnboardWhereUniqueInput {
  id: String
}

input UserOrderByInput {
  AcceptedByUser: UserOrderByInput
  acceptedUserId: SortOrder
  bio: SortOrder
  createdAt: SortOrder
  email: SortOrder
  firstName: SortOrder
  id: SortOrder
  isOnboarded: SortOrder
  lastName: SortOrder
  profilePic: SortOrder
  sub: SortOrder
  updatedAt: SortOrder
  userName: SortOrder
}

type UserSavedPosts {
  createdAt: DateTime!
  id: String!
  isPublic: Boolean!
  Post: Post!
  updatedAt: DateTime!
  User: User!
}

input UserSavedPostsCreateInput {
  createdAt: DateTime
  id: String
  isPublic: Boolean!
  Post: PostCreateNestedOneWithoutUserSavedPostsInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserSavedPostsInput!
}

input UserSavedPostsCreateNestedManyWithoutPostInput {
  connect: [UserSavedPostsWhereUniqueInput!]
  connectOrCreate: [UserSavedPostsCreateOrConnectWithoutPostInput!]
  create: [UserSavedPostsCreateWithoutPostInput!]
}

input UserSavedPostsCreateNestedManyWithoutUserInput {
  connect: [UserSavedPostsWhereUniqueInput!]
  connectOrCreate: [UserSavedPostsCreateOrConnectWithoutUserInput!]
  create: [UserSavedPostsCreateWithoutUserInput!]
}

input UserSavedPostsCreateOrConnectWithoutPostInput {
  create: UserSavedPostsCreateWithoutPostInput!
  where: UserSavedPostsWhereUniqueInput!
}

input UserSavedPostsCreateOrConnectWithoutUserInput {
  create: UserSavedPostsCreateWithoutUserInput!
  where: UserSavedPostsWhereUniqueInput!
}

input UserSavedPostsCreateWithoutPostInput {
  createdAt: DateTime
  id: String
  isPublic: Boolean!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserSavedPostsInput!
}

input UserSavedPostsCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  isPublic: Boolean!
  Post: PostCreateNestedOneWithoutUserSavedPostsInput!
  updatedAt: DateTime
}

input UserSavedPostsListRelationFilter {
  every: UserSavedPostsWhereInput
  none: UserSavedPostsWhereInput
  some: UserSavedPostsWhereInput
}

input UserSavedPostsScalarWhereInput {
  AND: [UserSavedPostsScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isPublic: BoolFilter
  NOT: [UserSavedPostsScalarWhereInput!]
  OR: [UserSavedPostsScalarWhereInput!]
  postId: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserSavedPostsUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserSavedPostsUpdateManyWithoutPostInput {
  connect: [UserSavedPostsWhereUniqueInput!]
  connectOrCreate: [UserSavedPostsCreateOrConnectWithoutPostInput!]
  create: [UserSavedPostsCreateWithoutPostInput!]
  delete: [UserSavedPostsWhereUniqueInput!]
  deleteMany: [UserSavedPostsScalarWhereInput!]
  disconnect: [UserSavedPostsWhereUniqueInput!]
  set: [UserSavedPostsWhereUniqueInput!]
  update: [UserSavedPostsUpdateWithWhereUniqueWithoutPostInput!]
  updateMany: [UserSavedPostsUpdateManyWithWhereWithoutPostInput!]
  upsert: [UserSavedPostsUpsertWithWhereUniqueWithoutPostInput!]
}

input UserSavedPostsUpdateManyWithoutUserInput {
  connect: [UserSavedPostsWhereUniqueInput!]
  connectOrCreate: [UserSavedPostsCreateOrConnectWithoutUserInput!]
  create: [UserSavedPostsCreateWithoutUserInput!]
  delete: [UserSavedPostsWhereUniqueInput!]
  deleteMany: [UserSavedPostsScalarWhereInput!]
  disconnect: [UserSavedPostsWhereUniqueInput!]
  set: [UserSavedPostsWhereUniqueInput!]
  update: [UserSavedPostsUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserSavedPostsUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserSavedPostsUpsertWithWhereUniqueWithoutUserInput!]
}

input UserSavedPostsUpdateManyWithWhereWithoutPostInput {
  data: UserSavedPostsUpdateManyMutationInput!
  where: UserSavedPostsScalarWhereInput!
}

input UserSavedPostsUpdateManyWithWhereWithoutUserInput {
  data: UserSavedPostsUpdateManyMutationInput!
  where: UserSavedPostsScalarWhereInput!
}

input UserSavedPostsUpdateWithoutPostInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserSavedPostsInput
}

input UserSavedPostsUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isPublic: BoolFieldUpdateOperationsInput
  Post: PostUpdateOneRequiredWithoutUserSavedPostsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserSavedPostsUpdateWithWhereUniqueWithoutPostInput {
  data: UserSavedPostsUpdateWithoutPostInput!
  where: UserSavedPostsWhereUniqueInput!
}

input UserSavedPostsUpdateWithWhereUniqueWithoutUserInput {
  data: UserSavedPostsUpdateWithoutUserInput!
  where: UserSavedPostsWhereUniqueInput!
}

input UserSavedPostsUpsertWithWhereUniqueWithoutPostInput {
  create: UserSavedPostsCreateWithoutPostInput!
  update: UserSavedPostsUpdateWithoutPostInput!
  where: UserSavedPostsWhereUniqueInput!
}

input UserSavedPostsUpsertWithWhereUniqueWithoutUserInput {
  create: UserSavedPostsCreateWithoutUserInput!
  update: UserSavedPostsUpdateWithoutUserInput!
  where: UserSavedPostsWhereUniqueInput!
}

input UserSavedPostsWhereInput {
  AND: [UserSavedPostsWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  isPublic: BoolFilter
  NOT: [UserSavedPostsWhereInput!]
  OR: [UserSavedPostsWhereInput!]
  Post: PostWhereInput
  postId: StringFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserSavedPostsWhereUniqueInput {
  id: String
}

input UserScalarWhereInput {
  acceptedUserId: StringNullableFilter
  AND: [UserScalarWhereInput!]
  bio: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  firstName: StringNullableFilter
  id: StringFilter
  isOnboarded: BoolFilter
  lastName: StringNullableFilter
  NOT: [UserScalarWhereInput!]
  OR: [UserScalarWhereInput!]
  profilePic: StringNullableFilter
  sub: StringFilter
  updatedAt: DateTimeFilter
  userName: StringNullableFilter
}

type UserSeenStory {
  createdAt: DateTime!
  id: String!
  Story: Story!
  StoryContent: StoryContent!
  updatedAt: DateTime!
  User: User!
}

input UserSeenStoryCreateNestedManyWithoutStoryContentInput {
  connect: [UserSeenStoryWhereUniqueInput!]
  connectOrCreate: [UserSeenStoryCreateOrConnectWithoutStoryContentInput!]
  create: [UserSeenStoryCreateWithoutStoryContentInput!]
}

input UserSeenStoryCreateNestedManyWithoutStoryInput {
  connect: [UserSeenStoryWhereUniqueInput!]
  connectOrCreate: [UserSeenStoryCreateOrConnectWithoutStoryInput!]
  create: [UserSeenStoryCreateWithoutStoryInput!]
}

input UserSeenStoryCreateNestedManyWithoutUserInput {
  connect: [UserSeenStoryWhereUniqueInput!]
  connectOrCreate: [UserSeenStoryCreateOrConnectWithoutUserInput!]
  create: [UserSeenStoryCreateWithoutUserInput!]
}

input UserSeenStoryCreateOrConnectWithoutStoryContentInput {
  create: UserSeenStoryCreateWithoutStoryContentInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryCreateOrConnectWithoutStoryInput {
  create: UserSeenStoryCreateWithoutStoryInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryCreateOrConnectWithoutUserInput {
  create: UserSeenStoryCreateWithoutUserInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryCreateWithoutStoryContentInput {
  createdAt: DateTime
  id: String
  seenDate: DateTime!
  Story: StoryCreateNestedOneWithoutUserSeenStoryInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserSeenStoryInput!
}

input UserSeenStoryCreateWithoutStoryInput {
  createdAt: DateTime
  id: String
  seenDate: DateTime!
  StoryContent: StoryContentCreateNestedOneWithoutUserSeenStoryInput!
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserSeenStoryInput!
}

input UserSeenStoryCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  seenDate: DateTime!
  Story: StoryCreateNestedOneWithoutUserSeenStoryInput!
  StoryContent: StoryContentCreateNestedOneWithoutUserSeenStoryInput!
  updatedAt: DateTime
}

input UserSeenStoryListRelationFilter {
  every: UserSeenStoryWhereInput
  none: UserSeenStoryWhereInput
  some: UserSeenStoryWhereInput
}

input UserSeenStoryScalarWhereInput {
  AND: [UserSeenStoryScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [UserSeenStoryScalarWhereInput!]
  OR: [UserSeenStoryScalarWhereInput!]
  seenDate: DateTimeFilter
  storyContentId: StringFilter
  storyId: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
}

input UserSeenStoryUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  seenDate: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserSeenStoryUpdateManyWithoutStoryContentInput {
  connect: [UserSeenStoryWhereUniqueInput!]
  connectOrCreate: [UserSeenStoryCreateOrConnectWithoutStoryContentInput!]
  create: [UserSeenStoryCreateWithoutStoryContentInput!]
  delete: [UserSeenStoryWhereUniqueInput!]
  deleteMany: [UserSeenStoryScalarWhereInput!]
  disconnect: [UserSeenStoryWhereUniqueInput!]
  set: [UserSeenStoryWhereUniqueInput!]
  update: [UserSeenStoryUpdateWithWhereUniqueWithoutStoryContentInput!]
  updateMany: [UserSeenStoryUpdateManyWithWhereWithoutStoryContentInput!]
  upsert: [UserSeenStoryUpsertWithWhereUniqueWithoutStoryContentInput!]
}

input UserSeenStoryUpdateManyWithoutStoryInput {
  connect: [UserSeenStoryWhereUniqueInput!]
  connectOrCreate: [UserSeenStoryCreateOrConnectWithoutStoryInput!]
  create: [UserSeenStoryCreateWithoutStoryInput!]
  delete: [UserSeenStoryWhereUniqueInput!]
  deleteMany: [UserSeenStoryScalarWhereInput!]
  disconnect: [UserSeenStoryWhereUniqueInput!]
  set: [UserSeenStoryWhereUniqueInput!]
  update: [UserSeenStoryUpdateWithWhereUniqueWithoutStoryInput!]
  updateMany: [UserSeenStoryUpdateManyWithWhereWithoutStoryInput!]
  upsert: [UserSeenStoryUpsertWithWhereUniqueWithoutStoryInput!]
}

input UserSeenStoryUpdateManyWithoutUserInput {
  connect: [UserSeenStoryWhereUniqueInput!]
  connectOrCreate: [UserSeenStoryCreateOrConnectWithoutUserInput!]
  create: [UserSeenStoryCreateWithoutUserInput!]
  delete: [UserSeenStoryWhereUniqueInput!]
  deleteMany: [UserSeenStoryScalarWhereInput!]
  disconnect: [UserSeenStoryWhereUniqueInput!]
  set: [UserSeenStoryWhereUniqueInput!]
  update: [UserSeenStoryUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserSeenStoryUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserSeenStoryUpsertWithWhereUniqueWithoutUserInput!]
}

input UserSeenStoryUpdateManyWithWhereWithoutStoryContentInput {
  data: UserSeenStoryUpdateManyMutationInput!
  where: UserSeenStoryScalarWhereInput!
}

input UserSeenStoryUpdateManyWithWhereWithoutStoryInput {
  data: UserSeenStoryUpdateManyMutationInput!
  where: UserSeenStoryScalarWhereInput!
}

input UserSeenStoryUpdateManyWithWhereWithoutUserInput {
  data: UserSeenStoryUpdateManyMutationInput!
  where: UserSeenStoryScalarWhereInput!
}

input UserSeenStoryUpdateWithoutStoryContentInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  seenDate: DateTimeFieldUpdateOperationsInput
  Story: StoryUpdateOneRequiredWithoutUserSeenStoryInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserSeenStoryInput
}

input UserSeenStoryUpdateWithoutStoryInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  seenDate: DateTimeFieldUpdateOperationsInput
  StoryContent: StoryContentUpdateOneRequiredWithoutUserSeenStoryInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateOneRequiredWithoutUserSeenStoryInput
}

input UserSeenStoryUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  seenDate: DateTimeFieldUpdateOperationsInput
  Story: StoryUpdateOneRequiredWithoutUserSeenStoryInput
  StoryContent: StoryContentUpdateOneRequiredWithoutUserSeenStoryInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserSeenStoryUpdateWithWhereUniqueWithoutStoryContentInput {
  data: UserSeenStoryUpdateWithoutStoryContentInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryUpdateWithWhereUniqueWithoutStoryInput {
  data: UserSeenStoryUpdateWithoutStoryInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryUpdateWithWhereUniqueWithoutUserInput {
  data: UserSeenStoryUpdateWithoutUserInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryUpsertWithWhereUniqueWithoutStoryContentInput {
  create: UserSeenStoryCreateWithoutStoryContentInput!
  update: UserSeenStoryUpdateWithoutStoryContentInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryUpsertWithWhereUniqueWithoutStoryInput {
  create: UserSeenStoryCreateWithoutStoryInput!
  update: UserSeenStoryUpdateWithoutStoryInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryUpsertWithWhereUniqueWithoutUserInput {
  create: UserSeenStoryCreateWithoutUserInput!
  update: UserSeenStoryUpdateWithoutUserInput!
  where: UserSeenStoryWhereUniqueInput!
}

input UserSeenStoryWhereInput {
  AND: [UserSeenStoryWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [UserSeenStoryWhereInput!]
  OR: [UserSeenStoryWhereInput!]
  seenDate: DateTimeFilter
  Story: StoryWhereInput
  StoryContent: StoryContentWhereInput
  storyContentId: StringFilter
  storyId: StringFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
}

input UserSeenStoryWhereUniqueInput {
  id: String
}

type UserSocialNetwork {
  createdAt: DateTime!
  id: String!
  SocialNetwork: SocialNetwork!
  updatedAt: DateTime!
  User: User!
  userName: String!
}

input UserSocialNetworkCreateNestedManyWithoutSocialNetworkInput {
  connect: [UserSocialNetworkWhereUniqueInput!]
  connectOrCreate: [UserSocialNetworkCreateOrConnectWithoutSocialNetworkInput!]
  create: [UserSocialNetworkCreateWithoutSocialNetworkInput!]
}

input UserSocialNetworkCreateNestedManyWithoutUserInput {
  connect: [UserSocialNetworkWhereUniqueInput!]
  connectOrCreate: [UserSocialNetworkCreateOrConnectWithoutUserInput!]
  create: [UserSocialNetworkCreateWithoutUserInput!]
}

input UserSocialNetworkCreateOrConnectWithoutSocialNetworkInput {
  create: UserSocialNetworkCreateWithoutSocialNetworkInput!
  where: UserSocialNetworkWhereUniqueInput!
}

input UserSocialNetworkCreateOrConnectWithoutUserInput {
  create: UserSocialNetworkCreateWithoutUserInput!
  where: UserSocialNetworkWhereUniqueInput!
}

input UserSocialNetworkCreateWithoutSocialNetworkInput {
  createdAt: DateTime
  id: String
  updatedAt: DateTime
  User: UserCreateNestedOneWithoutUserSocialNetworkInput!
  userName: String!
}

input UserSocialNetworkCreateWithoutUserInput {
  createdAt: DateTime
  id: String
  SocialNetwork: SocialNetworkCreateNestedOneWithoutUserSocialNetworkInput!
  updatedAt: DateTime
  userName: String!
}

input UserSocialNetworkListRelationFilter {
  every: UserSocialNetworkWhereInput
  none: UserSocialNetworkWhereInput
  some: UserSocialNetworkWhereInput
}

input UserSocialNetworkScalarWhereInput {
  AND: [UserSocialNetworkScalarWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [UserSocialNetworkScalarWhereInput!]
  OR: [UserSocialNetworkScalarWhereInput!]
  socialNetworkId: StringFilter
  updatedAt: DateTimeFilter
  userId: StringFilter
  userName: StringFilter
}

input UserSocialNetworkUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userName: StringFieldUpdateOperationsInput
}

input UserSocialNetworkUpdateManyWithoutUserInput {
  connect: [UserSocialNetworkWhereUniqueInput!]
  connectOrCreate: [UserSocialNetworkCreateOrConnectWithoutUserInput!]
  create: [UserSocialNetworkCreateWithoutUserInput!]
  delete: [UserSocialNetworkWhereUniqueInput!]
  deleteMany: [UserSocialNetworkScalarWhereInput!]
  disconnect: [UserSocialNetworkWhereUniqueInput!]
  set: [UserSocialNetworkWhereUniqueInput!]
  update: [UserSocialNetworkUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [UserSocialNetworkUpdateManyWithWhereWithoutUserInput!]
  upsert: [UserSocialNetworkUpsertWithWhereUniqueWithoutUserInput!]
}

input UserSocialNetworkUpdateManyWithWhereWithoutUserInput {
  data: UserSocialNetworkUpdateManyMutationInput!
  where: UserSocialNetworkScalarWhereInput!
}

input UserSocialNetworkUpdateWithoutUserInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  SocialNetwork: SocialNetworkUpdateOneRequiredWithoutUserSocialNetworkInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userName: StringFieldUpdateOperationsInput
}

input UserSocialNetworkUpdateWithWhereUniqueWithoutUserInput {
  data: UserSocialNetworkUpdateWithoutUserInput!
  where: UserSocialNetworkWhereUniqueInput!
}

input UserSocialNetworkUpsertWithWhereUniqueWithoutUserInput {
  create: UserSocialNetworkCreateWithoutUserInput!
  update: UserSocialNetworkUpdateWithoutUserInput!
  where: UserSocialNetworkWhereUniqueInput!
}

input UserSocialNetworkWhereInput {
  AND: [UserSocialNetworkWhereInput!]
  createdAt: DateTimeFilter
  id: StringFilter
  NOT: [UserSocialNetworkWhereInput!]
  OR: [UserSocialNetworkWhereInput!]
  SocialNetwork: SocialNetworkWhereInput
  socialNetworkId: StringFilter
  updatedAt: DateTimeFilter
  User: UserWhereInput
  userId: StringFilter
  userName: StringFilter
}

input UserSocialNetworkWhereUniqueInput {
  id: String
}

input UserUpdateInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateManyMutationInput {
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  firstName: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  profilePic: NullableStringFieldUpdateOperationsInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  userName: NullableStringFieldUpdateOperationsInput
}

input UserUpdateManyWithoutAcceptedByUserInput {
  connect: [UserWhereUniqueInput!]
  connectOrCreate: [UserCreateOrConnectWithoutAcceptedByUserInput!]
  create: [UserCreateWithoutAcceptedByUserInput!]
  delete: [UserWhereUniqueInput!]
  deleteMany: [UserScalarWhereInput!]
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  update: [UserUpdateWithWhereUniqueWithoutAcceptedByUserInput!]
  updateMany: [UserUpdateManyWithWhereWithoutAcceptedByUserInput!]
  upsert: [UserUpsertWithWhereUniqueWithoutAcceptedByUserInput!]
}

input UserUpdateManyWithWhereWithoutAcceptedByUserInput {
  data: UserUpdateManyMutationInput!
  where: UserScalarWhereInput!
}

input UserUpdateOneRequiredWithoutFollowedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutFollowedInput
  create: UserCreateWithoutFollowedInput
  update: UserUpdateWithoutFollowedInput
  upsert: UserUpsertWithoutFollowedInput
}

input UserUpdateOneRequiredWithoutPassageInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPassageInput
  create: UserCreateWithoutPassageInput
  update: UserUpdateWithoutPassageInput
  upsert: UserUpsertWithoutPassageInput
}

input UserUpdateOneRequiredWithoutPostCommentsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostCommentsInput
  create: UserCreateWithoutPostCommentsInput
  update: UserUpdateWithoutPostCommentsInput
  upsert: UserUpsertWithoutPostCommentsInput
}

input UserUpdateOneRequiredWithoutPostReactionsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostReactionsInput
  create: UserCreateWithoutPostReactionsInput
  update: UserUpdateWithoutPostReactionsInput
  upsert: UserUpsertWithoutPostReactionsInput
}

input UserUpdateOneRequiredWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostsInput
  create: UserCreateWithoutPostsInput
  update: UserUpdateWithoutPostsInput
  upsert: UserUpsertWithoutPostsInput
}

input UserUpdateOneRequiredWithoutPostViewInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostViewInput
  create: UserCreateWithoutPostViewInput
  update: UserUpdateWithoutPostViewInput
  upsert: UserUpsertWithoutPostViewInput
}

input UserUpdateOneRequiredWithoutStoryInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutStoryInput
  create: UserCreateWithoutStoryInput
  update: UserUpdateWithoutStoryInput
  upsert: UserUpsertWithoutStoryInput
}

input UserUpdateOneRequiredWithoutUserAnswersOnContentsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserAnswersOnContentsInput
  create: UserCreateWithoutUserAnswersOnContentsInput
  update: UserUpdateWithoutUserAnswersOnContentsInput
  upsert: UserUpsertWithoutUserAnswersOnContentsInput
}

input UserUpdateOneRequiredWithoutUserConfigInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserConfigInput
  create: UserCreateWithoutUserConfigInput
  update: UserUpdateWithoutUserConfigInput
  upsert: UserUpsertWithoutUserConfigInput
}

input UserUpdateOneRequiredWithoutUserCurriculumInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserCurriculumInput
  create: UserCreateWithoutUserCurriculumInput
  update: UserUpdateWithoutUserCurriculumInput
  upsert: UserUpsertWithoutUserCurriculumInput
}

input UserUpdateOneRequiredWithoutUserCurriculumRetentionInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserCurriculumRetentionInput
  create: UserCreateWithoutUserCurriculumRetentionInput
  update: UserUpdateWithoutUserCurriculumRetentionInput
  upsert: UserUpsertWithoutUserCurriculumRetentionInput
}

input UserUpdateOneRequiredWithoutUserCurriculumSchoolInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserCurriculumSchoolInput
  create: UserCreateWithoutUserCurriculumSchoolInput
  update: UserUpdateWithoutUserCurriculumSchoolInput
  upsert: UserUpsertWithoutUserCurriculumSchoolInput
}

input UserUpdateOneRequiredWithoutUserFollowInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserFollowInput
  create: UserCreateWithoutUserFollowInput
  update: UserUpdateWithoutUserFollowInput
  upsert: UserUpsertWithoutUserFollowInput
}

input UserUpdateOneRequiredWithoutUserLearningCurriculumInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserLearningCurriculumInput
  create: UserCreateWithoutUserLearningCurriculumInput
  update: UserUpdateWithoutUserLearningCurriculumInput
  upsert: UserUpsertWithoutUserLearningCurriculumInput
}

input UserUpdateOneRequiredWithoutUserLearningProgressInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserLearningProgressInput
  create: UserCreateWithoutUserLearningProgressInput
  update: UserUpdateWithoutUserLearningProgressInput
  upsert: UserUpsertWithoutUserLearningProgressInput
}

input UserUpdateOneRequiredWithoutUserSavedPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserSavedPostsInput
  create: UserCreateWithoutUserSavedPostsInput
  update: UserUpdateWithoutUserSavedPostsInput
  upsert: UserUpsertWithoutUserSavedPostsInput
}

input UserUpdateOneRequiredWithoutUserSeenStoryInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserSeenStoryInput
  create: UserCreateWithoutUserSeenStoryInput
  update: UserUpdateWithoutUserSeenStoryInput
  upsert: UserUpsertWithoutUserSeenStoryInput
}

input UserUpdateOneWithoutUserInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutUserInput
  create: UserCreateWithoutUserInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutUserInput
  upsert: UserUpsertWithoutUserInput
}

input UserUpdateWithoutAcceptedByUserInput {
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutFollowedInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutPassageInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutPostCommentsInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutPostReactionsInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutPostsInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutPostViewInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutStoryInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserAnswersOnContentsInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserConfigInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserCurriculumInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserCurriculumRetentionInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserCurriculumSchoolInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserFollowInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserLearningCurriculumInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserLearningProgressInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserSavedPostsInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSeenStory: UserSeenStoryUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithoutUserSeenStoryInput {
  AcceptedByUser: UserUpdateOneWithoutUserInput
  bio: NullableStringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  Feedback: FeedbackUpdateManyWithoutUserInput
  firstName: NullableStringFieldUpdateOperationsInput
  Followed: UserFollowUpdateManyWithoutFollowedUserInput
  id: StringFieldUpdateOperationsInput
  isOnboarded: BoolFieldUpdateOperationsInput
  lastName: NullableStringFieldUpdateOperationsInput
  Passage: PassageUpdateManyWithoutUserInput
  PostComments: PostCommentsUpdateManyWithoutUserInput
  PostReactions: PostReactionsUpdateManyWithoutUserInput
  Posts: PostUpdateManyWithoutUserInput
  PostView: PostViewUpdateManyWithoutUserInput
  profilePic: NullableStringFieldUpdateOperationsInput
  Roles: RoleUpdateManyWithoutUsersInput
  Story: StoryUpdateManyWithoutUserInput
  sub: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  User: UserUpdateManyWithoutAcceptedByUserInput
  UserActivity: UserActivityUpdateManyWithoutUserInput
  UserAnswersOnContents: UserAnswersOnContentsUpdateManyWithoutUserInput
  UserBadge: UserBadgeUpdateManyWithoutUserInput
  UserCareer: UserCareerUpdateManyWithoutUserInput
  UserConfig: UserConfigUpdateManyWithoutUserInput
  UserCurriculum: UserCurriculumUpdateManyWithoutUserInput
  UserCurriculumRetention: UserCurriculumRetentionUpdateManyWithoutUserInput
  UserCurriculumSchool: UserCurriculumSchoolUpdateManyWithoutUserInput
  UserFollow: UserFollowUpdateManyWithoutUserInput
  UserLearningCurriculum: UserLearningCurriculumUpdateManyWithoutUserInput
  UserLearningProgress: UserLearningProgressUpdateManyWithoutUserInput
  UserMomentum: UserMomentumUpdateManyWithoutUserInput
  userName: NullableStringFieldUpdateOperationsInput
  UserOnboard: UserOnboardUpdateManyWithoutUserInput
  UserSavedPosts: UserSavedPostsUpdateManyWithoutUserInput
  UserSocialNetwork: UserSocialNetworkUpdateManyWithoutUserInput
}

input UserUpdateWithWhereUniqueWithoutAcceptedByUserInput {
  data: UserUpdateWithoutAcceptedByUserInput!
  where: UserWhereUniqueInput!
}

input UserUpsertWithoutFollowedInput {
  create: UserCreateWithoutFollowedInput!
  update: UserUpdateWithoutFollowedInput!
}

input UserUpsertWithoutPassageInput {
  create: UserCreateWithoutPassageInput!
  update: UserUpdateWithoutPassageInput!
}

input UserUpsertWithoutPostCommentsInput {
  create: UserCreateWithoutPostCommentsInput!
  update: UserUpdateWithoutPostCommentsInput!
}

input UserUpsertWithoutPostReactionsInput {
  create: UserCreateWithoutPostReactionsInput!
  update: UserUpdateWithoutPostReactionsInput!
}

input UserUpsertWithoutPostsInput {
  create: UserCreateWithoutPostsInput!
  update: UserUpdateWithoutPostsInput!
}

input UserUpsertWithoutPostViewInput {
  create: UserCreateWithoutPostViewInput!
  update: UserUpdateWithoutPostViewInput!
}

input UserUpsertWithoutStoryInput {
  create: UserCreateWithoutStoryInput!
  update: UserUpdateWithoutStoryInput!
}

input UserUpsertWithoutUserAnswersOnContentsInput {
  create: UserCreateWithoutUserAnswersOnContentsInput!
  update: UserUpdateWithoutUserAnswersOnContentsInput!
}

input UserUpsertWithoutUserConfigInput {
  create: UserCreateWithoutUserConfigInput!
  update: UserUpdateWithoutUserConfigInput!
}

input UserUpsertWithoutUserCurriculumInput {
  create: UserCreateWithoutUserCurriculumInput!
  update: UserUpdateWithoutUserCurriculumInput!
}

input UserUpsertWithoutUserCurriculumRetentionInput {
  create: UserCreateWithoutUserCurriculumRetentionInput!
  update: UserUpdateWithoutUserCurriculumRetentionInput!
}

input UserUpsertWithoutUserCurriculumSchoolInput {
  create: UserCreateWithoutUserCurriculumSchoolInput!
  update: UserUpdateWithoutUserCurriculumSchoolInput!
}

input UserUpsertWithoutUserFollowInput {
  create: UserCreateWithoutUserFollowInput!
  update: UserUpdateWithoutUserFollowInput!
}

input UserUpsertWithoutUserInput {
  create: UserCreateWithoutUserInput!
  update: UserUpdateWithoutUserInput!
}

input UserUpsertWithoutUserLearningCurriculumInput {
  create: UserCreateWithoutUserLearningCurriculumInput!
  update: UserUpdateWithoutUserLearningCurriculumInput!
}

input UserUpsertWithoutUserLearningProgressInput {
  create: UserCreateWithoutUserLearningProgressInput!
  update: UserUpdateWithoutUserLearningProgressInput!
}

input UserUpsertWithoutUserSavedPostsInput {
  create: UserCreateWithoutUserSavedPostsInput!
  update: UserUpdateWithoutUserSavedPostsInput!
}

input UserUpsertWithoutUserSeenStoryInput {
  create: UserCreateWithoutUserSeenStoryInput!
  update: UserUpdateWithoutUserSeenStoryInput!
}

input UserUpsertWithWhereUniqueWithoutAcceptedByUserInput {
  create: UserCreateWithoutAcceptedByUserInput!
  update: UserUpdateWithoutAcceptedByUserInput!
  where: UserWhereUniqueInput!
}

input UserWhereInput {
  AcceptedByUser: UserWhereInput
  acceptedUserId: StringNullableFilter
  AND: [UserWhereInput!]
  bio: StringNullableFilter
  createdAt: DateTimeFilter
  email: StringFilter
  Feedback: FeedbackListRelationFilter
  firstName: StringNullableFilter
  Followed: UserFollowListRelationFilter
  id: StringFilter
  isOnboarded: BoolFilter
  lastName: StringNullableFilter
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  Passage: PassageListRelationFilter
  PostComments: PostCommentsListRelationFilter
  PostReactions: PostReactionsListRelationFilter
  Posts: PostListRelationFilter
  PostView: PostViewListRelationFilter
  profilePic: StringNullableFilter
  Roles: RoleListRelationFilter
  Story: StoryListRelationFilter
  sub: StringFilter
  updatedAt: DateTimeFilter
  User: UserListRelationFilter
  UserActivity: UserActivityListRelationFilter
  UserAnswersOnContents: UserAnswersOnContentsListRelationFilter
  UserBadge: UserBadgeListRelationFilter
  UserCareer: UserCareerListRelationFilter
  UserConfig: UserConfigListRelationFilter
  UserCurriculum: UserCurriculumListRelationFilter
  UserCurriculumRetention: UserCurriculumRetentionListRelationFilter
  UserCurriculumSchool: UserCurriculumSchoolListRelationFilter
  UserFollow: UserFollowListRelationFilter
  UserLearningCurriculum: UserLearningCurriculumListRelationFilter
  UserLearningProgress: UserLearningProgressListRelationFilter
  UserMomentum: UserMomentumListRelationFilter
  userName: StringNullableFilter
  UserOnboard: UserOnboardListRelationFilter
  UserSavedPosts: UserSavedPostsListRelationFilter
  UserSeenStory: UserSeenStoryListRelationFilter
  UserSocialNetwork: UserSocialNetworkListRelationFilter
}

input UserWhereUniqueInput {
  email: String
  id: String
  sub: String
}
